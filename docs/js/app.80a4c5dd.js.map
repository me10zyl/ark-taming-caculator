{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?5b85","webpack:///./src/App.vue?566a","webpack:///src/App.vue","webpack:///./src/App.vue?8b47","webpack:///./src/App.vue","webpack:///./src/components/Ark.vue?7ffe","webpack:///./src/js/arkdata.js","webpack:///./src/js/dinos.js","webpack:///./src/js/date.js","webpack:///./src/js/dododexnames.js","webpack:///src/components/Ark.vue","webpack:///./src/components/Ark.vue?26d5","webpack:///./src/components/Ark.vue","webpack:///./src/components/Filter.vue?094f","webpack:///./src/js/items.js","webpack:///./src/js/category.js","webpack:///./src/js/flow.js","webpack:///src/components/Filter.vue","webpack:///./src/components/Filter.vue?b972","webpack:///./src/components/Filter.vue","webpack:///./src/components/Links.vue?6c0b","webpack:///src/components/Links.vue","webpack:///./src/components/Links.vue?2c47","webpack:///./src/components/Links.vue","webpack:///./src/main.js","webpack:///./src/components/Ark.vue?d42e"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","render","_vm","this","_h","$createElement","_c","_self","attrs","id","to","params","_v","staticRenderFns","Appvue_type_script_lang_js_","[object Object]","src_Appvue_type_script_lang_js_","component","componentNormalizer","App","Arkvue_type_template_id_6b94bf50_scoped_true_render","_m","staticClass","directives","rawName","creature","expression","on","change","$event","$$selectedVal","Array","filter","target","options","selected","map","val","_value","$set","multiple","onChangeUserTamingMul","staticStyle","position","suggestions","filteredOptions","input-props","placeholder","get-suggestion-value","getSuggestionValue","focus","focusMe","click","clickHandler","input","onInputChange","onSelected","scopedSlots","_u","fn","ref","suggestion","_s","item","name_chi","model","callback","$$v","creatureName","font-size","right","top","href","dododexUrl","_e","wikiUrl","domProps","onChangeLevel","composing","tamingmethod","_l","ko","komethod","komethod_chi","koquantities","Head","Body","foods","food","onClickFood","maxfoodamount","timeStr","totaltimeStr","narcoticss","buffertimeStr","differenceStr","color","waitTimeStr","refillTime","refillTimeStr","dateStr","narcotics","margin-left","amount","startTame","display","src","Arkvue_type_template_id_6b94bf50_scoped_true_staticRenderFns","text-align","width","type","checked","$scope","$rootScope","$interval","$cookies","$animate","arkdata_creature","arkdata_creaturedata","getObject","enabled","Mejoberry","affinity","Mejoberry-Kentro","Other Berry","Other Berry-Kentro","Raw Meat","Raw Meat-Arthropluera","Raw Meat-Daeodon","Raw Meat-Thylacoleo","Cooked Meat","Cooked Meat-Daeodon","Cooked Meat-Thylacoleo","Meat Jerky","Prime Meat","Prime Meat-Compsognathus","Prime Meat-Daeodon","Prime Meat-Thylacoleo","C/J Prime","C/J Prime-Daeodon","C/J Prime-Thylacoleo","Spoiled Meat","Mutton","Mutton-Compsognathus","Mutton-Daeodon","Mutton-Thylacoleo","Lamb Chop","Lamb Chop-Daeodon","Lamb Chop-Thylacoleo","Raw Fish","Cooked Fish","Prime Fish","Cooked Prime Fish","Kibble-Generic","Kibble-Bronto","Kibble-Gigantopithecus","Kibble-Griffin","Kibble-Mosasaurus","Kibble-Diplodocus","Kibble-Therizinosaurus","Kibble-Daeodon","Kibble-Megalania","Crop","Rare Mushroom","Plant Species X Seed","Giga Egg","Quetz Egg","Rex Egg","Spino Egg","Bronto Egg","Carno Egg","Dodo Egg","Human Feces","Large Feces","Medium Feces","Small Feces","Angler Gel","Broth of Enlightenment","Rare Flower","Honey-Direbear","komethods","Slingshot","damagetypes","damage","torpor","usesmeleedam","usesweapondam","time","Bow","Crossbow","Longneck","Fists","Club","Electric Prod","Scorpion","Beelzebufo (Main)","Beelzebufo (Secondary)","Pachy (Normal)","Pachy (Charge)","narcoticsmethods","Narcotics","rate","Narcoberries","creatures","Allosaurus","foodrate","basetorpor","basetorporrate","torporperlevel","baseaffinity","affinityperlevel","ineffectbyaff","basefood","kibble","tamingmethods","damagemultipliers","DmgType_Melee_HighTorpidity_StoneWeapon","DmgType_Melee_Human","DmgType_Melee_Dino_Herbivore","hitboxes","Angler","Ankylosaurus","Araneo","nonviolentfoodratemultiplier","nonviolentfoodaffinitymultiplier","Argentavis","DmgType_Projectile","Arthropluera","Beelzebufo","Brontosaurus","Carbonemys","Shell","Tail","Carnotaurus","Castoroides","Compsognathus","Daeodon","Dilophosaurus","Dimetrodon","Dimorphodon","Diplodocus","Direbear","Direwolf","Dodo","Doedicurus","Dung Beetle","Dunkleosteus","DamageType","Gallimimus","Giganotosaurus","Gigantopithecus","Griffin","Ichthyosaurus","Iguanodon","Kairuku","Kentrosaurus","Lystrosaurus","Mammoth","Manta","Megalania","Megaloceros","Megalodon","Mesopithicus","Mosasaurus","Onyc","Oviraptor","Pachycephalosaurus","Paraceratherium","Parasaurolophus","Pelagornis","Phiomia","Plesiosaurus","Procoptodon","Pteranodon","Pulmonoscorpius","Quetzalcoatlus","Raptor","Rex","Sabertooth","Sarcosuchus","Spinosaurus","Stegosaurus","Tapejara","Terror Bird","Therizinosaurus","Thylacoleo","Triceratops","Vulture","Woolly Rhino","pagetitle","tablevisibility","undefined","version","Creature","Food","Tame","Starve","Knockout","showextratamedetails","showanimations","showoldselects","texponent","tcoefficient","basetamingmultiplier","searchname","level","usertamingmultiplier","tamingmultiplier","foodratemultiplier","totalfood","suppliedaffinity","buffertime","max","min","buffernarcotics","narcoticsbuffertime","narcoticsmethod","narcoticstiming","start","Date","topupnarcotics","currenttorpor","intervalid","alarm","alarmthreshold","narcoticstimes","starvetiming","maxfood","currentfood","starvetime","koweapondam","komeleedam","searchkomethod","kotimes","kotorpor","kodamage","showhidetable","table","now","putObject","expires","getFullYear","getMonth","getDate","path","showhideextratamedetails","showhideoldselects","showhideanimations","alert","filterFoods","foodamounts","searchdino","selectdino","knockoutcalc","indexOf","fillfood","resetfoods","narcoticstimer","selectlevel","isNaN","requiredaffinity","torporrate","Math","pow","maxfoodcalc","alltimescalc","foodcalc","starvetimingcalc","settamingmethod","setFillFood","maxfoodamounts","ceil","times","totaltimecalc","effectivenesscalc","totaltime","narcoticscalc","narcoticstimingcalc","suppliedtime","suppliedtorpor","method","supplynarcotic","supplynarcoticamount","narcoticsapplied","audio","Audio","volume","play","cancel","timedfoodamount","scope","tametime","starvetimer","creaturedata","effectiveness","fedfood","extralevels","floor","hitbox","arkdata","dinos","Achatina","Ammonite","Archaeopteryx","Attack Drone","Baryonyx","Basilisk","Basilosaurus","Broodmother Lysrix","Bulbdog","Chalicotherium","Cnidaria","Coelacanth","Deathworm","Defense Unit","Desert Titan","Diplocaulus","Dragon","Dragonfly","Electrophorus","Enforcer","Equus","Eurypterid","Featherlight","Forest Titan","Gacha","Gasbags","Giant Bee","Glowbug","Glowtail","Hesperornis","Hyaenodon","Ice Titan","Ichthyornis","Jerboa","Jugbug","Kaprosuchus","Karkinos","Lamprey","Leech","Leedsichthys","Liopleurodon","Lymantria","Managarmr","Manticore","Mantis","Mega Mek","Megalosaurus","Meganeura","Megapithecus","Megatherium","Mek","Microraptor","Morellatops","Moschops","Nameless","Otter","Overseer","Ovis","Pachyrhinosaurus","Pegomastax","Phoenix","Piranha","Purlovia","Ravager","Reaper","Rock Drake","Rock Elemental","Roll Rat","Sabertooth Salmon","Scout","Seeker","shinehorn","snow Owl","Thorny Dragon","Titanoboa","Titanomyrma","Titanosaur","Trilobite","Troodon","Tusoteuthis","Velonasaur","Wyvern","Yeti","Yutyrannus","formatTimeToStr","pattern","Format","toLocaleString","toHHMMSS","sec_num","hours","minutes","seconds","fmt","M+","d+","h+","getHours","m+","getMinutes","s+","getSeconds","q+","S","getMilliseconds","k","test","replace","RegExp","$1","substr","dododexnames","Anglerfish","dododexName","Arkvue_type_script_lang_js_","knockout","props","created","e","computed","option","toLowerCase","methods","oldLevel","oldUserMul","console","log","arkSelectLevel","text","arkFoodCalc","arkNarcoticsCalc","arkFinalCalc","document","getElementById","elementById","startTameDate","refillTimes","prev","prevDuang","date","getTime","vue_runtime_esm","set","timeout","clearTimeout","setTimeout","duang","assign","waitTime","getElementsByTagName","textContent","arkKoCalc","arkMaxFoodCalc","arkAllTimeCalc","kos","$ko","foods2","forEach","f","index","foods2Element","narcoticsmethodname","$narcotics","arkCalcMazui","mazui","reverse","difference","requireTorpor","leftTime","beforeLeftTime","components_Arkvue_type_script_lang_js_","Ark_component","Ark","Filtervue_type_template_id_57e165d6_scoped_true_render","category","style","margin-right","border","vertical-align","float","align-items","seq","{display","query","Filtervue_type_template_id_57e165d6_scoped_true_staticRenderFns","clear","items","flow","parse","elementId","diagram","flowchart","drawSVG","Filtervue_type_script_lang_js_","categories","stopFoucs","getFilter","mounted","querySelector","self","onblur","addEventListener","which","match","preventDefault","remove","copys","querySelectorAll","onclick","parentNode","previousSibling","copy","init","createElement","innerHTML","body","appendChild","select","execCommand","removeChild","components_Filtervue_type_script_lang_js_","Filter_component","Filter","Linksvue_type_template_id_1948a32b_scoped_true_render","Linksvue_type_template_id_1948a32b_scoped_true_staticRenderFns","Linksvue_type_script_lang_js_","components_Linksvue_type_script_lang_js_","Links_component","Links","use","vue_autosuggest_esm","vue_router_esm","config","productionTip","router","routes","el","h","pageTitle","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Ark_vue_vue_type_style_index_0_id_6b94bf50_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Ark_vue_vue_type_style_index_0_id_6b94bf50_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.80a4c5dd.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',[_c('router-link',{attrs:{\"to\":{name:'filter',params:{key:_vm.value}}}},[_vm._v(\"过滤复制器\")])],1),_c('div',[_c('router-link',{attrs:{\"to\":{name:'taming',params:{key:_vm.value}}}},[_vm._v(\"驯服计算器\")])],1),_c('div',[_c('router-link',{attrs:{\"to\":{name:'links',params:{key:_vm.value}}}},[_vm._v(\"有用的链接(MOD介绍&Wiki)\")])],1),_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div id=\"app\">\n\t\t<!--<img alt=\"Vue logo\" src=\"./assets/logo.png\">-->\n\t\t<!--<HelloWorld msg=\"Welcome to Your Vue.js App\"/>-->\n\t\t<!--    <Ark />-->\n\t\t<div>\n\t\t\t<router-link  :to=\"{name:'filter',params:{key:value}}\">过滤复制器</router-link>\n\t\t</div>\n\t\t<div>\n\t\t\t<router-link :to=\"{name:'taming',params:{key:value}}\">驯服计算器</router-link>\n\t\t</div>\n\t\t<div>\n\t\t\t<router-link :to=\"{name:'links',params:{key:value}}\">有用的链接(MOD介绍&Wiki)</router-link>\n\t\t</div>\n\t\t<router-view></router-view>\n\t</div>\n</template>\n\n\n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {}\n\t\t}\n\t}\n</script>\n\n<style>\n\t#app {\n\t\tfont-family: 'Avenir', Helvetica, Arial, sans-serif;\n\t\t-webkit-font-smoothing: antialiased;\n\t\t-moz-osx-font-smoothing: grayscale;\n\t\t/*text-align: center;*/\n\t\tcolor: #2c3e50;\n\t\tmargin-top: 60px;\n\t}\n\n\tinput {\n\t\twidth: 260px;\n\t\tpadding: 0.2rem;\n\t\tborder-radius: 5px;\n\t\tbox-shadow: #999999 1px 1px 1px;\n\t}\n\n\tul {\n\t\twidth: 100%;\n\t\tcolor: rgba(30, 39, 46, 1.0);\n\t\tlist-style: none;\n\t\tmargin: 0;\n\t\tpadding: 0.5rem 0 .5rem 0;\n\t}\n\n\tli {\n\t\tmargin: 0 0 0 0;\n\t\tborder-radius: 5px;\n\t\tpadding: 0.75rem 0 0.75rem 0.75rem;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\tli:hover {\n\t\tcursor: pointer;\n\t}\n\n\t.autosuggest-container {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\twidth: 280px;\n\t}\n\n\t.autosuggest__results-container {\n\t\tposition: absolute;\n\t\tbackground: wheat;\n\t\twidth: 270px;\n\t}\n\n\t#autosuggest {\n\t\twidth: 100%;\n\t\tdisplay: block;\n\t}\n\n\t.autosuggest__results-item--highlighted {\n\t\tbackground-color: rgba(51, 217, 178, 0.2);\n\t}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=c7239714&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"main\"}},[_vm._m(0),_c('div',[_vm._m(1),_c('div',{staticClass:\"list\"},[_c('div',{staticClass:\"row\"},[_c('label',[_vm._v(\"倍率：\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.creature.usertamingmultiplier),expression:\"creature.usertamingmultiplier\"}],on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.creature, \"usertamingmultiplier\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},_vm.onChangeUserTamingMul]}},[_c('option',{attrs:{\"value\":\"3\"}},[_vm._v(\"官服毁灭服(3倍)\")]),_c('option',{attrs:{\"value\":\"1\"}},[_vm._v(\"官服(1倍)\")])])]),_c('div',{staticClass:\"row\",staticStyle:{\"position\":\"relative\"}},[_c('label',[_vm._v(\"生物：\")]),_c('div',{staticClass:\"input autosuggest-container\"},[_c('vue-autosuggest',{attrs:{\"suggestions\":_vm.filteredOptions,\"input-props\":{id:'autosuggest__input', placeholder:'恐龙'},\"get-suggestion-value\":_vm.getSuggestionValue},on:{\"focus\":_vm.focusMe,\"click\":_vm.clickHandler,\"input\":_vm.onInputChange,\"selected\":_vm.onSelected},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar suggestion = ref.suggestion;\nreturn [_c('span',{staticClass:\"my-suggestion-item\"},[_vm._v(_vm._s(suggestion.item.name_chi)+\"(\"+_vm._s(suggestion.item.name)+\")\")])]}}]),model:{value:(_vm.creatureName),callback:function ($$v) {_vm.creatureName=$$v},expression:\"creatureName\"}})],1),(_vm.creature.name)?_c('span',{staticStyle:{\"font-size\":\"10px\",\"position\":\"absolute\",\"right\":\"80px\",\"top\":\"6px\"}},[_c('a',{attrs:{\"href\":_vm.dododexUrl,\"target\":\"_blank\",\"id\":\"dododexUrl\"}},[_vm._v(\"dododex\")])]):_vm._e(),(_vm.creature.name)?_c('span',{staticStyle:{\"font-size\":\"10px\",\"position\":\"absolute\",\"right\":\"50px\",\"top\":\"6px\"}},[_c('a',{attrs:{\"href\":_vm.wikiUrl,\"target\":\"_blank\",\"id\":\"wikiUrl\"}},[_vm._v(\"wiki\")])]):_vm._e()]),_c('div',{staticClass:\"row\"},[_c('label',[_vm._v(\"等级：\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.creature.level),expression:\"creature.level\"}],domProps:{\"value\":(_vm.creature.level)},on:{\"change\":_vm.onChangeLevel,\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.creature, \"level\", $event.target.value)}}})])])]),(_vm.creature.tamingmethod == 'Standard')?_c('div',[_vm._m(2),_c('div',{staticClass:\"list-table\"},_vm._l((_vm.creature.kos),function(ko){return _c('div',{key:ko.komethod,staticClass:\"row\"},[_c('label',[_vm._v(_vm._s(ko.komethod_chi))]),(ko.koquantities.Head)?_c('span',[_vm._v(\"\\n                        头 : \"+_vm._s(ko.koquantities.Head)+\"\\n                    \")]):_vm._e(),(ko.koquantities.Body)?_c('span',[_vm._v(\"\\n                        身体 : \"+_vm._s(ko.koquantities.Body)+\"\\n                    \")]):_vm._e()])}),0)]):_vm._e(),(_vm.creature && _vm.creature.foods && _vm.creature.foods.length > 0)?_c('div',[_c('div',{staticClass:\"title\"},[_c('h3',[_vm._v(\"\\n                    食物详情\\n                    \"),(this.creature.tamingmethod == 'Non-Violent')?_c('span',[_vm._v(\"\\n                        (非暴力驯服 - 由于数据不准，仅供参考， 请参照\"),_c('a',{attrs:{\"href\":_vm.dododexUrl,\"target\":\"_blank\",\"id\":\"dododexUrl2\"}},[_vm._v(\"DODODEX\")]),_vm._v(\"上的详细信息)\\n                    \")]):_vm._e()])]),_c('div',{staticClass:\"list-table\"},_vm._l((_vm.creature.foods2),function(food){return _c('div',{key:food.name,staticClass:\"row\"},[_c('label',[_c('a',{attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.onClickFood(food)}}},[_vm._v(_vm._s(food.name_chi))])]),_c('span',[_vm._v(\"\\n                        \"+_vm._s(food.maxfoodamount)+\"\\n                    \")]),_c('span',[_vm._v(\"\\n                        \"+_vm._s(food.timeStr)+\"\\n                    \")])])}),0)]):_vm._e(),(_vm.creature.tamingmethod == 'Standard')?_c('div',[_vm._m(3),_c('div',{staticClass:\"list-table\"},[_c('div',{staticClass:\"row\"},[_c('label',[_vm._v(\"选择的食物：\")]),_vm._v(_vm._s(_vm.creature.food)+\"\\n                \")]),_c('div',{staticClass:\"row\"},[_c('label',[_vm._v(\"总时间：\")]),_vm._v(\" \"+_vm._s(_vm.creature.totaltimeStr)+\"\\n                \")]),_c('div',{staticClass:\"row\"},[_c('label',[_vm._v(\"苏醒时间：\")]),_vm._v(_vm._s(_vm.creature.narcoticss && _vm.creature.narcoticss[0].buffertimeStr)+\"\\n                \")])])]):_vm._e(),(_vm.creature.tamingmethod == 'Standard')?_c('div',[_vm._m(4),_c('div',{staticClass:\"list-table\"},[_c('div',{staticClass:\"row\"},[_c('span',[_vm._v(\"清醒与麻醉时间差：\")]),_c('span',[_vm._v(\"\\n                        \"+_vm._s(_vm.creature.differenceStr)+\"\\n                    \")]),(_vm.creature.waitTimeStr)?_c('span',{staticStyle:{\"color\":\"#ff0064\"}},[_vm._v(\"\\n                        \"+_vm._s(_vm.creature.waitTimeStr)+\"\\n                    \")]):_vm._e()]),_vm._l((_vm.creature.refillTimes),function(refillTime){return _c('div',{staticClass:\"row primary\",staticStyle:{\"font-size\":\"14px\"}},[_c('span',[_vm._v(\"喂麻药时间:\"+_vm._s(refillTime.refillTimeStr))]),(refillTime.dateStr)?_c('span',[_c('span',{staticStyle:{\"color\":\"#ff0064\"}},[_vm._v(_vm._s(refillTime.dateStr))])]):_vm._e(),_vm._l((refillTime.narcotics),function(narcotics){return _c('span',{staticStyle:{\"margin-left\":\"2px\"}},[_c('span',[_vm._v(\"(\"+_vm._s(narcotics.name_chi)),_c('span',{staticStyle:{\"color\":\"darkred\"}},[_vm._v(\" \"+_vm._s(narcotics.amount)+\" \")]),_vm._v(\"个)\")])])})],2)})],2)]):_vm._e(),(_vm.creature.tamingmethod == 'Standard')?_c('div',{staticClass:\"start\"},[_c('button',{on:{\"click\":_vm.startTame}},[_vm._v(\"开始驯服\")]),_vm._m(5)]):_vm._e(),_c('audio',{staticStyle:{\"display\":\"none\"},attrs:{\"src\":\"/bell.mp3\",\"id\":\"bell\"}})])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('h4',[_vm._v(\"yilnz's 方舟驯服计算器\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"title\"},[_c('h3',[_vm._v(\"\\n                    生物详情\\n                \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"title\"},[_c('h3',[_vm._v(\"\\n                    击晕\\n                \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"title\"},[_c('h3',[_vm._v(\"\\n                    驯服详情\\n                \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"title\"},[_c('h3',[_vm._v(\"\\n                    总结\\n                \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticStyle:{\"margin-left\":\"15px\",\"font-size\":\"10px\"}},[_c('input',{staticStyle:{\"width\":\"inherit\"},attrs:{\"type\":\"checkbox\",\"id\":\"bellOption\",\"checked\":\"checked\"}}),_vm._v(\"喂麻药闹铃提醒\\n            \")])}]\n\nexport { render, staticRenderFns }","let $scope , $rootScope , $interval , $cookies , $animate;\n$scope =  $rootScope = $interval = $cookies = $animate = {};\n\n//window.$scope = $scope;\nlet creature;\nlet creaturedata;\n\n\n$cookies = {\n    getObject : function(){\n        return 'undefined';\n    }\n}\n\n$animate = {\n    enabled : function(){\n        return false;\n    }\n}\n\n$scope.foods = {\n\n    'Mejoberry': {\n        name_chi : '紫果子',\n        food: 30,\n        affinity: 30\n    },\n    'Mejoberry-Kentro': {\n        name_chi : 'Mejoberry-Kentro',\n        food: 30,\n        affinity: 10\n    },\n    'Other Berry': {\n        name_chi : '其他果子',\n        food: 20,\n        affinity: 20\n    },\n    'Other Berry-Kentro': {\n        name_chi : 'Other Berry-Kentro',\n        food: 20,\n        affinity: 7\n    },\n    'Raw Meat': {\n        name_chi : '生肉',\n        food: 50,\n        affinity: 50\n    },\n    'Raw Meat-Arthropluera': {\n        name_chi : 'Raw Meat-Arthropluera',\n        food: 15,\n        affinity: 15\n    },\n    'Raw Meat-Daeodon': {\n        name_chi : 'Raw Meat-Daeodon',\n        food: 10,\n        affinity: 10\n    },\n    'Raw Meat-Thylacoleo': {\n        name_chi :'Raw Meat-Thylacoleo',\n        food: 50,\n        affinity: 10\n    },\n    'Cooked Meat': {\n        name_chi : '熟肉',\n        food: 25,\n        affinity: 25\n    },\n    'Cooked Meat-Daeodon': {\n        name_chi : 'Cooked Meat-Daeodon',\n        food: 25,\n        affinity: 5\n    },\n    'Cooked Meat-Thylacoleo': {\n        name_chi : 'Cooked Meat-Thylacoleo',\n        food: 25,\n        affinity: 20\n    },\n    'Meat Jerky': {\n        name_chi : '肉干',\n        food: 25,\n        affinity: 25\n    },\n    'Prime Meat': {\n        name_chi : '大腿肉',\n        food: 50,\n        affinity: 150\n    },\n    'Prime Meat-Compsognathus': {\n        name_chi : 'Prime Meat-Compsognathus',\n        food: 20,\n        affinity: 600\n    },\n    'Prime Meat-Daeodon': {\n        food: 50,\n        affinity: 30\n    },\n    'Prime Meat-Thylacoleo': {\n        food: 50,\n        affinity: 20\n    },\n    'C/J Prime': {\n        name_chi : '煮熟/风干 大腿肉',\n        food: 50,\n        affinity: 75\n    },\n    'C/J Prime-Daeodon': {\n        food: 49.945,\n        affinity: 15\n    },\n    'C/J Prime-Thylacoleo': {\n        food: 49.945,\n        affinity: 35\n    },\n    'Spoiled Meat': {\n        name_chi : '腐肉',\n        food: 50,\n        affinity: 100\n    },\n    'Mutton': {\n        name_chi : '羊肉',\n        food: 50,\n        affinity: 187.5\n    },\n    'Mutton-Compsognathus': {\n        food: 20,\n        affinity: 750\n    },\n    'Mutton-Daeodon': {\n        food: 50,\n        affinity: 37.5\n    },\n    'Mutton-Thylacoleo': {\n        food: 50,\n        affinity: 25\n    },\n    'Lamb Chop': {\n        name_chi : '熟羊肉',\n        food: 49.945,\n        affinity: 101.25\n    },\n    'Lamb Chop-Daeodon': {\n        food: 49.945,\n        affinity: 20.25\n    },\n    'Lamb Chop-Thylacoleo': {\n        food: 49.945,\n        affinity: 47.25\n    },\n    'Raw Fish': {\n        name_chi : '生鱼肉',\n        food: 25,\n        affinity: 20\n    },\n    'Cooked Fish': {\n        name_chi : '熟鱼肉',\n        food: 25,\n        affinity: 10\n    },\n    'Prime Fish': {\n        name_chi : '精英鱼肉',\n        food: 25,\n        affinity: 60\n    },\n    'Cooked Prime Fish': {\n        name_chi : '熟精英鱼肉',\n        food: 25,\n        affinity: 30\n    },\n    'Kibble-Generic': {\n        name_chi : '普通饲料',\n        food: 79.98,\n        affinity: 400\n    },\n    'Kibble-Bronto': {\n        food: 53.28,\n        affinity: 400\n    },\n    'Kibble-Gigantopithecus': {\n        food: 79.98,\n        affinity: 300\n    },\n    \"Kibble-Griffin\": {\n        food: 80,\n        affinity: 550\n    },\n    'Kibble-Mosasaurus': {\n        food: 79.98,\n        affinity: 550\n    },\n    'Kibble-Diplodocus': {\n        food: 53.28,\n        affinity: 275\n    },\n    'Kibble-Therizinosaurus': {\n        food: 119.97,\n        affinity: 400\n    },\n    'Kibble-Daeodon': {\n        food: 119.97,\n        affinity: 400\n    },\n    'Kibble-Megalania': {\n        food: 119.97,\n        affinity: 400\n    },\n    'Crop': {\n        name_chi : '农作物',\n        food: 40,\n        affinity: 40\n    },\n    'Rare Mushroom': {\n        name_chi : '稀有蘑菇',\n        food: 75,\n        affinity: 90\n    },\n    'Plant Species X Seed': {\n        name_chi : 'X异种种子',\n        food: 50,\n        affinity: 45\n    },\n    'Giga Egg': {\n        food: 300,\n        affinity: 1200\n    },\n    'Quetz Egg': {\n        food: 200,\n        affinity: 550\n    },\n    'Rex Egg': {\n        food: 200,\n        affinity: 100\n    },\n    'Spino Egg': {\n        food: 137.5,\n        affinity: 80\n    },\n    'Bronto Egg': {\n        food: 250,\n        affinity: 60\n    },\n    'Carno Egg': {\n        food: 137.5,\n        affinity: 30\n    },\n    'Dodo Egg': {\n        food: 20,\n        affinity: 9\n    },\n    'Human Feces': {\n        name_chi : '人类粪便',\n        food: 10,\n        affinity: 60\n    },\n    'Large Feces': {\n        name_chi : '大型动物粪便',\n        food: 37.5,\n        affinity: 225\n    },\n    'Medium Feces': {\n        name_chi : '中型动物粪便',\n        food: 25,\n        affinity: 150\n    },\n    'Small Feces': {\n        name_chi : '小型动物粪便',\n        food: 12.5,\n        affinity: 75\n    },\n    'Angler Gel': {\n        food: 24,\n        affinity: 50.0\n    },\n    'Broth of Enlightenment': {\n        food: 80,\n        affinity: 1500.0\n    },\n    'Rare Flower': {\n        name_chi : '稀有花朵',\n        food: 34.9995,\n        affinity: 200\n    },\n    'Honey-Direbear': {\n        name_chi : '恐熊蜂蜜',\n        food: 80,\n        affinity: 400\n    }\n\n}\n\n$scope.komethods = {\n\n    /*'Bow': 20*2+20*2.5,\n        'Crossbow': 35*2+35*2.5,\n        'Longneck': 26*6+26*2.5*/\n\n    'Slingshot': {\n        name_chi : '弹弓',\n        damagetypes: [\n            \"DmgType_ProjectileWithImpactFX_DoubleTorp\",\n            \"DmgType_ProjectileWithImpactFX\",\n            \"DmgType_Projectile\"\n        ],\n        damage: 14,\n        torpor: 14 * 1.75,\n        usesmeleedam: false,\n        usesweapondam: true,\n        time: 0\n    },\n    'Bow': {\n        name_chi : '弓',\n        damagetypes: [\n            \"DmgType_ProjectileWithImpactFX_Tranq\",\n            \"DmgType_ProjectileWithImpactFX\",\n            \"DmgType_Projectile\"\n        ],\n        damage: 20,\n        torpor: 20 * 2 + 20 * 2.5,\n        usesmeleedam: false,\n        usesweapondam: true,\n        time: 5\n    },\n\n    'Crossbow': {\n        name_chi : '十字弩',\n        damagetypes: [\n            \"DmgType_ProjectileWithImpactFX_Tranq\",\n            \"DmgType_ProjectileWithImpactFX\",\n            \"DmgType_Projectile\"\n        ],\n        damage: 35,\n        torpor: 35 * 2 + 35 * 2.5,\n        usesmeleedam: false,\n        usesweapondam: true,\n        time: 5\n    },\n\n    'Longneck': {\n        name_chi :'长管步枪',\n        damagetypes: [\n            \"DmgType_ProjectileWithImpactFX_TranqMore\",\n            \"DmgType_ProjectileWithImpactFX\",\n            \"DmgType_Projectile\"\n        ],\n        damage: 26,\n        torpor: 26 * 6 + 26 * 2.5,\n        usesmeleedam: false,\n        usesweapondam: true,\n        time: 5\n    },\n    'Fists': {\n        name_chi :'拳头',\n        damagetypes: [\n            \"DmgType_Melee_Torpidity_SelfHurt\",\n            \"DmgType_Melee_Torpidity_StoneWeapon\",\n            \"DmgType_Melee_Torpidity\",\n            \"DmgType_Melee_Human\",\n            \"DmgType_Melee\"\n        ],\n        damage: 8,\n        torpor: 8 * 1.75,\n        usesmeleedam: true,\n        usesweapondam: false,\n        time: 0\n    },\n    'Club': {\n        name_chi :'棒子',\n        damagetypes: [\n            \"DmgType_Melee_HighTorpidity_StoneWeapon_Club\",\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\",\n            \"DmgType_Melee_Torpidity_StoneWeapon\",\n            \"DmgType_Melee_Torpidity\",\n            \"DmgType_Melee_Human\",\n            \"DmgType_Melee\"\n        ],\n        damage: 5,\n        torpor: 5 * 3.75,\n        usesmeleedam: true,\n        usesweapondam: true,\n        time: 0\n    },\n    'Electric Prod': {\n        name_chi :'电击棒',\n        damagetypes: [\n            \"DmgType_Melee_Human_ElectricStun\",\n            \"DmgType_Melee_Human\",\n            \"DmgType_Melee\"\n        ],\n        damage: 1,\n        torpor: 1 * 500,\n        usesmeleedam: false,\n        usesweapondam: true,\n        time: 0\n    },\n    'Scorpion': {\n        name_chi : '巨蝎',\n        damagetypes: [\n            \"DmgType_Melee_TorpPoison\",\n            \"DmgType_Melee_Dino_Carnivore_Small\",\n            \"DmgType_Melee_Dino_Carnivore\",\n            \"DmgType_Melee_Dino\",\n            \"DmgType_Melee\"\n        ],\n        damage: 15,\n        torpor: 15 * 3,\n        usesmeleedam: true,\n        usesweapondam: false,\n        time: 10\n    },\n    'Beelzebufo (Main)': {\n        name_chi : '魔鬼蛙(主攻击)',\n        damagetypes: [\n            \"DmgType_Melee_TorpPoison_ChitinPaste\",\n            \"DmgType_Melee_TorpPoison\",\n            \"DmgType_Melee_Dino_Carnivore_Small\",\n            \"DmgType_Melee_Dino_Carnivore\",\n            \"DmgType_Melee_Dino\",\n            \"DmgType_Melee\"\n        ],\n        damage: 12,\n        torpor: 12 * 3,\n        usesmeleedam: true,\n        usesweapondam: false,\n        time: 10\n    },\n    'Beelzebufo (Secondary)': {\n        name_chi : '魔鬼蛙(副攻击)',\n        damagetypes: [\n            \"DmgType_Melee_TorpPoison_ChitinPaste\",\n            \"DmgType_Melee_TorpPoison\",\n            \"DmgType_Melee_Dino_Carnivore_Small\",\n            \"DmgType_Melee_Dino_Carnivore\",\n            \"DmgType_Melee_Dino\",\n            \"DmgType_Melee\"\n        ],\n        damage: 20,\n        torpor: 20 * 3,\n        usesmeleedam: true,\n        usesweapondam: false,\n        time: 10\n    },\n    'Pachy (Normal)': {\n        name_chi : '肿头龙(普通攻击)',\n        damagetypes: [\n            \"DmgType_Melee_Dino_Herbivore_Small_LargeTorp\",\n            \"DmgType_Melee_Dino_Herbivore_Small\",\n            \"DmgType_Melee_Dino_Herbivore\",\n            \"DmgType_Melee_Dino\",\n            \"DmgType_Melee\"\n        ],\n        damage: 10,\n        torpor: 10 * 1,\n        usesmeleedam: true,\n        usesweapondam: false,\n        time: 0\n    },\n    'Pachy (Charge)': {\n        name_chi : '肿头龙(蓄力攻击)',\n        damagetypes: [\n            \"DmgType_Melee_Dino_Herbivore_Small_HugeTorp\",\n            \"DmgType_Melee_Dino_Herbivore_Small\",\n            \"DmgType_Melee_Dino_Herbivore\",\n            \"DmgType_Melee_Dino\",\n            \"DmgType_Melee\"\n        ],\n        damage: 17,\n        torpor: 17 * 3.5,\n        usesmeleedam: true,\n        usesweapondam: false,\n        time: 0\n    }\n\n};\n\n$scope.narcoticsmethods = {\n    \"Narcotics\": {\n        name_chi : '麻醉药',\n        torpor: 40,\n        time: 8,\n        rate: 5\n    },\n    \"Narcoberries\": {\n        name_chi : '黑果子',\n        torpor: 7.5,\n        time: 3,\n        rate: 2.5\n    }\n}\n\n$scope.creatures = {\n\n    Allosaurus: {\n        foodrate: -0.001852 * 180.063385,\n        basetorpor: 1000.0,\n        basetorporrate: -0.1 * 8.0,\n        torporperlevel: 0.06,\n        baseaffinity: 2400.0,\n        affinityperlevel: 100,\n        ineffectbyaff: 1.875,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Diplo',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Angler: {\n        foodrate: -0.001852 * 149.988007,\n        basetorpor: 900,\n        basetorporrate: -7.0 * 0.4,\n        torporperlevel: 0.06,\n        baseaffinity: 1800.0,\n        affinityperlevel: 90,\n        ineffectbyaff: 2.5,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Kairuku',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Ankylosaurus: {\n        foodrate: -0.003156 * 176.03154,\n        basetorpor: 420,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 3000,\n        affinityperlevel: 150,\n        ineffectbyaff: 0.2,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Dilo',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Araneo: {\n        foodrate: -0.001736 * 864.055298,\n        baseaffinity: 4000,\n        affinityperlevel: 120,\n        ineffectbyaff: 4.166667,\n        basefood: 'Spoiled Meat',\n        foods: ['Spoiled Meat'],\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 2.0,\n        nonviolentfoodaffinitymultiplier: 1.0\n    },\n\n    Argentavis: {\n        foodrate: -0.001852 * 199.983994,\n        basetorpor: 600,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 2000,\n        affinityperlevel: 100,\n        ineffectbyaff: 1.875,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Stego',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Projectile\": 1.5,\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Arthropluera: {\n        foodrate: -0.001543 * 648.088135,\n        baseaffinity: 3000.0,\n        affinityperlevel: 75.0,\n        ineffectbyaff: 2.5,\n        basefood: 'Spoiled Meat',\n        foods: ['Raw Meat-Arthropluera', 'Spoiled Meat', 'Broth of Enlightenment'],\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 2.0,\n        nonviolentfoodaffinitymultiplier: 1.6\n    },\n\n    Beelzebufo: {\n        foodrate: -0.001929 * 648.00415,\n        basetorpor: 200,\n        basetorporrate: -0.1 * 6.666,\n        torporperlevel: 0.06,\n        baseaffinity: 1800.000,\n        affinityperlevel: 75,\n        ineffectbyaff: 0.4,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Scorp',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Brontosaurus: {\n        foodrate: -0.007716 * 180.001144,\n        basetorpor: 1900,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 10000,\n        affinityperlevel: 500,\n        ineffectbyaff: 0.06,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Bronto'],\n        kibble: 'Turtle',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Carbonemys: {\n        foodrate: -0.003156 * 352.06308,\n        basetorpor: 275,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 3000,\n        affinityperlevel: 150,\n        ineffectbyaff: 0.2,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Ptera',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Shell\": 0.2,\n            \"Tail\": 0.5\n        }\n    },\n\n    Carnotaurus: {\n        foodrate: -0.001852 * 199.983944,\n        basetorpor: 350,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 2000,\n        affinityperlevel: 100,\n        ineffectbyaff: 1.875,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Ankylo',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Castoroides: {\n        foodrate: -0.002314 * 160.056335,\n        basetorpor: 350,\n        basetorporrate: -0.1 * 15.0,\n        torporperlevel: 0.06,\n        baseaffinity: 2000,\n        affinityperlevel: 100,\n        ineffectbyaff: 0.3,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Galli',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Compsognathus: {\n        foodrate: -0.000868 * 1728.110596,\n        basetorpor: 25,\n        basetorporrate: -0.1 * 13.0,\n        torporperlevel: 0.06,\n        baseaffinity: 500.0,\n        affinityperlevel: 65.0,\n        ineffectbyaff: 8.333333,\n        basefood: 'Prime Meat-Compsognathus',\n        foods: ['Prime Meat-Compsognathus', 'Mutton-Compsognathus'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Daeodon: {\n        foodrate: -0.01 * 288.039185,\n        basetorpor: 800.0,\n        basetorporrate: -0.6 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 4500,\n        affinityperlevel: 245.0,\n        ineffectbyaff: 0.0625,\n        basefood: 'Raw Meat-Daeodon',\n        foods: ['Raw Meat-Daeodon', 'Prime Meat-Daeodon', 'C/J Prime-Daeodon', 'Mutton-Daeodon', 'Lamb Chop-Daeodon', 'Kibble-Daeodon'],\n        kibble: 'Iguanodon',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Dilophosaurus: {\n        foodrate: -0.000868 * 1728.110596,\n        basetorpor: 75,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 450,\n        affinityperlevel: 22.5,\n        ineffectbyaff: 8.333333,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Dimetrodon: {\n        foodrate: -0.001736 * 160.010239,\n        basetorpor: 750.0,\n        basetorporrate: -10.0 * 2.5,\n        torporperlevel: 0.06,\n        baseaffinity: 1500.0,\n        affinityperlevel: 90.0,\n        ineffectbyaff: 2.5,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Quetzal',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Dimorphodon: {\n        foodrate: -0.001302 * 1152.07373,\n        basetorpor: 100,\n        basetorporrate: -0.1 * 8.333,\n        torporperlevel: 0.06,\n        baseaffinity: 900,\n        affinityperlevel: 45,\n        ineffectbyaff: 4.166666,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Diplodocus: {\n        foodrate: -0.007716 * 180.001144,\n        basetorpor: 3000.0,\n        basetorporrate: -1 * 0.75,\n        torporperlevel: 0.06,\n        baseaffinity: 7500.0,\n        affinityperlevel: 375.0,\n        ineffectbyaff: 0.08,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Diplodocus'],\n        kibble: 'Lystrosaurus',\n        tamingmethods: ['Standard', 'Non-Violent'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        },\n        nonviolentfoodratemultiplier: 0.5, //2 in devkit\n        nonviolentfoodaffinitymultiplier: 3.0\n    },\n\n    \"Direbear\": {\n        foodrate: -0.003156 * 150.0,\n        basetorpor: 1000,\n        basetorporrate: -0.1 * 9.0,\n        torporperlevel: 0.06,\n        baseaffinity: 4000,\n        affinityperlevel: 125,\n        ineffectbyaff: 1.25,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Honey-Direbear', 'Mejoberry', 'Other Berry', 'Kibble-Generic'],\n        kibble: 'Carno',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    \"Direwolf\": {\n        foodrate: -0.001543 * 288.039185,\n        basetorpor: 450,\n        basetorporrate: -0.1 * 5.0,\n        torporperlevel: 0.06,\n        baseaffinity: 1200,\n        affinityperlevel: 60,\n        ineffectbyaff: 3.125,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Carno',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 2.5\n        }\n    },\n\n    Dodo: {\n        foodrate: -0.000868 * 2880.184326,\n        basetorpor: 30,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 450,\n        affinityperlevel: 22.5,\n        ineffectbyaff: 1.333333,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Doedicurus: {\n        foodrate: -0.003156 * 176.03154,\n        basetorpor: 800,\n        basetorporrate: -0.1 * 7.5,\n        torporperlevel: 0.06,\n        baseaffinity: 4000,\n        affinityperlevel: 150,\n        ineffectbyaff: 0.2,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Dilo',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    \"Dung Beetle\": {\n        foodrate: -0.001488 * 336.021515,\n        baseaffinity: 900.0,\n        affinityperlevel: 50.0,\n        ineffectbyaff: 4.166667,\n        basefood: 'Raw Meat',\n        foods: ['Human Feces', 'Small Feces', 'Medium Feces', 'Large Feces'],\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 2,\n        nonviolentfoodaffinitymultiplier: 1.0\n    },\n\n    Dunkleosteus: {\n        foodrate: -0.001852 * 199.983994,\n        basetorpor: 1150.0,\n        basetorporrate: -2.0 * 0.5,\n        torporperlevel: 0.06,\n        baseaffinity: 1300.0,\n        affinityperlevel: 60.0,\n        ineffectbyaff: 3.275,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Titanoboa',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DamageType\": 0.275,\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Gallimimus: {\n        foodrate: -0.001929 * 432.002777,\n        basetorpor: 420.0,\n        basetorporrate: -1.67 * 2.5,\n        torporperlevel: 0.06,\n        baseaffinity: 2200.0,\n        affinityperlevel: 95.0,\n        ineffectbyaff: 0.4,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Dimetro',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 2\n        }\n    },\n\n    Giganotosaurus: {\n        foodrate: -0.002314 * 160.056335,\n        basetorpor: 10000,\n        basetorporrate: -25.0 * 4.8,\n        torporperlevel: 0.06,\n        baseaffinity: 5000,\n        affinityperlevel: 160,\n        ineffectbyaff: 1.25,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Quetzal',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Gigantopithecus: {\n        foodrate: -0.004156 * 176.03154,\n        baseaffinity: 4600.0,\n        affinityperlevel: 75,\n        ineffectbyaff: 2.5,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Kibble-Gigantopithecus'],\n        kibble: 'Titanoboa',\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 0.5, //2 in devkit\n        nonviolentfoodaffinitymultiplier: 1.65\n    },\n\n    Griffin: {\n        foodrate: -0.311111111,\n        basetorpor: 1500.0,\n        basetorporrate: -2.222222,\n        torporperlevel: 0.06,\n        baseaffinity: 3000.0,\n        affinityperlevel: 136,\n        ineffectbyaff: 3.125,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Griffin'],\n        kibble: 'Allosaurus',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Ichthyosaurus: {\n        foodrate: -0.001929 * 420.0,\n        baseaffinity: 1500,\n        affinityperlevel: 75,\n        ineffectbyaff: 2.5,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Dodo',\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 2.5,\n        nonviolentfoodaffinitymultiplier: 1.6\n    },\n\n    Iguanodon: {\n        foodrate: -0.001929 * 864.005554,\n        basetorpor: 210.0,\n        basetorporrate: -0.1 * 3.0,\n        torporperlevel: 0.06,\n        baseaffinity: 2800.0,\n        affinityperlevel: 140.0,\n        ineffectbyaff: 0.4,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Kibble-Generic'],\n        kibble: 'Microraptor',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 2\n        }\n    },\n\n    Kairuku: {\n        foodrate: -0.001389 * 1079.913574,\n        basetorpor: 300,\n        basetorporrate: -0.1 * 10.0,\n        torporperlevel: 0.06,\n        baseaffinity: 900,\n        affinityperlevel: 45,\n        ineffectbyaff: 4.166667,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Kentrosaurus: {\n        foodrate: -0.005341 * 208.034286,\n        basetorpor: 500.0,\n        basetorporrate: -0.1 * 3.0,\n        torporperlevel: 0.06,\n        baseaffinity: 5500.0,\n        affinityperlevel: 285.0,\n        ineffectbyaff: 0.1,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry-Kentro', 'Other Berry-Kentro', 'Crop', 'Kibble-Generic'],\n        kibble: 'Compy',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Lystrosaurus: {\n        foodrate: -0.000868 * 2880.184326,\n        baseaffinity: 2000.0,\n        affinityperlevel: 22.5,\n        ineffectbyaff: 1.333333,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Rare Flower'],\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 2.0,\n        nonviolentfoodaffinitymultiplier: 1.6\n    },\n\n    Mammoth: {\n        foodrate: -0.004133 * 192.027771,\n        basetorpor: 550,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 5000,\n        affinityperlevel: 250,\n        ineffectbyaff: 0.12,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Raptor',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Manta: {\n        foodrate: -0.001929 * 420.0,\n        baseaffinity: 1500.0,\n        affinityperlevel: 75.0,\n        ineffectbyaff: 2.5,\n        basefood: 'Angler Gel',\n        foods: ['Angler Gel'],\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 2.5,\n        nonviolentfoodaffinitymultiplier: 1.6\n    },\n\n    Megalania: {\n        foodrate: -0.001736 * 160.010239,\n        basetorpor: 700.0,\n        basetorporrate: -10.0 * 1.8,\n        torporperlevel: 0.06,\n        baseaffinity: 4000.0,\n        affinityperlevel: 85.0,\n        ineffectbyaff: 3.5,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Megalania'],\n        kibble: 'Baryonyx',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Megaloceros: {\n        foodrate: -0.001543 * 432.058746,\n        basetorpor: 175,\n        basetorporrate: -0.1 * 2.915,\n        torporperlevel: 0.06,\n        baseaffinity: 1200,\n        affinityperlevel: 60,\n        ineffectbyaff: 0.5,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Dimorph',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1.0000,\n            \"Head\": 2.5\n        }\n    },\n\n    Megalodon: {\n        foodrate: -0.001852 * 199.983994,\n        basetorpor: 800,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 2000,\n        affinityperlevel: 100,\n        ineffectbyaff: 1.875,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Spino',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Mesopithicus: {\n        foodrate: -0.000868 * 2880.184326,\n        baseaffinity: 2200,\n        affinityperlevel: 65,\n        ineffectbyaff: 2.5,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Kibble-Generic'],\n        kibble: 'Dodo',\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 2,\n        nonviolentfoodaffinitymultiplier: 1.65\n    },\n\n    Mosasaurus: {\n        foodrate: -0.005 * 180.001144,\n        basetorpor: 3000,\n        basetorporrate: -0.4 * 32.0,\n        torporperlevel: 0.06,\n        baseaffinity: 11000,\n        affinityperlevel: 600,\n        ineffectbyaff: 0.06,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Mosasaurus'],\n        kibble: 'Quetzal',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Onyc: {\n        foodrate: -0.002893 * 192.034409,\n        baseaffinity: 3000,\n        affinityperlevel: 90,\n        ineffectbyaff: 2.5,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop'],\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 2.0,\n        nonviolentfoodaffinitymultiplier: 1.0\n    },\n\n    Oviraptor: {\n        foodrate: -0.001302 * 768.049133,\n        basetorpor: 125.0,\n        basetorporrate: -0.1 * 2.08,\n        torporperlevel: 0.06,\n        baseaffinity: 960.0,\n        affinityperlevel: 42.0,\n        ineffectbyaff: 16.666668,\n        basefood: 'Dodo Egg',\n        foods: ['Dodo Egg', 'Giga Egg', 'Quetz Egg', 'Rex Egg', 'Spino Egg', 'Bronto Egg', 'Carno Egg'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Pachycephalosaurus: {\n        foodrate: -0.001543 * 648.088135,\n        basetorpor: 160.0,\n        basetorporrate: -0.1 * 2.666,\n        torporperlevel: 0.06,\n        baseaffinity: 1200.0,\n        affinityperlevel: 60.0,\n        ineffectbyaff: 0.5,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Dilo',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 0.125\n        }\n    },\n\n    Paraceratherium: {\n        foodrate: -0.0035 * 327.6474,\n        basetorpor: 1300.0,\n        basetorporrate: -0.1 * 9.025,\n        torporperlevel: 0.06,\n        baseaffinity: 6500.0,\n        affinityperlevel: 325.0,\n        ineffectbyaff: 0.0923,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Pachy',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Parasaurolophus: {\n        foodrate: -0.001929 * 864.005554,\n        basetorpor: 150,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 1500,\n        affinityperlevel: 75,\n        ineffectbyaff: 0.4,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 2\n        }\n    },\n\n    Pelagornis: {\n        foodrate: -0.001543 * 216.029373,\n        basetorpor: 120.0,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 1200.0,\n        affinityperlevel: 60.0,\n        ineffectbyaff: 3.125,\n        basefood: 'Raw Fish',\n        foods: ['Raw Fish', 'Prime Fish', 'Kibble-Generic'],\n        kibble: 'Compy',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Phiomia: {\n        foodrate: -0.003156 * 1584.283936,\n        basetorpor: 240,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 3000,\n        affinityperlevel: 150,\n        ineffectbyaff: 0.2,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Plesiosaurus: {\n        foodrate: -0.003858 * 180.001144,\n        basetorpor: 1600,\n        basetorporrate: -0.1 * 21.333332,\n        torporperlevel: 0.06,\n        baseaffinity: 5000,\n        affinityperlevel: 250,\n        ineffectbyaff: 0.75,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Rex',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Procoptodon: {\n        foodrate: -0.001929 * 648.00415,\n        basetorpor: 350.0,\n        basetorporrate: -0.1 * 6.666,\n        torporperlevel: 0.034285714,\n        baseaffinity: 3000.0,\n        affinityperlevel: 150.0,\n        ineffectbyaff: 0.2,\n        basefood: 'Rare Mushroom',\n        foods: ['Rare Mushroom', 'Plant Species X Seed'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Pteranodon: {\n        foodrate: -0.001543 * 216.029373,\n        basetorpor: 120,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 1200,\n        affinityperlevel: 60,\n        ineffectbyaff: 3.125,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Dodo',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Projectile\": 1.5,\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Pulmonoscorpius: {\n        foodrate: -0.001929 * 432.002777,\n        basetorpor: 150,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 1500,\n        affinityperlevel: 75,\n        ineffectbyaff: 6.15, //2.5 in devkit\n        basefood: 'Spoiled Meat',\n        foods: ['Spoiled Meat'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Quetzalcoatlus: {\n        foodrate: -0.0035 * 140.0,\n        basetorpor: 1850.0,\n        basetorporrate: -0.2 * 17,\n        torporperlevel: 0.06,\n        baseaffinity: 6850,\n        affinityperlevel: 300,\n        ineffectbyaff: 0.9375,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Rex',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Projectile\": 1.2,\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Raptor: {\n        foodrate: -0.001543 * 648.088135,\n        basetorpor: 180,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 1200,\n        affinityperlevel: 60,\n        ineffectbyaff: 3.125,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Parasaur',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Rex: {\n        foodrate: -0.002314 * 180.063385,\n        basetorpor: 1550,\n        basetorporrate: -0.1 * 7.25,\n        torporperlevel: 0.06,\n        baseaffinity: 3450,\n        affinityperlevel: 150,\n        ineffectbyaff: 1.25,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Scorp',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Sabertooth: {\n        foodrate: -0.001543 * 288.039185,\n        basetorpor: 500,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 1200,\n        affinityperlevel: 60,\n        ineffectbyaff: 3.125,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Bronto',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Sarcosuchus: {\n        foodrate: -0.001578 * 211.237854,\n        basetorpor: 400,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 2000,\n        affinityperlevel: 75,\n        ineffectbyaff: 2.5,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Trike',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Spinosaurus: {\n        foodrate: -0.002066 * 150.0,\n        basetorpor: 850,\n        basetorporrate: -0.1 * 21.333332,\n        torporperlevel: 0.06,\n        baseaffinity: 3200,\n        affinityperlevel: 150,\n        ineffectbyaff: 1.5,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Argent',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Stegosaurus: {\n        foodrate: -0.005341 * 208.034286,\n        basetorpor: 500,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 6000,\n        affinityperlevel: 300,\n        ineffectbyaff: 0.1,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Sarco',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 1.67\n        }\n    },\n\n    Tapejara: {\n        foodrate: -0.001543 * 216.029373,\n        basetorpor: 450.0,\n        basetorporrate: -0.1 * 3.0,\n        torporperlevel: 0.06,\n        baseaffinity: 2200.0,\n        affinityperlevel: 100.0,\n        ineffectbyaff: 3.125,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Allosaurus',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    \"Terror Bird\": {\n        foodrate: -0.001578 * 352.06308,\n        basetorpor: 300,\n        basetorporrate: -1.5 * 1.5,\n        torporperlevel: 0.06,\n        baseaffinity: 1600.0,\n        affinityperlevel: 85.0,\n        ineffectbyaff: 2.5,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Gallimimus',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Therizinosaurus: {\n        foodrate: -0.002314 * 180.063385,\n        basetorpor: 925.0,\n        basetorporrate: -0.1 * 28.333332,\n        torporperlevel: 0.06,\n        baseaffinity: 6800.0,\n        affinityperlevel: 160.0,\n        ineffectbyaff: 0.06,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Therizinosaurus'],\n        kibble: 'Megalosaurus',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Thylacoleo: {\n        foodrate: -0.001543 * 288.039185,\n        basetorpor: 700.0,\n        basetorporrate: -0.1 * 18.5,\n        torporperlevel: 0.06,\n        baseaffinity: 2250.0,\n        affinityperlevel: 60.0,\n        ineffectbyaff: 3.125,\n        basefood: 'Raw Meat',\n        foods: ['Cooked Meat-Thylacoleo', 'Prime Meat-Thylacoleo', 'C/J Prime-Thylacoleo', 'Mutton-Thylacoleo', 'Lamb Chop-Thylacoleo', 'Kibble-Generic'],\n        kibble: 'Titanoboa',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 1.5\n        }\n    },\n\n    Triceratops: {\n        foodrate: -0.003156 * 352.06308,\n        basetorpor: 250,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 3000,\n        affinityperlevel: 150,\n        ineffectbyaff: 0.2,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Carno',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Vulture: {\n        foodrate: -0.001302 * 1152.07373,\n        baseaffinity: 655.0,\n        affinityperlevel: 45.0,\n        ineffectbyaff: 4.166666,\n        basefood: 'Spoiled Meat',\n        foods: ['Spoiled Meat'],\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 2, //devkit is 0.5\n        nonviolentfoodaffinitymultiplier: 1.6\n    },\n\n    \"Woolly Rhino\": {\n        foodrate: -0.003156 * 150.0,\n        basetorpor: 600.0,\n        basetorporrate: -0.1 * 9.0,\n        torporperlevel: 0.06,\n        baseaffinity: 3450.0,\n        affinityperlevel: 125.0,\n        ineffectbyaff: 1.25,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Bronto'],\n        kibble: 'Terror Bird',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    }\n}\n\n$rootScope.pagetitle = \"ARK Taming Calculator\";\n\n$scope.tablevisibility = $cookies.getObject('tablevisibility');\nif ($scope.tablevisibility == undefined || $scope.tablevisibility.version != \"20160131\") {\n    $scope.tablevisibility = {\n        \"version\": \"20160131\",\n        \"Creature\": true,\n        \"Food\": true,\n        \"Tame\": true,\n        \"Narcotics\": false,\n        \"Starve\": false,\n        \"Knockout\": false\n    }\n}\n\n$scope.showextratamedetails = $cookies.getObject(\"showextratamedetails\");\nif ($scope.showextratamedetails == undefined) {\n    $scope.showextratamedetails = 0;\n}\n\n$scope.showanimations = $cookies.getObject(\"showanimations\");\nif ($scope.showanimations == undefined) {\n    $scope.showanimations = 1;\n}\n$animate.enabled($scope.showanimations);\n\n$scope.showoldselects = $cookies.getObject(\"showoldselects\");\nif ($scope.showoldselects == undefined) {\n    $scope.showoldselects = 0;\n}\n\n$scope.texponent = 0.800403041; //0.829050872; //0.76593984; //0.827745067192723; //0.8107032;\n$scope.tcoefficient = 22.39671632; //25.7837826; //18.62553525; //24.7933173692763; //21.93040668;\n$scope.basetamingmultiplier = 2; //Hidden tame rate multiplier on official servers\n\n//Value relating to the creature being tamed\n$scope.creature = $cookies.getObject('creature');\nif ($scope.creature == undefined || !($scope.creature.name in $scope.creatures) || $scope.creature.version != \"20171022\") {\n    $scope.creature = {\n        version: \"20171022\",\n        searchname: \"Ankylosaurus\",\n        name: \"Ankylosaurus\",\n        level: 20,\n        tamingmethod: \"Standard\",\n        usertamingmultiplier: 1,\n        tamingmultiplier: 1,\n        foodratemultiplier: 1,\n        totalfood: 0,\n        suppliedaffinity: 0\n    };\n}\n\n//Narcotics related constants for this creature/level\n$scope.narcotics = {\n    buffertime: 0,\n    max: 0,\n    min: 0,\n    buffernarcotics: 0,\n    narcoticsbuffertime: 0,\n    narcoticsmethod: \"Narcotics\"\n};\n\n//Narcotics related variables depending on creature's actual state\n$scope.narcoticstiming = {\n    start: new Date(),\n    topupnarcotics: 0,\n    currenttorpor: 0,\n    time: false,\n    intervalid: null,\n    buffertime: 0,\n    alarm: false,\n    alarmthreshold: 10,\n    narcoticsbuffertime: 0,\n    narcoticstimes: {\n        \"Narcotics\": 0,\n        \"Narcoberries\": 0\n    }\n};\n\n//Starve Timing Variables\n$scope.starvetiming = {\n    start: new Date(),\n    maxfood: 0,\n    currentfood: 0,\n    time: false,\n    intervalid: null,\n    starvetime: 0,\n    alarm: false,\n    alarmthreshold: 10\n}\n\n//Knocking out related variables\n$scope.ko = $cookies.getObject(\"ko\");\nif ($scope.ko == undefined || $scope.ko.version != \"20160131\") {\n    $scope.ko = {\n        version: \"20160131\",\n        koweapondam: 100,\n        komeleedam: 100,\n        searchkomethod: \"Bow\",\n        komethod: \"Bow\",\n        koquantities: {},\n        kotimes: {},\n        kotorpor: {},\n        kodamage: {}\n    }\n}\n\n$scope.showhidetable = function (table) {\n    $scope.tablevisibility[table] = !$scope.tablevisibility[table];\n    var now = new Date();\n    $cookies.putObject('tablevisibility', $scope.tablevisibility, {\n        expires: new Date(now.getFullYear(), now.getMonth() + 6, now.getDate()),\n        path: '/taming'\n    });\n}\n\n$scope.showhideextratamedetails = function () {\n    var now = new Date();\n    $cookies.putObject('showextratamedetails', $scope.showextratamedetails, {\n        expires: new Date(now.getFullYear(), now.getMonth() + 6, now.getDate()),\n        path: '/taming'\n    });\n}\n\n$scope.showhideoldselects = function () {\n    var now = new Date();\n    $cookies.putObject('showoldselects', $scope.showoldselects, {\n        expires: new Date(now.getFullYear(), now.getMonth() + 6, now.getDate()),\n        path: '/taming'\n    });\n}\n\n$scope.showhideanimations = function () {\n    var now = new Date();\n    $animate.enabled($scope.showanimations);\n    $cookies.putObject('showanimations', $scope.showanimations, {\n        expires: new Date(now.getFullYear(), now.getMonth() + 6, now.getDate()),\n        path: '/taming'\n    });\n    if ($scope.showanimations == 0) {\n        alert(\"Refresh the page\");\n    }\n}\n\n$scope.filterFoods = function (item) {\n    return ($scope.foodamounts[item] > 0);\n}\n\n$scope.searchdino = function () {\n    //alert(\"searchdino\");\n    var creature = $scope.creature;\n    var creatures = $scope.creatures;\n\n    if (creature.searchname in creatures) {\n        creature.name = creature.searchname;\n        $scope.selectdino();\n    }\n}\n\n$scope.searchkomethod = function () {\n    var ko = $scope.ko;\n    var komethods = $scope.komethods;\n    if (ko.searchkomethod in komethods) {\n        ko.komethod = ko.searchkomethod;\n        $scope.knockoutcalc();\n    }\n}\n\n$scope.selectdino = function () {\n    creature = $scope.creature;\n    creaturedata = $scope.creatures[creature.name];\n\n    creature.searchname = creature.name; //Ensure the searchname is kept up to date\n\n    creature.suppliedaffinity = 0;\n    if (creaturedata.foods.indexOf(creature.fillfood) == -1) {\n        creature.fillfood = creaturedata.foods[0];\n    }\n    if (creaturedata.tamingmethods.indexOf(creature.tamingmethod) == -1) {\n        creature.tamingmethod = creaturedata.tamingmethods[0];\n    }\n\n    $scope.resetfoods();\n    $scope.narcoticstiming.time = false;\n    $scope.narcoticstimer();\n    $scope.selectlevel();\n}\n\n$scope.selectlevel = function () {\n    creature = $scope.creature;\n    $rootScope.pagetitle = creature.level + \" \" + creature.name + \" - Ark Taming Calculator\";\n    if (creature.level > 2000) {\n        creature.level = 2000;\n    }\n    if (isNaN(creature.level) || creature.level < 1) {\n        return;\n    }\n\n    creaturedata = $scope.creatures[creature.name];\n    creature.requiredaffinity = creaturedata.baseaffinity + creaturedata.affinityperlevel * creature.level;\n    creature.torpor = creaturedata.basetorpor + creaturedata.basetorpor * creaturedata.torporperlevel * (creature.level - 1);\n    creature.torporrate = creaturedata.basetorporrate + Math.pow(creature.level - 1, $scope.texponent) / ($scope.tcoefficient / creaturedata.basetorporrate);\n    var now = new Date();\n    $cookies.putObject('creature', $scope.creature, {\n        expires: new Date(now.getFullYear(), now.getMonth() + 6, now.getDate()),\n        path: '/taming'\n    });\n    $scope.maxfoodcalc();\n    $scope.alltimescalc();\n    $scope.foodcalc();\n    $scope.knockoutcalc();\n    $scope.starvetimingcalc();\n}\n\n$scope.settamingmethod = function () { //General purpose function-caller function for a few fields\n    if ($scope.creature.usertamingmultiplier > 0 && $scope.creature.foodratemultiplier > 0) { //Necessary to prevent endless loop\n\n        $scope.creature.tamingmultiplier = $scope.creature.usertamingmultiplier * $scope.basetamingmultiplier;\n\n        var now = new Date();\n        $cookies.putObject('creature', $scope.creature, {\n            expires: new Date(now.getFullYear(), now.getMonth() + 6, now.getDate()),\n            path: '/taming'\n        });\n\n        $scope.maxfoodcalc();\n        $scope.foodcalc();\n        $scope.alltimescalc();\n    }\n}\n\n$scope.setFillFood = function (food) {\n    $scope.foodamounts[$scope.creature.fillfood] = 0;\n    $scope.creature.fillfood = food;\n    $scope.foodcalc();\n}\n\n$scope.resetfoods = function () {\n    $scope.foodamounts = {};\n    for (var food in $scope.foods) {\n        $scope.foodamounts[food] = 0;\n    }\n}\n\n$scope.maxfoodcalc = function () {\n    $scope.maxfoodamounts = {};\n\n    if (creature.tamingmethod == \"Standard\") {\n\n        for (var food in $scope.foods) {\n            $scope.maxfoodamounts[food] = Math.ceil(creature.requiredaffinity / $scope.foods[food].affinity / creature.tamingmultiplier);\n        }\n\n    }\n\n    if (creature.tamingmethod == \"Non-Violent\") {\n\n        for (var food in $scope.foods) {\n            $scope.maxfoodamounts[food] = Math.ceil(creature.requiredaffinity / $scope.foods[food].affinity / creature.tamingmultiplier / creaturedata.nonviolentfoodaffinitymultiplier);\n        }\n\n    }\n}\n\n$scope.alltimescalc = function () {\n    $scope.times = {};\n\n    if ($scope.creature.tamingmethod == \"Standard\") {\n        $scope.creature.foodrate = $scope.creatures[$scope.creature.name].foodrate * $scope.creature.foodratemultiplier;\n    }\n    if (creature.tamingmethod == \"Non-Violent\") {\n        $scope.creature.foodrate = $scope.creatures[$scope.creature.name].foodrate * $scope.creature.foodratemultiplier * $scope.creatures[$scope.creature.name].nonviolentfoodratemultiplier;\n    }\n\n    for (var food in $scope.maxfoodamounts) {\n        $scope.times[food] = $scope.maxfoodamounts[food] * -$scope.foods[food].food / $scope.creature.foodrate;\n    }\n\n}\n\n$scope.foodcalc = function () {\n    creature = $scope.creature;\n    creaturedata = $scope.creatures[creature.name];\n    foods = $scope.foods;\n    foodamounts = $scope.foodamounts;\n    affinity = 0;\n    food = 0;\n    foodamounts[creature.fillfood] = 0;\n\n    if (creature.tamingmethod == \"Standard\") {\n\n        for (var i = 0; i < creaturedata.foods.length; i++) {\n\n            affinity += foods[creaturedata.foods[i]].affinity * creature.tamingmultiplier * foodamounts[creaturedata.foods[i]];\n            food -= foods[creaturedata.foods[i]].food * foodamounts[creaturedata.foods[i]];\n        }\n        foodamounts[creature.fillfood] = Math.max(Math.ceil((creature.requiredaffinity - affinity) / foods[creature.fillfood].affinity / creature.tamingmultiplier), 0);\n        affinity += foods[creature.fillfood].affinity * creature.tamingmultiplier * foodamounts[creature.fillfood];\n        food -= foods[creature.fillfood].food * foodamounts[creature.fillfood];\n        creature.totalfood = -food;\n        creature.suppliedaffinity = affinity;\n\n    }\n\n    if (creature.tamingmethod == \"Non-Violent\") {\n\n        for (var i = 0; i < creaturedata.foods.length; i++) {\n\n            affinity += foods[creaturedata.foods[i]].affinity * creature.tamingmultiplier * creaturedata.nonviolentfoodaffinitymultiplier * foodamounts[creaturedata.foods[i]];\n            food -= foods[creaturedata.foods[i]].food * foodamounts[creaturedata.foods[i]];\n        }\n        foodamounts[creature.fillfood] = Math.max(Math.ceil((creature.requiredaffinity - affinity) / foods[creature.fillfood].affinity / creature.tamingmultiplier / creaturedata.nonviolentfoodaffinitymultiplier), 0);\n        affinity += foods[creature.fillfood].affinity * creature.tamingmultiplier * creaturedata.nonviolentfoodaffinitymultiplier * foodamounts[creature.fillfood];\n        food -= foods[creature.fillfood].food * foodamounts[creature.fillfood];\n        creature.totalfood = -food;\n        creature.suppliedaffinity = affinity;\n\n    }\n\n    $scope.totaltimecalc();\n    $scope.effectivenesscalc();\n    $scope.starvetimingcalc();\n\n}\n\n$scope.totaltimecalc = function () {\n    creature = $scope.creature;\n    creaturedata = $scope.creatures[creature.name];\n    if (creature.tamingmethod == \"Standard\") {\n        $scope.totaltime = food / creaturedata.foodrate / creature.foodratemultiplier;\n        $scope.narcoticscalc();\n    }\n\n    if (creature.tamingmethod == \"Non-Violent\") {\n        $scope.totaltime = food / creaturedata.foodrate / creature.foodratemultiplier / creaturedata.nonviolentfoodratemultiplier;\n    }\n}\n\n$scope.narcoticscalc = function () {\n    var narcoticsmethod = $scope.narcoticsmethods[$scope.narcotics.narcoticsmethod];\n    $scope.narcotics.buffertime = $scope.creature.torpor / -$scope.creature.torporrate;\n    $scope.narcotics.max = Math.ceil($scope.totaltime * -$scope.creature.torporrate / (narcoticsmethod.torpor - $scope.creature.torporrate * narcoticsmethod.time));\n    $scope.narcotics.min = Math.max(Math.ceil(($scope.totaltime * -$scope.creature.torporrate - $scope.creature.torpor) / (narcoticsmethod.torpor - $scope.creature.torporrate * narcoticsmethod.time)), 0);\n    $scope.narcotics.buffernarcotics = Math.ceil($scope.creature.torpor / narcoticsmethod.torpor);\n    $scope.narcotics.narcoticsbuffertime = narcoticsmethod.time * $scope.narcotics.buffernarcotics;\n    if ($scope.narcoticstiming.time == false) {\n        $scope.narcoticstiming.currenttorpor = $scope.creature.torpor;\n    }\n    $scope.narcoticstimingcalc();\n}\n\n$scope.narcoticstimingcalc = function () {\n    var narcoticsmethod = $scope.narcoticsmethods[$scope.narcotics.narcoticsmethod];\n    var narcoticstimes = $scope.narcoticstiming.narcoticstimes;\n    $scope.narcoticstiming.currenttorpor = Math.min($scope.narcoticstiming.currenttorpor, $scope.creature.torpor);\n    var suppliedtime = 0;\n    var suppliedtorpor = 0;\n    for (method in narcoticstimes) {\n        if (!narcoticstimes.hasOwnProperty(method)) {\n            continue;\n        }\n        if ($scope.narcoticstiming.currenttorpor + suppliedtorpor + (narcoticstimes[method] * narcoticsmethod.rate) > $scope.creature.torpor) {\n            //Here we check if the current method brings us over the max possible torpor, and cut off the time if it does\n            suppliedtime += ($scope.creature.torpor - $scope.narcoticstiming.currenttorpor + suppliedtorpor) / narcoticsmethod.rate;\n            suppliedtorpor = $scope.creature.torpor - $scope.narcoticstiming.currenttorpor;\n            break;\n        } else {\n            suppliedtime += narcoticstimes[method];\n            suppliedtorpor += narcoticstimes[method] * narcoticsmethod.rate;\n        }\n    }\n    $scope.narcoticstiming.topupnarcotics = Math.ceil(($scope.creature.torpor - $scope.narcoticstiming.currenttorpor - suppliedtorpor) / narcoticsmethod.torpor);\n    $scope.narcoticstiming.buffertime = ($scope.narcoticstiming.currenttorpor + suppliedtorpor) / -$scope.creature.torporrate;\n    $scope.narcoticstiming.narcoticsbuffertime = suppliedtime;\n}\n\n$scope.supplynarcotic = function () {\n    var narcoticsmethod = $scope.narcoticsmethods[$scope.narcotics.narcoticsmethod];\n    var narcoticstimes = $scope.narcoticstiming.narcoticstimes;\n    narcoticstimes[$scope.narcotics.narcoticsmethod] += $scope.narcoticstiming.supplynarcoticamount * narcoticsmethod.time;\n}\n\n$scope.narcoticstimer = function () {\n    var narcoticstimes = $scope.narcoticstiming.narcoticstimes;\n    if ($scope.narcoticstiming.time == true) {\n        $scope.narcoticstiming.intervalid = $interval(function () {\n            var narcoticsapplied = false;\n            for (method in narcoticstimes) {\n                if (!narcoticstimes.hasOwnProperty(method)) {\n                    continue;\n                }\n                if (narcoticstimes[method] > 0) {\n                    narcoticstimes[method] = Math.max(0, narcoticstimes[method] - 1);\n                    $scope.narcoticstiming.currenttorpor += $scope.narcoticsmethods[method].rate;\n                    if ($scope.narcoticstiming.currenttorpor > $scope.creature.torpor) {\n                        $scope.narcoticstiming.currenttorpor = $scope.creature.torpor;\n                        for (method in narcoticstimes) {\n                            narcoticstimes[method] = 0;\n                        }\n                    }\n                    narcoticsapplied = true;\n                    break;\n                }\n            }\n            if (!narcoticsapplied) {\n                $scope.narcoticstiming.currenttorpor += $scope.creature.torporrate;\n            }\n            $scope.narcoticstimingcalc();\n            if ($scope.narcoticstiming.currenttorpor <= 0) {\n                $scope.narcoticstiming.currenttorpor = 0;\n                $scope.narcoticstimingcalc();\n                $scope.narcoticstiming.time = false;\n                $scope.narcoticstimer();\n            }\n            if ($scope.narcoticstiming.alarm == 1 && $scope.narcoticstiming.buffertime / 60 < $scope.narcoticstiming.alarmthreshold) {\n                $scope.narcoticstiming.alarm = 0;\n                var audio = new Audio('alarm.mp3');\n                audio.volume = 0.3;\n                audio.play();\n            }\n        }, 1000);\n    } else {\n        $interval.cancel($scope.narcoticstiming.intervalid);\n        $scope.narcoticstiming.intervalid = null;\n    }\n}\n\n$scope.starvetimingcalc = function () {\n    var timedfoodamount = Math.min($scope.creature.totalfood, $scope.starvetiming.maxfood); //We time either the total food required for tame or the max food the dino has, whichever is lower\n    if ($scope.starvetiming.currentfood > $scope.starvetiming.maxfood) {\n        scope.starvetiming.currentfood = $scope.starvetiming.maxfood;\n    }\n    $scope.starvetiming.starvetime = (timedfoodamount - ($scope.starvetiming.maxfood - $scope.starvetiming.currentfood)) / -$scope.creatures[$scope.creature.name].foodrate / $scope.creature.foodratemultiplier;\n    $scope.starvetiming.starvetime = Math.max($scope.starvetiming.starvetime, 0); //We get a negative time if the target food has already been passed, replace with 0 instead\n    $scope.starvetiming.tametime = ($scope.creature.totalfood - ($scope.starvetiming.maxfood - $scope.starvetiming.currentfood)) / -$scope.creatures[$scope.creature.name].foodrate / $scope.creature.foodratemultiplier;\n    $scope.starvetiming.tametime = Math.max($scope.starvetiming.tametime, 0); //We get a negative time if the target food has already been passed, replace with 0 instead\n}\n\n$scope.starvetimer = function () {\n    if ($scope.starvetiming.time == true) {\n        $scope.starvetiming.intervalid = $interval(function () {\n            $scope.starvetiming.currentfood += $scope.creatures[$scope.creature.name].foodrate * $scope.creature.foodratemultiplier;\n            $scope.starvetimingcalc();\n            /*if ($scope.starvetiming.currentfood<=0) {\n                    $scope.starvetiming.currentfood=0;\n                    $scope.starvetimingcalc();\n                    $scope.starvetiming.time=false;\n                    $scope.starvetimer();\n                }*/\n            if ($scope.starvetiming.alarm == 1 && $scope.starvetiming.starvetime / 60 < $scope.starvetiming.alarmthreshold) {\n                $scope.starvetiming.alarm = 0;\n                var audio = new Audio('alarm.mp3');\n                audio.volume = 0.3;\n                audio.play();\n            }\n        }, 1000);\n    } else {\n        $interval.cancel($scope.starvetiming.intervalid);\n        $scope.starvetiming.intervalid = null;\n    }\n}\n\n$scope.effectivenesscalc = function () {\n    var foods = $scope.foods;\n    var foodamounts = $scope.foodamounts;\n    var creature = $scope.creature;\n    var creaturedata = $scope.creatures[creature.name];\n    var effectiveness = 100;\n    var fedfood = {};\n    for (var food in $scope.foods) {\n        fedfood[food] = 0;\n    }\n\n    if (creature.tamingmethod == \"Standard\") {\n\n        for (var i = 0; i < creaturedata.foods.length; i++) {\n            var food = creaturedata.foods[i];\n            while (fedfood[food] < foodamounts[food]) {\n                fedfood[food]++;\n                effectiveness -= Math.pow(effectiveness, 2) * creaturedata.ineffectbyaff / foods[food].affinity / creature.tamingmultiplier / 100;\n            }\n        }\n\n    }\n\n    if (creature.tamingmethod == \"Non-Violent\") {\n\n        for (var i = 0; i < creaturedata.foods.length; i++) {\n            var food = creaturedata.foods[i];\n            while (fedfood[food] < foodamounts[food]) {\n                fedfood[food]++;\n                effectiveness -= Math.pow(effectiveness, 2) * creaturedata.ineffectbyaff / foods[food].affinity / creature.tamingmultiplier / creaturedata.nonviolentfoodaffinitymultiplier / 100;\n            }\n        }\n\n    }\n    creature.effectiveness = effectiveness;\n    creature.extralevels = Math.floor(creature.level * 0.5 * creature.effectiveness / 100);\n}\n\n$scope.knockoutcalc = function () {\n    var komethod = $scope.komethods[$scope.ko.komethod];\n    $scope.ko.koquantities = {};\n\n    $scope.ko.searchkomethod = $scope.ko.komethod; //Ensure the searchname is kept up to date\n\n    for (hitbox in $scope.creatures[$scope.creature.name].hitboxes) {\n        var torpor = komethod.torpor * $scope.creatures[$scope.creature.name].hitboxes[hitbox];\n        var damage = komethod.damage * $scope.creatures[$scope.creature.name].hitboxes[hitbox];\n        if (komethod.usesmeleedam) {\n            torpor *= $scope.ko.komeleedam / 100;\n            damage *= $scope.ko.komeleedam / 100;\n        }\n        if (komethod.usesweapondam) {\n            torpor *= $scope.ko.koweapondam / 100;\n            damage *= $scope.ko.koweapondam / 100;\n        }\n        for (i = 0; i < komethod.damagetypes.length; i++) {\n            if (komethod.damagetypes[i] in $scope.creatures[$scope.creature.name].damagemultipliers) {\n                torpor *= $scope.creatures[$scope.creature.name].damagemultipliers[komethod.damagetypes[i]];\n                damage *= $scope.creatures[$scope.creature.name].damagemultipliers[komethod.damagetypes[i]];\n            }\n        }\n        $scope.ko.kotorpor[hitbox] = torpor;\n        $scope.ko.kodamage[hitbox] = damage;\n        $scope.ko.koquantities[hitbox] = Math.ceil($scope.creature.torpor / torpor);\n        $scope.ko.kotimes[hitbox] = $scope.ko.koquantities[hitbox] * komethod.time;\n    }\n\n    var now = new Date();\n    $cookies.putObject('ko', $scope.ko, {\n        expires: new Date(now.getFullYear(), now.getMonth() + 6, now.getDate()),\n        path: '/taming'\n    });\n\n    /*for (hitbox in $scope.creatures[$scope.creature.name].hitboxes) {\n            $scope.ko.koquantities[hitbox]=Math.ceil($scope.creature.torpor/$scope.komethodtorpor[$scope.ko.komethod]/$scope.creatures[$scope.creature.name].projectiledamage/$scope.ko.kodamagemultiplier/$scope.creatures[$scope.creature.name].hitboxes[hitbox]);\n            $scope.ko.kotimes[hitbox]=$scope.ko.koquantities[hitbox]*5;\n        }*/\n    /*if ($scope.creatures[$scope.creature.name].projectiledamage>1 && \"Head\" in $scope.creatures[$scope.creature.name].hitboxes) {\n            var headshots=$scope.ko.koquantities[\"Head\"]-1;\n            var bodyshots=$scope.ko.koquantities[\"Body\"]-(headshots*$scope.creatures[$scope.creature.name].hitboxes[\"Head\"]);\n            $scope.ko.koquantities[\"Head+Body\"]=headshots+\"+\"+bodyshots;\n            $scope.ko.kotimes[\"Head+Body\"]=(headshots+bodyshots)*5;\n        }*/\n}\n\nexport default  $scope\n","export default {\n\t\"Achatina\": \"M- 玛瑙螺\",\n\t\"Allosaurus\": \"Y- 异特龙\",\n\t\"Ammonite\": \"J- 菊石\",\n\t\"Angler\": \"A- 鮟鱇鱼\",\n\t\"Ankylosaurus\": \"J- 甲龙\",\n\t\"Araneo\": \"Z- 蜘蛛\",\n\t\"Archaeopteryx\": \"S- 始祖鸟\",\n\t\"Argentavis\": \"A- 阿根廷巨鹰\",\n\t\"Arthropluera\": \"G- 古马陆\",\n\t\"Attack Drone\": \"W- 无人机\",\n\t\"Baryonyx\": \"Z- 重爪龙\",\n\t\"Basilisk\": \"D- 毒蜥\",\n\t\"Basilosaurus\": \"L- 龙王鲸\",\n\t\"Beelzebufo\": \"M- 魔鬼蛙\",\n\t\"Brontosaurus\": \"L- 雷龙\",\n\t\"Broodmother Lysrix\": \"Y- 育母蜘蛛\",\n\t\"Bulbdog\": \"D- 灯泡犬\",\n\t\"Carbonemys\": \"D- 淡水碳龟\",\n\t\"Carnotaurus\": \"N- 牛龙\",\n\t\"Castoroides\": \"J- 巨河狸\",\n\t\"Chalicotherium\": \"S- 砂犷[guǎng]兽\",\n\t\"Cnidaria\": \"S- 水母\",\n\t\"Coelacanth\": \"Q- 腔棘鱼\",\n\t\"Compsognathus\": \"M- 美颌龙\",\n\t\"Daeodon\": \"X- 凶齿豨[xī]\",\n\t\"Deathworm\": \"S- 死亡蠕虫\",\n\t\"Defense Unit\": \"J- 机器人\",\n\t\"Desert Titan\": \"S- 沙漠泰坦\",\n\t\"Dilophosaurus\": \"S- 双脊龙\",\n\t\"Dimetrodon\": \"Y- 异齿龙\",\n\t\"Dimorphodon\": \"S- 双型齿翼龙\",\n\t\"Diplocaulus\": \"D- 盗首螈\",\n\t\"Diplodocus\": \"L- 梁龙\",\n\t\"Direbear\": \"K- 恐熊\",\n\t\"Direwolf\": \"K- 恐狼\",\n\t\"Dodo\": \"D- 渡渡鸟\",\n\t\"Doedicurus\": \"X- 星尾兽\",\n\t\"Dragon\": \"P- 喷火龙\",\n\t\"Dragonfly\": \"J- 巨脉蜻蜓\",\n\t\"Dung Beetle\": \"Q- 蜣螂\",\n\t\"Dunkleosteus\": \"D- 邓氏鱼\",\n\t\"Electrophorus\": \"D- 电鳗\",\n\t\"Enforcer\": \"Z- 执行者\",\n\t\"Equus\": \"P- 庞马\",\n\t\"Eurypterid\": \"G- 广翅鲎[hòu]\",\n\t\"Featherlight\": \"Q- 轻羽鸟\",\n\t\"Forest Titan\": \"S- 森林泰坦\",\n\t\"Gacha\": \"G- 嘎查\",\n\t\"Gallimimus\": \"S- 似鸡龙\",\n\t\"Gasbags\": \"Q- 气囊虫\",\n\t\"Giant Bee\": \"J- 巨型蜜蜂\",\n\t\"Giganotosaurus\": \"N- 南方巨兽龙\",\n\t\"Gigantopithecus\": \"J- 巨猿\",\n\t\"Glowbug\": \"F- 发光虫\",\n\t\"Glowtail\": \"Y- 耀尾兽\",\n\t\"Griffin\": \"S- 狮鹫\",\n\t\"Hesperornis\": \"H- 黄昏鸟\",\n\t\"Hyaenodon\": \"L- 鬣[liè]齿兽\",\n\t\"Ice Titan\": \"B- 冰霜泰坦\",\n\t\"Ichthyornis\": \"Y- 鱼鸟\",\n\t\"Ichthyosaurus\": \"Y- 鱼龙\",\n\t\"Iguanodon\": \"Q- 禽龙\",\n\t\"Jerboa\": \"T- 跳鼠\",\n\t\"Jugbug\": \"H- 壶虫\",\n\t\"Kairuku\": \"Y- 远古企鹅\",\n\t\"Kaprosuchus\": \"Z- 猪鳄\",\n\t\"Karkinos\": \"J- 巨蟹怪\",\n\t\"Kentrosaurus\": \"K- 肯氏龙\",\n\t\"Lamprey\": \"Q- 七鳃鳗\",\n\t\"Leech\": \"S- 水蛭\",\n\t\"Leedsichthys\": \"L- 利兹鱼\",\n\t\"Liopleurodon\": \"H- 滑齿龙\",\n\t\"Lymantria\": \"S- 沙蛾\",\n\t\"Lystrosaurus\": \"S- 水龙兽\",\n\t\"Mammoth\": \"M- 猛犸象\",\n\t\"Managarmr\": \"M- 玛纳加尔姆\",\n\t\"Manta\": \"F- 蝠鲼[fú fèn]\",\n\t\"Manticore\": \"S- 狮身蝎尾兽\",\n\t\"Mantis\": \"T- 螳螂\",\n\t\"Mega Mek\": \"J- 机甲\",\n\t\"Megalania\": \"G- 古巨蜥\",\n\t\"Megaloceros\": \"D- 大角鹿\",\n\t\"Megalodon\": \"J- 巨齿鲨\",\n\t\"Megalosaurus\": \"B- 斑龙\",\n\t\"Meganeura\": \"J- 巨脉蜻蜓\",\n\t\"Megapithecus\": \"D- 大金刚\",\n\t\"Megatherium\": \"D- 大地懒\",\n\t\"Mek\": \"J- 机甲\",\n\t\"Mesopithicus\": \"Z- 中猴\",\n\t\"Microraptor\": \"X- 小盗龙\",\n\t\"Morellatops\": \"T- 驼峰兽\",\n\t\"Mosasaurus\": \"C- 苍龙\",\n\t\"Moschops\": \"S- 麝[shè]足兽\",\n\t\"Nameless\": \"W- 无名怪\",\n\t\"Onyc\": \"Z- 爪蝠\",\n\t\"Otter\": \"S- 水獭[tǎ]\",\n\t\"Overseer\": \"J- 监察者\",\n\t\"Oviraptor\": \"Q- 窃蛋龙\",\n\t\"Ovis\": \"M- 绵羊\",\n\t\"Pachycephalosaurus\": \"Z- 肿头龙\",\n\t\"Pachyrhinosaurus\": \"H- 厚鼻龙\",\n\t\"Paraceratherium\": \"J- 巨犀\",\n\t\"Parasaurolophus\": \"F- 副栉[zhì]龙\",\n\t\"Pegomastax\": \"S- 双坚颌龙\",\n\t\"Pelagornis\": \"W- 伪齿鸟\",\n\t\"Phiomia\": \"J- 渐新象\",\n\t\"Phoenix\": \"F- 凤凰\",\n\t\"Piranha\": \"S- 食人鱼\",\n\t\"Plesiosaurus\": \"S- 蛇颈龙\",\n\t\"Procoptodon\": \"J- 巨型袋鼠\",\n\t\"Pteranodon\": \"W- 无齿翼龙\",\n\t\"Pulmonoscorpius\": \"J- 巨蝎\",\n\t\"Purlovia\": \"S- 兽头兽\",\n\t\"Quetzalcoatlus\": \"F- 风神翼龙\",\n\t\"Raptor\": \"X- 迅猛龙\",\n\t\"Ravager\": \"J- 劫掠者\",\n\t\"Reaper\": \"S- 死神\",\n\t\"Rex\": \"B- 霸王龙\",\n\t\"Rock Drake\": \"Y- 岩龙\",\n\t\"Rock Elemental\": \"Y- 岩石巨人\",\n\t\"Roll Rat\": \"F- 翻滚鼠\",\n\t\"Sabertooth\": \"S- 剑齿虎\",\n\t\"Sabertooth Salmon\": \"J- 剑齿鲑鱼\",\n\t\"Sarcosuchus\": \"D- 帝鳄\",\n\t\"Scout\": \"Z- 侦察机\",\n\t\"Seeker\": \"Z- 追寻者\",\n\t\"shinehorn\": \"S- 闪角兽\",\n\t\"snow Owl\": \"X- 雪鸮\",\n\t\"Spinosaurus\": \"J- 棘背龙\",\n\t\"Stegosaurus\": \"J- 剑龙\",\n\t\"Tapejara\": \"G- 古神翼龙\",\n\t\"Terror Bird\": \"H- 骇鸟\",\n\t\"Therizinosaurus\": \"L- 镰刀龙\",\n\t\"Thorny Dragon\": \"J- 棘蜥\",\n\t\"Thylacoleo\": \"D- 袋狮\",\n\t\"Titanoboa\": \"T- 泰坦巨蟒\",\n\t\"Titanomyrma\": \"J- 巨型兵蚁\",\n\t\"Titanosaur\": \"T- 泰坦龙\",\n\t\"Triceratops\": \"S- 三角龙\",\n\t\"Trilobite\": \"S- 三叶虫\",\n\t\"Troodon\": \"S- 伤齿龙\",\n\t\"Tusoteuthis\": \"T- 托斯特巨鱿\",\n\t\"Velonasaur\": \"C- 刺面龙\",\n\t\"Vulture\": \"T- 秃鹫\",\n\t\"Woolly Rhino\": \"P- 披毛犀\",\n\t\"Wyvern\": \"F- 飞龙\",\n\t\"Yeti\": \"X- 雪人\",\n\t\"Yutyrannus\": \"Y- 羽暴龙\"\n}\n","Date.prototype.Format = function (fmt) {\n    var o = {\n        \"M+\": this.getMonth() + 1,                 //月份\n        \"d+\": this.getDate(),                    //日\n        \"h+\": this.getHours(),                   //小时\n        \"m+\": this.getMinutes(),                 //分\n        \"s+\": this.getSeconds(),                 //秒\n        \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\n        \"S\": this.getMilliseconds()             //毫秒\n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    for (var k in o)\n        if (new RegExp(\"(\" + k + \")\").test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n    return fmt;\n}\n\nexport function formatTimeToStr(times, pattern) {\n    var d = new Date(times).Format(\"yyyy-MM-dd hh:mm:ss\");\n    if (pattern) {\n        d = new Date(times).Format(pattern);\n    }\n    return d.toLocaleString();\n}\n\nexport function toHHMMSS(sec_num) {\n    //var sec_num = parseInt(this, 10); // don't forget the second param\n    var hours   = Math.floor(sec_num / 3600);\n    var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n    var seconds = Math.ceil(sec_num - (hours * 3600) - (minutes * 60));\n\n    if (hours   < 10) {hours   = \"0\"+hours;}\n    if (minutes < 10) {minutes = \"0\"+minutes;}\n    if (seconds < 10) {seconds = \"0\"+seconds;}\n    return hours+':'+minutes+':'+seconds;\n}","export default {\n    'Anglerfish' : {\n        dododexName: 'angler'\n    }\n}","<template>\n    <div id=\"main\">\n        <div style=\"text-align: center\">\n            <h4>yilnz's 方舟驯服计算器</h4>\n        </div>\n        <div>\n            <div class=\"title\">\n                <h3>\n                    生物详情\n                </h3>\n            </div>\n            <div class=\"list\">\n                <div class=\"row\">\n                    <label>倍率：</label>\n                    <select v-model=\"creature.usertamingmultiplier\" @change=\"onChangeUserTamingMul\">\n                        <option value=\"3\">官服毁灭服(3倍)</option>\n                        <option value=\"1\">官服(1倍)</option>\n                    </select>\n                </div>\n                <div class=\"row\" style=\"position: relative\">\n                    <label>生物：</label>\n                    <div class=\"input autosuggest-container\">\n                        <vue-autosuggest\n                                v-model=\"creatureName\"\n                                :suggestions=\"filteredOptions\"\n                                :input-props=\"{id:'autosuggest__input', placeholder:'恐龙'}\"\n                                @focus=\"focusMe\"\n                                @click=\"clickHandler\"\n                                @input=\"onInputChange\"\n                                @selected=\"onSelected\"\n                                :get-suggestion-value=\"getSuggestionValue\"\n                        >\n                            <template slot-scope=\"{suggestion}\">\n                                <span class=\"my-suggestion-item\">{{suggestion.item.name_chi}}({{suggestion.item.name}})</span>\n                            </template>\n                        </vue-autosuggest>\n                    </div>\n                    <span style=\"font-size: 10px;position: absolute; right:80px;top:6px\" v-if=\"creature.name\">\n                        <a :href=\"dododexUrl\" target=\"_blank\" id=\"dododexUrl\">dododex</a>\n                    </span>\n\t\t\t\t\t<span style=\"font-size: 10px;position: absolute; right:50px;top:6px\" v-if=\"creature.name\">\n\t\t\t\t\t\t<a :href=\"wikiUrl\" target=\"_blank\" id=\"wikiUrl\">wiki</a>\n\t\t\t\t\t</span>\n                </div>\n                <div class=\"row\">\n                    <label>等级：</label><input v-model=\"creature.level\" @change=\"onChangeLevel\"/>\n                </div>\n            </div>\n        </div>\n        <div v-if=\"creature.tamingmethod == 'Standard'\">\n            <div class=\"title\">\n                <h3>\n                    击晕\n                </h3>\n            </div>\n            <div class=\"list-table\">\n                <div class=\"row\" v-for=\"ko in creature.kos\" v-bind:key=\"ko.komethod\">\n                    <label>{{ko.komethod_chi}}</label>\n                    <span v-if=\"ko.koquantities.Head\">\n                        头 : {{ko.koquantities.Head}}\n                    </span>\n                    <span v-if=\"ko.koquantities.Body\">\n                        身体 : {{ko.koquantities.Body}}\n                    </span>\n                </div>\n            </div>\n        </div>\n        <div v-if=\"creature && creature.foods && creature.foods.length > 0\">\n            <div class=\"title\">\n                <h3>\n                    食物详情\n                    <span v-if=\"this.creature.tamingmethod == 'Non-Violent'\">\n                        (非暴力驯服 - 由于数据不准，仅供参考， 请参照<a :href=\"dododexUrl\" target=\"_blank\" id=\"dododexUrl2\">DODODEX</a>上的详细信息)\n                    </span>\n                </h3>\n            </div>\n            <div class=\"list-table\">\n                <div class=\"row\" v-for=\"food in creature.foods2\" v-bind:key=\"food.name\">\n                    <label><a href=\"javascript:void(0)\" @click=\"onClickFood(food)\">{{food.name_chi}}</a></label>\n                    <span>\n                        {{food.maxfoodamount}}\n                    </span>\n                    <span>\n                        {{food.timeStr}}\n                    </span>\n                </div>\n            </div>\n        </div>\n        <div v-if=\"creature.tamingmethod == 'Standard'\">\n            <div class=\"title\">\n                <h3>\n                    驯服详情\n                </h3>\n            </div>\n            <div class=\"list-table\">\n                <div class=\"row\">\n                    <label>选择的食物：</label>{{creature.food}}\n                </div>\n                <div class=\"row\">\n                    <label>总时间：</label> {{creature.totaltimeStr}}\n                </div>\n                <div class=\"row\">\n                    <label>苏醒时间：</label>{{creature.narcoticss && creature.narcoticss[0].buffertimeStr}}\n                </div>\n            </div>\n        </div>\n        <div v-if=\"creature.tamingmethod == 'Standard'\">\n            <div class=\"title\">\n                <h3>\n                    总结\n                </h3>\n            </div>\n            <div class=\"list-table\">\n                <div class=\"row\">\n                    <span>清醒与麻醉时间差：</span>\n                    <span>\n                        {{creature.differenceStr}}\n                    </span>\n                    <span v-if=\"creature.waitTimeStr\" style=\"color:#ff0064\">\n                        {{creature.waitTimeStr}}\n                    </span>\n                </div>\n                <div class=\"row primary\" style=\"font-size: 14px;\" v-for=\"refillTime in creature.refillTimes\">\n                    <span>喂麻药时间:{{refillTime.refillTimeStr}}</span>\n                    <span v-if=\"refillTime.dateStr\"><span style=\"color:#ff0064\">{{refillTime.dateStr}}</span></span>\n                    <span v-for=\"narcotics in refillTime.narcotics\" style=\"margin-left: 2px\">\n                            <span>({{narcotics.name_chi}}<span\n                                    style=\"color: darkred\"> {{narcotics.amount}} </span>个)</span>\n                              </span>\n                </div>\n            </div>\n        </div>\n        <div class=\"start\" v-if=\"creature.tamingmethod == 'Standard'\">\n            <button @click=\"startTame\">开始驯服</button>\n            <span style=\"margin-left: 15px;font-size: 10px\">\n                <input type=\"checkbox\" id=\"bellOption\" style=\"width: inherit;\" checked=\"checked\"/>喂麻药闹铃提醒\n            </span>\n        </div>\n        <audio src=\"/bell.mp3\" style='display:none' id='bell'></audio>\n    </div>\n</template>\n\n<script>\n    import Vue from 'vue'\n    import $scope from '@/js/arkdata.js';\n    import '@/js/ark.js';\n    import dinos from '@/js/dinos.js'\n    import {formatTimeToStr, toHHMMSS} from '@/js/date.js';\n    import dododexNames from '@/js/dododexnames.js';\n\n    //import Autocomplete from 'vue2-autocomplete-js';\n    //require('vue2-autocomplete-js/dist/style/vue2-autocomplete.css')\n\n    export default {\n        name: \"ark\",\n        data() {\n            return {\n                creatureName: null,\n                creature: {\n                    name: null,\n                    level: 20,\n                    foods: [],\n                    knockout: null,\n                    name_chi: null,\n                    food: 'Raw Meat',\n                    usertamingmultiplier: 3\n\n                },\n                creatures: []\n            }\n        },\n        props: {},\n        created: function () {\n            window._self = this;\n            for (let c in $scope.creatures) {\n                $scope.creatures[c].name = c;\n                $scope.creatures[c].name_chi = dinos[c];\n                this.creatures.push($scope.creatures[c])\n            }\n\t\t\tfor (let c in dinos){\n\t\t\t\tif(this.creatures.map(e=>e.name).indexOf(c) == -1){\n\t\t\t\t\tthis.creatures.push({\n\t\t\t\t\t\tname : c,\n\t\t\t\t\t\tname_chi : dinos[c],\n\t\t\t\t\t\tfoodrate: -0.001578 * 211.237854,\n\t\t\t\t\t\tbasetorpor: 400,\n\t\t\t\t\t\tbasetorporrate: -0.1 * 3,\n\t\t\t\t\t\ttorporperlevel: 0.06,\n\t\t\t\t\t\tbaseaffinity: 2000,\n\t\t\t\t\t\taffinityperlevel: 75,\n\t\t\t\t\t\tineffectbyaff: 2.5,\n\t\t\t\t\t\tbasefood: '',\n\t\t\t\t\t\tfoods: [],\n\t\t\t\t\t\tkibble: '',\n\t\t\t\t\t\ttamingmethods: [''],\n\t\t\t\t\t\tdamagemultipliers: {\n\t\t\t\t\t\t\t\"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n\t\t\t\t\t\t\t\"DmgType_Melee_Human\": 0.8,\n\t\t\t\t\t\t\t\"DmgType_Melee_Dino_Herbivore\": 0.6\n\t\t\t\t\t\t},\n\t\t\t\t\t\thitboxes: {\n\t\t\t\t\t\t\t\"Body\": 1\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n            window.$scope = $scope\n            /*$scope.resetfoods();\n            $scope.selectdino();\n            $scope.maxfoodcalc();\n            $scope.alltimescalc();\n            $scope.foodcalc();\n            $rootScope.pagetitle = \"ARK Taming Calculator\";*/\n        },\n        computed: {\n            dododexUrl() {\n                return 'https://www.dododex.com/taming/' + this.creature.dododexName + '/' + this.creature.level;\n            },\n\t\t\twikiUrl(){\n            \treturn \"https://ark.gamepedia.com/\" + this.creature.name\n\t\t\t},\n            filteredOptions() {\n                return [\n                    {\n                        data: this.creatures.filter(option => {\n                            if (!option.name_chi || !this.creatureName) {\n                                return false;\n                            }\n                            if (this.creature != null)\n                                return option.name_chi.toLowerCase().indexOf(this.creatureName.toLowerCase()) > -1;\n                        })\n                    }\n                ];\n            }\n        },\n        methods: {\n            clickHandler(item) {\n                // event fired when clicking on the input\n            },\n            onSelected(item) {\n                let oldLevel = this.creature.level;\n                let oldUserMul = this.creature.usertamingmultiplier\n                this.creature = item.item\n                this.creature.level = oldLevel;\n                this.creature.usertamingmultiplier = oldUserMul;\n                console.log($scope)\n                this.arkSelectLevel()\n                console.log(this.creature)\n            },\n            onInputChange(text) {\n                // event fired when the input changes\n                //console.log(text)\n            },\n            /**\n             * This is what the <input/> value is set to when you are selecting a suggestion.\n             */\n            getSuggestionValue(suggestion) {\n                return suggestion.item.name_chi;\n            },\n            focusMe(e) {\n                //console.log(e) // FocusEvent\n            },\n            onClickFood(food) {\n                this.creature.food = food.name;\n                this.arkFoodCalc();\n                this.arkNarcoticsCalc();\n                this.arkFinalCalc();\n            },\n            onChangeLevel(e) {\n                console.log(this.creature.level)\n                this.arkSelectLevel()\n                this.$set(this.creature, 'level', this.creature.level)\n                document.getElementById('dododexUrl').href = 'https://www.dododex.com/taming/' + this.creature.dododexName + '/' + this.creature.level;\n                let elementById = document.getElementById('dododexUrl2');\n                if(elementById) {\n                    elementById.href = 'https://www.dododex.com/taming/' + this.creature.dododexName + '/' + this.creature.level;\n                }\n            },\n            onChangeUserTamingMul() {\n                this.arkSelectLevel()\n            },\n            duang(){\n                if(document.getElementById('bellOption').checked) {\n                    document.getElementById('bell').play();\n                }\n            },\n            startTame() {\n                /* this.creature = this.creature;\n                 this.creature.refillTimes = [];\n                 this.$set(this.creature, 'refillTimes', [{\n                     refillTime : 111,\n                     refillTimeStr : toHHMMSS(111),\n                     narcotics : null,\n                     date : new Date()\n                 }]);;*/\n                //this.duang();\n                this.creature.startTameDate = new Date()\n                let self = this;\n                if (this.creature.refillTimes.length > 0) {\n                    let prev = this.creature.startTameDate;\n                    let prevDuang = 0;\n                    for (var i in  this.creature.refillTimes) {\n                        let t = this.creature.refillTimes[i];\n                        t.date = new Date(prev.getTime() + t.refillTime * 1000);\n                        t.dateStr = formatTimeToStr(t.date);\n                        Vue.set(this.creature.refillTimes, i, t);\n                        if(t.timeout){\n                            clearTimeout(t.timeout);\n                        }\n                        console.log(\"rfillTime\", t.refillTime)\n                        t.timeout = setTimeout(this.duang, prevDuang + t.refillTime * 1000);\n                        prevDuang += t.refillTime * 1000;\n                        prev = t.date;\n                    }\n\n                    this.creature = Object.assign({}, this.creature);\n                    /*\n                                        this.$set(this.creature, 'refillTimes', [{\n                                            refillTime : 111,\n                                            refillTimeStr : toHHMMSS(111),\n                                            narcotics : null,\n                                            date : new Date()\n                                        }]);*/\n                    //let reserve = Object.assign([], this.creature.refillTimes);\n                    //this.creature.refillTimes.splice(0)\n                    //this.$set(this.creature, 'refillTimes', this.creature.refillTimes)\n                    /*reserve.forEach(e=>{\n                        this.creature.refillTimes.push(e);\n                    })*/\n\n                }else{\n                    this.creature.waitTime = new Date(this.creature.startTameDate.getTime() + this.creature.totaltime * 1000);\n                    this.$set(this.creature, 'waitTimeStr' , formatTimeToStr(this.creature.waitTime));\n                    if(this.creature.timeout){\n                        clearTimeout(this.creature.timeout);\n                    }\n                    this.creature.timeout = setTimeout(this.duang, this.creature.totaltime * 1000);\n                }\n                console.log(this.creature)\n            },\n            arkSelectLevel() {\n                console.log('select level')\n                let creature = this.creature;\n                document.getElementsByTagName('title')[0].textContent = creature.name_chi + \" \" + creature.level + ' - yilnz\\'s 方舟驯服计算器'\n                if (creature.name == null) {\n                    return null;\n                }\n                if (creature.level > 2000) {\n                    creature.level = 2000;\n                }\n                if (isNaN(creature.level) || creature.level < 1) {\n                    return;\n                }\n\n                let creaturedata = $scope.creatures[creature.name];\n\n\t\t\t\tlet dododexName = dododexNames[creature.name];\n\t\t\t\tif (dododexName) {\n\t\t\t\t\tcreature.dododexName = dododexName.dododexName;\n\t\t\t\t} else {\n\t\t\t\t\tcreature.dododexName = creature.name.replace(' ', '').toLowerCase()\n\t\t\t\t}\n                if(creaturedata == null){\n                \treturn\n\t\t\t\t}\n                creature.requiredaffinity = creaturedata.baseaffinity + creaturedata.affinityperlevel * creature.level;\n                creature.torpor = creaturedata.basetorpor + creaturedata.basetorpor * creaturedata.torporperlevel * (creature.level - 1);\n                creature.torporrate = creaturedata.basetorporrate + Math.pow(creature.level - 1, $scope.texponent) / ($scope.tcoefficient / creaturedata.basetorporrate);\n\n                //creature.usertamingmultiplier = 1;\n                creature.tamingmultiplier = 1;\n                creature.foodratemultiplier = 1;\n\n                creature.tamingmultiplier = creature.usertamingmultiplier * $scope.basetamingmultiplier;\n\n                creature.tamingmethod = creature.tamingmethods[0];\n\n                creature.food = creature.basefood\n\n                this.arkKoCalc();\n                this.arkMaxFoodCalc();\n                this.arkAllTimeCalc();\n                this.arkFoodCalc();\n                this.arkNarcoticsCalc();\n                this.arkFinalCalc();\n            },\n            arkKoCalc() {\n                let kos = [];\n                for (let method in $scope.komethods) {\n                    let komethod = $scope.komethods[method];\n                    let $ko = Object.assign({}, $scope.ko);\n                    $ko.komethod = method;\n                    $ko.komethod_chi = komethod.name_chi;\n                    //var komethod = $scope.komethods[$scope.ko.komethod];\n                    $ko.koquantities = {};\n\n                    $ko.searchkomethod = $ko.komethod; //Ensure the searchname is kept up to date\n\n                    for (let hitbox in $scope.creatures[this.creature.name].hitboxes) {\n                        var torpor = komethod.torpor * $scope.creatures[this.creature.name].hitboxes[hitbox];\n                        var damage = komethod.damage * $scope.creatures[this.creature.name].hitboxes[hitbox];\n                        if (komethod.usesmeleedam) {\n                            torpor *= $ko.komeleedam / 100;\n                            damage *= $ko.komeleedam / 100;\n                        }\n                        if (komethod.usesweapondam) {\n                            torpor *= $ko.koweapondam / 100;\n                            damage *= $ko.koweapondam / 100;\n                        }\n                        for (let i = 0; i < komethod.damagetypes.length; i++) {\n                            if (komethod.damagetypes[i] in $scope.creatures[this.creature.name].damagemultipliers) {\n                                torpor *= $scope.creatures[this.creature.name].damagemultipliers[komethod.damagetypes[i]];\n                                damage *= $scope.creatures[this.creature.name].damagemultipliers[komethod.damagetypes[i]];\n                            }\n                        }\n                        $ko.kotorpor[hitbox] = torpor;\n                        $ko.kodamage[hitbox] = damage;\n                        $ko.koquantities[hitbox] = Math.ceil(this.creature.torpor / torpor);\n                        $ko.kotimes[hitbox] = $ko.koquantities[hitbox] * komethod.time;\n                    }\n                    kos.push($ko);\n                }\n\n                this.creature.kos = kos;\n            },\n            arkMaxFoodCalc: function () {\n                let creature = this.creature;\n                this.creature.maxfoodamounts = {};\n                if (this.creature.tamingmethod == \"Standard\") {\n\n                    for (var food in $scope.foods) {\n                        this.creature.maxfoodamounts[food] = Math.ceil(creature.requiredaffinity / $scope.foods[food].affinity / creature.tamingmultiplier);\n                    }\n\n                }\n\n                if (this.creature.tamingmethod == \"Non-Violent\") {\n\n                    for (var food in $scope.foods) {\n                        this.creature.maxfoodamounts[food] = Math.ceil(creature.requiredaffinity / $scope.foods[food].affinity / creature.tamingmultiplier / creature.nonviolentfoodaffinitymultiplier);\n                    }\n\n                }\n\n                this.creature.foods2 = [];\n                this.creature.foods.forEach(f => {\n                    this.creature.foods2.push({\n                        name: f,\n                        maxfoodamount: this.creature.maxfoodamounts[f],\n                        name_chi: $scope.foods[f].name_chi ? $scope.foods[f].name_chi : f\n                    })\n                })\n            },\n            arkAllTimeCalc: function () {\n                let creature = this.creature;\n                creature.times = {};\n\n                if (creature.tamingmethod == \"Standard\") {\n                    creature.foodrate = $scope.creatures[creature.name].foodrate * creature.foodratemultiplier;\n                }\n                if (creature.tamingmethod == \"Non-Violent\") {\n                    creature.foodrate = $scope.creatures[creature.name].foodrate * creature.foodratemultiplier * $scope.creatures[creature.name].nonviolentfoodratemultiplier;\n                }\n\n                for (var food in creature.maxfoodamounts) {\n                    creature.times[food] = creature.maxfoodamounts[food] * -$scope.foods[food].food / creature.foodrate;\n                }\n\n                this.creature.foods.forEach((f, index) => {\n                    let foods2Element = this.creature.foods2[index];\n                    foods2Element.time = creature.times[f];\n                    foods2Element.timeStr = toHHMMSS(foods2Element.time);\n                })\n            },\n            arkFoodCalc: function () {\n                this.creature.totaltime = this.creature.times[this.creature.food]\n                this.$set(this.creature, 'totaltimeStr', toHHMMSS(this.creature.totaltime))\n                console.log(this.creature.totaltimeStr)\n            },\n            arkNarcoticsCalc: function () {\n                let narcoticss = [];\n                for (let narcoticsmethodname in $scope.narcoticsmethods) {\n                    let $narcotics = Object.assign({}, $scope.narcotics)\n                    var narcoticsmethod = $scope.narcoticsmethods[narcoticsmethodname];\n                    $narcotics.buffertime = this.creature.torpor / -this.creature.torporrate;\n                    $narcotics.max = Math.ceil($scope.totaltime * -this.creature.torporrate / (narcoticsmethod.torpor - this.creature.torporrate * narcoticsmethod.time));\n                    $narcotics.min = Math.max(Math.ceil(($scope.totaltime * -this.creature.torporrate - this.creature.torpor) / (narcoticsmethod.torpor - this.creature.torporrate * narcoticsmethod.time)), 0);\n                    $narcotics.buffernarcotics = Math.ceil(this.creature.torpor / narcoticsmethod.torpor);\n                    $narcotics.narcoticsbuffertime = narcoticsmethod.time * $narcotics.buffernarcotics;\n                    $narcotics.narcoticsmethod = narcoticsmethodname;\n                    $narcotics.buffertimeStr = toHHMMSS($narcotics.buffertime)\n                    //$scope.narcoticstimingcalc();\n                    narcoticss.push($narcotics)\n                }\n                //this.creature.narcoticss = narcoticss;\n                this.$set(this.creature, 'narcoticss', narcoticss)\n                this.creature.buffertime = narcoticss[0].buffertime;\n            },\n            arkCalcMazui: function (torpor) {\n                let mazui = []\n                for (let narcoticsmethodname in $scope.narcoticsmethods) {\n                    let narcoticsmethod = $scope.narcoticsmethods[narcoticsmethodname];\n                    mazui.push({\n                        amount: Math.ceil(torpor / narcoticsmethod.torpor),\n                        name: narcoticsmethodname,\n                        name_chi: $scope.narcoticsmethods[narcoticsmethodname].name_chi\n                    });\n                }\n                mazui = mazui.reverse();\n                return mazui;\n            },\n            arkFinalCalc: function () {\n                let creature = this.creature;\n                let difference = creature.totaltime - creature.buffertime;\n                creature.difference = difference;\n                if (isNaN(difference)) {\n                    return\n                }\n                if (creature.difference < 0) {\n                    creature.differenceStr = '无需喂麻药';\n                    creature.refillTimes = [];\n                    return;\n                }\n                creature.differenceStr = toHHMMSS(difference);\n\n                let requireTorpor = creature.difference * -creature.torporrate;\n                let refillTimes = [];\n                let mazui = this.arkCalcMazui(requireTorpor);\n                // if(creature.difference < creature.buffertime){\n                let refillTime = (creature.torpor - requireTorpor) / -creature.torporrate\n                if (creature.buffertime < creature.difference) {\n                    let leftTime = creature.difference;\n                    while (leftTime > 0) {\n                        let beforeLeftTime = leftTime;\n                        leftTime = leftTime - (creature.buffertime - 5 * 60)\n                        if (leftTime < 0) {\n                            refillTimes.push({\n                                refillTime: beforeLeftTime,\n                                refillTimeStr: toHHMMSS(beforeLeftTime),\n                                narcotics: this.arkCalcMazui(beforeLeftTime * -creature.torporrate)\n                            })\n                            break;\n                        }\n                        refillTimes.push({\n                            refillTime: (creature.buffertime - 5 * 60),\n                            refillTimeStr: toHHMMSS((creature.buffertime - 5 * 60)),\n                            narcotics: this.arkCalcMazui((creature.buffertime - 5 * 60) * -creature.torporrate)\n                        })\n                    }\n\n                } else {\n                    refillTimes.push({\n                        refillTime: refillTime,\n                        refillTimeStr: toHHMMSS(refillTime),\n                        narcotics: mazui\n                    })\n                }\n                // }else{\n                /*let leftTorpor = creature.torpor;\n                while(true){\n                        let calcTorpor = (leftTorpor - requireTorpor - -creature.torporrate * 5 * 60)\n                    if(calcTorpor <= 0){\n                        break;\n                    }\n                    let rfTime = calcTorpor / -creature.torporrate;\n                    refillTimes.push({\n                        refillTime : rfTime,\n                        refillTimeStr : toHHMMSS(rfTime),\n                        narcotics : this.arkCalcMazui(calcTorpor)\n                    })\n                    leftTorpor = requireTorpor - calcTorpor;\n                }\n                if(leftTorpor > 0){\n                    let refillTime = leftTorpor / -creature.torporrate;\n                    refillTimes.push({\n                        refillTime : refillTime,\n                        refillTimeStr : toHHMMSS(refillTime),\n                        narcotics : this.arkCalcMazui(leftTorpor)\n                    })\n                }*/\n                // }\n                creature.refillTimes = refillTimes;\n            }\n        }\n\n    }\n\n\n</script>\n\n<style scoped>\n    #main {\n        background: linear-gradient(rgba(40, 100, 100, 0.6), rgba(40, 100, 100, 0.3));\n        width: 650px;\n        /*display: table;*/\n        /*text-align: center;*/\n        /*border-width: 2px;\n        border-style: solid;*/\n        border-radius: 10px;\n        /*border-color:  rgba(50, 200, 200, 0.6);*/\n        /*background-color: rgba(40, 100, 100, 0.5);*/\n        background: linear-gradient(rgba(40, 100, 100, 0.6), rgba(40, 100, 100, 0.3));\n        padding: 10px;\n        margin: 0 auto;\n    }\n\n    .primary {\n        color: darkgreen;\n    }\n\n    .title {\n        text-align: center;\n    }\n\n    .list-table .row {\n        display: table-row;\n    }\n\n    .list .row {\n        padding: 0 20px;\n        width: 550px;\n        margin: 2px 0;\n        text-align: center;\n    }\n\n    .list-table .row > * {\n        display: table-cell;\n        padding: 5px;\n    }\n\n    .list-table {\n        display: table;\n        margin: 0 auto;\n    }\n\n\n    .list {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n\n    .lit .row label {\n        display: inline-block;\n        width: 100px;\n    }\n\n    ul {\n        padding: 0px;\n        margin: 0px;\n    }\n\n    li {\n        padding: 0px;\n        margin: 0px;\n    }\n\n    .start {\n        margin-top: 20px;\n        text-align: center;\n    }\n\n    .input {\n        display: inline-block;\n    }\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ark.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ark.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Ark.vue?vue&type=template&id=6b94bf50&scoped=true&\"\nimport script from \"./Ark.vue?vue&type=script&lang=js&\"\nexport * from \"./Ark.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Ark.vue?vue&type=style&index=0&id=6b94bf50&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6b94bf50\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',[_vm._v(\"ARK过滤复制器\")]),_c('hr'),_vm._l((_vm.categories),function(category){return _c('div',{style:({display:'inline-block', 'margin-right': '20px', border: '1px solid',\n\t'vertical-align':'top', 'color' : category.color, 'float' :'left'})},[_c('table',[_c('th',[_c('h4',[_vm._v(_vm._s(category.category))])]),_vm._l((category.items),function(item){return _c('tr',[_c('td',[_vm._v(_vm._s(item))]),_vm._m(0,true)])})],2)])}),_c('hr'),_c('div',{staticClass:\"autosuggest-container\"},[_c('vue-autosuggest',{staticClass:\"input\",attrs:{\"suggestions\":_vm.filteredOptions,\"get-suggestion-value\":_vm.getSuggestionValue,\"input-props\":{id:'autosuggest__input', placeholder:''}},on:{\"focus\":_vm.focusMe,\"click\":_vm.clickHandler,\"input\":_vm.onInputChange,\"selected\":_vm.onSelected},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\n\tvar suggestion = ref.suggestion;\nreturn _c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"display\":\"inline-block\"}},[_vm._v(_vm._s(suggestion.item.seq)+\". \")]),_c('div',{staticStyle:{\"{display\":\"'flex',color:'navyblue'}\"}},[_vm._v(_vm._s(suggestion.item.name))]),_c('div',{staticStyle:{\"display\":\"inline-block\"}},[_vm._v(\" (\"+_vm._s(suggestion.item.index)+\")\")])])}}]),model:{value:(_vm.query),callback:function ($$v) {_vm.query=$$v},expression:\"query\"}})],1),_vm._m(1)],2)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('td',[_c('button',{staticClass:\"copy\"},[_vm._v(\"复制\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"clear\":\"both\"}},[_c('h1',[_vm._v(\"流程\")]),_c('hr'),_c('div',[_vm._v(\"\\n\\t\\t\\t搓子弹：\\n\\t\\t\")]),_c('div',{attrs:{\"id\":\"zidan\"}})])}]\n\nexport { render, staticRenderFns }","export default [{\n\tname: \"金属\",\n\tindex: \"js\",\n}, {\n\tname: \"胸甲\",\n\tindex: \"xj|yf\"\n}, {\n\tname: \"靴\",\n\tindex: \"xz\"\n},\n\t{\n\t\tname: \"护腿\",\n\t\tindex: \"ht\"\n\t}, {\n\t\tname: '头盔',\n\t\tindex: \"tk\"\n\t},\n\t{\n\t\tname: '泰克',\n\t\tindex: \"tk\"\n\t},\n\t{\n\t\tname: '地基',\n\t\tindex: \"dj\"\n\t},\n\t{\n\t\tname: '柱',\n\t\tindex: \"z\"\n\t}\n]\n","export default [\n    {\n        category : \"购买\",\n        items : ['/礼包','/购买 ', '/商店 1','/商店 2','/商店 3','/商店 4','/商店 5','/商店 6','/商店 7', '/商店 8','/商店 9','/商店 10','/商店 11','/商店 12' ]\n    },\n    {\n        category : \"垃圾\",\n        color : '#FF00FF',\n        items : [ '皮肤','时装','奖杯', '服装', \"种子\", '植入体', '布', '石制','石镐','弓','长矛','配方', '稀有']\n    },{\n        category :\"基础工具\",\n        color : '#FF00FF',\n        items :['镐','斧', '镰', 'BIT']\n    },\n    {\n        category : \"基础资源\",\n        color : '#FF0000',\n        items : ['石头', '金属', '茅草','燧石', '纤维', '油', '水晶', '兽皮', '硅珍珠', '毛皮','甲壳','角质', '黑曜石']\n    },\n    {\n        category : \"二级资源\",\n        color : '#FF0000',\n        items : ['金属锭','水泥', '煤炭', '引火粉', '火药', '电路元件', '聚合物', 'paste','powder']\n    },{\n        category : \"三级资源\",\n        color : '#FF0000',\n        items : ['能量', '碎片', '粉尘', '黑珍珠']\n    },{\n        category : \"弹药\",\n        color : '#FF0000',\n        items : ['子弹', '箭']\n    },\n    {\n        category : \"不常用资源\",\n        color : '#FF0000',\n        items : ['毛发', '剪刀']\n    },{\n        category : \"鞍\",\n        color : '#0F778F',\n        items : ['鞍']\n    },\n    {\n        category : \"食物\",\n        color : '#FF9900',\n        items : ['浆果', '肉']\n    },\n    {\n        category : '建筑物',\n        color : \"#0077FF\",\n        items : ['床', '箱', '地基','柱子', '门', 'foundation', 'ceil', 'pillar']\n    },{\n        category : '起家（按顺序）',\n        color : \"#0077FF\",\n        items : ['foundation', '床','床头边', 'awesome teleporter', 'refining(汽油)', 'ARKomatic workbench', 'ARKomatic wireless generator', 'mini fabricator', '工业熔炉(金属锭)', 'mini grinder(水泥)', 'ARKomatic checmistry bench(水泥)','ARKomatic fabricator(电子元件)', 'dedicated crfater(水泥电子元件)' ,'S+ crafting station','S+ fabricator(工业熔炉)', 'industrial forge(金属锭)', 'BBQ(dino finder)', 'MINI BAR',  'trough', 'vault*****', 'kibble','smithy',  'soul terminal', 'bookshelf', 'repair', 'dedicated storage','transmitter', 'dedicated crfater(引火火药子弹)']\n    },\n\t{\n        category : '防御',\n        color :  \"#0077FF\",\n        items : [\n            '炮塔',\n            'turret',\n\t\t\t'含硅珍珠',\n\t\t\t'金属锭',\n\t\t\t'电路元件',\n\t\t\t'石头',\n\t\t\t'甲壳',\n\t\t\t'水泥'\n        ]\n    },{\n\t\tcategory : '搓子弹',\n\t\tcolor : \"#0077FF\",\n\t\titems : [\n\t\t\t'石头','燧石', '引火粉', '木炭', '火药', '金属锭', '高级步枪子弹', '元素碎片'\n\t\t]\n\t}\n    ,\n\t{\n        category : '随身装备',\n        color : \"#030066\",\n        items : ['awesome teleporter', 'dino finder', 'soul trap', 'soul gun', 'reusable', '能量元素', '长管步枪', '强效麻醉镖', '肉', '熟', '鞭子']\n    },\n    {\n        category : \"衣服\",\n        color : \"#030066\",\n        items : [ '头盔','胸甲','护腿', '手套','靴','泰克胸甲']\n    },\n\t{\n\t\tcategory : '传图',\n\t\tcolor : \"#030066\",\n\t\titems : ['metal foundation', '床','床头边', 'awesome teleporter', '汽油',  'ARKomatic wireless generator', 'auto turret', 'tek transmitter']\n\t},\n\t{\n        category : \"孵龙\",\n        color : '#0AA00A',\n        items : ['Incubator', 'Nanny',  'Hatchery', 'Mutator', 'Vivarium', 'Sheep Herder', 'Animal Tender']\n    },\n\t{\n\t\tcategory : \"种菜\",\n\t\tcolor : '#0AA00A',\n\t\titems : ['HG', 'Tap', 'Seamless Crop', '温室', 'item collector', 'compost bin', 'Farmer', 'Gardener', 'Industry Cooking Pot', 'Tek Cooking Pot']\n\t},\n\t{\n\t\tcategory : '拍据点',\n\t\tcolor : \"#ff003c\",\n\t\titems : ['metal foundation', '床','床头边', 'awesome teleporter', '汽油',  'wireless generator', '重炮', '高级步枪子弹', 'ARKomatic turret filler']\n\t},\n]\n","export default {\n\tinit(){\n\t\tconsole.log('flow inited')\n\t\tthis.parse('zidan',\n\t\t\t'st1=>start: 开始\\n' +\n\t\t\t'st=>parallel: 准备\\n' +\n\t\t\t'meitan=>operation: 打煤炭或烧煤炭\\n' +\n\t\t\t'shitou=>operation: 打石头/燧石\\n' +\n\t\t\t'tie=>operation: 打金属\\n' +\n\t\t\t'shaotie=>operation: 烧铁\\n'+\n\t\t\t'yinhuofen=>operation: 搓引火粉=石头+燧石\\n'+\n\t\t\t'huoyao=>operation: 搓火药=引火粉+煤炭\\n' +\n\t\t\t'zidan=>end: 搓子弹\\n' +\n\t\t\t'st1(right)->st\\n' +\n\t\t\t'st(path1, top)->meitan\\n' +\n\t\t\t'st(path2, right)->shitou\\n' +\n\t\t\t'st(path3, bottom)->tie\\n' +\n\t\t\t'shitou(right)->yinhuofen\\n' +\n\t\t\t'yinhuofen(right)->huoyao\\n'+\n\t\t\t'meitan(right)->huoyao\\n' +\n\t\t\t'tie(right)->shaotie\\n' +\n\t\t\t'shaotie(right)->zidan\\n' +\n\t\t\t'huoyao->zidan\\n'\n\t\t)\n\t},\n\n\tparse(elementId, text){\n\t\tlet diagram = flowchart.parse(text);\n\t\tdiagram.drawSVG(elementId);\n\t}\n}\n","<template>\n\t<div>\n\t\t<h1>ARK过滤复制器</h1>\n\t\t<hr/>\n\t\t<div  v-for=\"category in categories\" v-bind:style=\"{display:'inline-block', 'margin-right': '20px', border: '1px solid',\n\t\t'vertical-align':'top', 'color' : category.color, 'float' :'left'}\">\n\t\t\t<table>\n\t\t\t<th><h4>{{category.category}}</h4></th>\n\t\t\t<tr v-for=\"item in category.items\">\n\t\t\t\t<td>{{item}}</td>\n\t\t\t\t<td><button class=\"copy\">复制</button></td>\n\t\t\t</tr>\n\t\t\t</table>\n\t\t</div>\n\t\t<hr />\n\t\t<div class=\"autosuggest-container\">\n\t\t\t<vue-autosuggest\n\t\t\t\t\tclass=\"input\"\n\t\t\t\t\tv-model=\"query\"\n\t\t\t\t\t:suggestions=\"filteredOptions\"\n\t\t\t\t\t@focus=\"focusMe\"\n\t\t\t\t\t@click=\"clickHandler\"\n\t\t\t\t\t@input=\"onInputChange\"\n\t\t\t\t\t@selected=\"onSelected\"\n\t\t\t\t\t:get-suggestion-value=\"getSuggestionValue\"\n\t\t\t\t\t:input-props=\"{id:'autosuggest__input', placeholder:''}\">\n\t\t\t\t<div slot-scope=\"{suggestion}\" style=\"display: flex; align-items: center;\">\n\t\t\t\t\t<div style=\"display: inline-block\">{{suggestion.item.seq}}.&nbsp;</div>\n\t\t\t\t\t<div style=\"{display:'flex',color:'navyblue'}\">{{suggestion.item.name}}</div>\n\t\t\t\t\t<div style=\"display: inline-block\">&nbsp;({{suggestion.item.index}})</div>\n\t\t\t\t</div>\n\t\t\t</vue-autosuggest>\n\t\t</div>\n\t\t<div style=\"clear:both\">\n\t\t\t<h1 >流程</h1>\n\t\t\t<hr />\n\t\t\t<div >\n\t\t\t\t搓子弹：\n\t\t\t</div>\n\t\t\t<div id=\"zidan\">\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\t/* eslint-disable */\n\timport items from '@/js/items.js'\n\timport items_category from '@/js/category.js'\n\timport flow from '@/js/flow.js'\n\n\n\texport default {\n\t\tname: \"Filter\",\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tcategories : items_category,\n\t\t\t\tquery: \"\",\n\t\t\t\tselected: \"\",\n\t\t\t\tsuggestions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: items\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tstopFoucs : false\n\t\t\t};\n\t\t},\n\t\tcomputed: {\n\t\t\tfilteredOptions() {\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: this.getFilter()\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\t\t},\n\t\tmounted: function () {\n\t\t\tlet input = document.querySelector('.input input');\n\t\t\t//input.focus();\n\t\t\t// Force focus\n\t\t\tlet self = this;\n\t\t\tinput.onblur = function () {\n\t\t\t\tif(!self.stopFoucs){\n\t\t\t\t\t//document.querySelector('.input input').focus();\n\t\t\t\t}\n\t\t\t}\n\t\t\tinput.addEventListener('keydown', function (e) {\n\t\t\t\tconsole.log(e.which)\n\t\t\t\tif (e.which == 27 || e.which == 20) {\n\t\t\t\t\tinput.value = ''\n\t\t\t\t}\n\t\t\t\tif (e.key.match(/\\d/)) {\n\t\t\t\t\te.preventDefault()\n\t\t\t\t\tconsole.log(self.getFilter())\n\t\t\t\t\tdocument.querySelector('.input input');\n\t\t\t\t\tdocument.querySelector('.autosuggest__results-container').remove()\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tlet copys = document.querySelectorAll(\".copy\");\n\t\t\tfor(let i = 0;i < copys.length;i++){\n\t\t\t\tcopys[i].onclick = function(){\n\t\t\t\t\tlet text = this.parentNode.previousSibling.textContent;\n\t\t\t\t\tself.copy(text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tflow.init();\n\t\t},\n\t\tmethods: {\n\t\t\tgetFilter() {\n\t\t\t\treturn this.suggestions[0].data.filter(option => {\n\t\t\t\t\treturn option.index.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n\t\t\t\t}).map((e, i) => {\n\t\t\t\t\te.seq = (i + 1);\n\t\t\t\t\treturn e;\n\t\t\t\t})\n\t\t\t},\n\t\t\tcopy(text) {\n\t\t\t\tvar input = document.createElement('textarea');\n\t\t\t\tinput.innerHTML = text;\n\t\t\t\tdocument.body.appendChild(input);\n\t\t\t\tthis.stopFoucs = true\n\t\t\t\t//input.focus()\n\t\t\t\tinput.select();\n\t\t\t\tvar result = document.execCommand('copy');\n\t\t\t\tconsole.log(text+\" copyed , result: \" + result)\n\t\t\t\tdocument.body.removeChild(input);\n\t\t\t\tthis.stopFoucs = false\n\t\t\t\t//document.querySelector('.input input').focus()\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tclickHandler(item) {\n\t\t\t\t// event fired when clicking on the input\n\n\t\t\t},\n\t\t\tonSelected(item) {\n\t\t\t\tthis.selected = item.item;\n\t\t\t\tthis.copy(this.selected.name)\n\t\t\t},\n\t\t\tonInputChange(text) {\n\t\t\t\t// event fired when the input changes\n\n\n\t\t\t},\n\t\t\t/**\n\t\t\t * This is what the <input/> value is set to when you are selecting a suggestion.\n\t\t\t */\n\t\t\tgetSuggestionValue(suggestion) {\n\t\t\t\treturn suggestion.item.name;\n\t\t\t},\n\t\t\tfocusMe(e) {\n\t\t\t\t//console.log(e) // FocusEven\n\t\t\t\t//this.selected = {}\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Filter.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Filter.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Filter.vue?vue&type=template&id=57e165d6&scoped=true&\"\nimport script from \"./Filter.vue?vue&type=script&lang=js&\"\nexport * from \"./Filter.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"57e165d6\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('hr'),_c('ol',[_c('li',[_c('a',{attrs:{\"href\":\"https://steamcommunity.com/sharedfiles/filedetails/?id=731604991\",\"target\":\"_blank\"}},[_vm._v(\"S+ steam创意工坊介绍\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://steamcommunity.com/sharedfiles/filedetails/?id=731604991\",\"target\":\"_blank\"}},[_vm._v(\"Awesome Teleporters steam创意工坊介绍\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://ark.gamepedia.com/Mod:Structures_Plus\",\"target\":\"_blank\"}},[_vm._v(\"S+ Wiki\")])])])])}]\n\nexport { render, staticRenderFns }","<template>\n\t<div>\n\t\t<hr/>\n\t\t<ol>\n\t\t\t<li><a href=\"https://steamcommunity.com/sharedfiles/filedetails/?id=731604991\" target=\"_blank\">S+ steam创意工坊介绍</a></li>\n\t\t\t<li><a href=\"https://steamcommunity.com/sharedfiles/filedetails/?id=731604991\" target=\"_blank\">Awesome Teleporters steam创意工坊介绍</a></li>\n\t\t\t<li><a href=\"https://ark.gamepedia.com/Mod:Structures_Plus\" target=\"_blank\">S+ Wiki</a></li>\n\t\t</ol>\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\tname: \"Links\"\n\t}\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Links.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Links.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Links.vue?vue&type=template&id=1948a32b&scoped=true&\"\nimport script from \"./Links.vue?vue&type=script&lang=js&\"\nexport * from \"./Links.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1948a32b\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n//import Autocomplete from 'v-autocomplete'\n\n// You need a specific loader for CSS files like https://github.com/webpack/css-loader\n//import 'v-autocomplete/dist/v-autocomplete.css'\n\n//Vue.use(Autocomplete)\nimport VueAutosuggest from \"vue-autosuggest\";\nimport VueRouter from 'vue-router';\nimport Ark from \"./components/Ark\";\nimport Filter from \"./components/Filter\";\nimport Links from \"./components/Links\";\n\nVue.use(VueAutosuggest);\nVue.use(VueRouter)\n\nVue.config.productionTip = false\n\nconst router = new VueRouter({\n\tmode: 'history',\n\troutes : [\n\t\t{ path: '/', component: Filter, name: 'filter' },\n\t\t{path : '/taming', component: Ark, name : 'taming'},\n\t\t{path : '/links', component: Links, name : 'links'}\n\t]\n})\n\nnew Vue({\n\tel: '#app',\n\trouter : router,\n\trender: h => h(App),\n    data : {\n      pageTitle : 'yilnz\\'s 方舟工具'\n    }\n});\n\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ark.vue?vue&type=style&index=0&id=6b94bf50&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ark.vue?vue&type=style&index=0&id=6b94bf50&scoped=true&lang=css&\""],"sourceRoot":""}