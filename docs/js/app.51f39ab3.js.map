{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?4241","webpack:///./src/js/arkdata.js","webpack:///./src/App.vue?4879","webpack:///./src/components/Ark.vue?f50b","webpack:///./src/js/dinos.js","webpack:///./src/js/date.js","webpack:///./src/js/dododexnames.js","webpack:///src/components/Ark.vue","webpack:///./src/components/Ark.vue?927d","webpack:///./src/components/Ark.vue?8343","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue?bff9","webpack:///./src/main.js","webpack:///./src/components/Ark.vue?8276"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","$scope","$rootScope","$interval","$cookies","$animate","creature","creaturedata","Appvue_type_template_id_6f9ffdc7_render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticRenderFns","Arkvue_type_template_id_3cd50664_scoped_true_render","_m","staticClass","_v","directives","rawName","expression","on","change","$event","$$selectedVal","Array","filter","target","options","selected","map","val","_value","$set","multiple","onChangeUserTamingMul","staticStyle","position","suggestions","filteredOptions","input-props","placeholder","get-suggestion-value","getSuggestionValue","focus","focusMe","click","clickHandler","input","onInputChange","onSelected","scopedSlots","_u","fn","ref","suggestion","_s","item","name_chi","model","callback","$$v","creatureName","font-size","right","top","href","dododexUrl","_e","domProps","onChangeLevel","composing","tamingmethod","_l","ko","komethod","komethod_chi","koquantities","Head","Body","foods","food","onClickFood","maxfoodamount","timeStr","totaltimeStr","narcoticss","buffertimeStr","differenceStr","refillTime","refillTimeStr","color","dateStr","narcotics","margin-left","amount","startTame","Arkvue_type_template_id_3cd50664_scoped_true_staticRenderFns","text-align","getObject","enabled","Mejoberry","affinity","Mejoberry-Kentro","Other Berry","Other Berry-Kentro","Raw Meat","Raw Meat-Arthropluera","Raw Meat-Daeodon","Raw Meat-Thylacoleo","Cooked Meat","Cooked Meat-Daeodon","Cooked Meat-Thylacoleo","Meat Jerky","Prime Meat","Prime Meat-Compsognathus","Prime Meat-Daeodon","Prime Meat-Thylacoleo","C/J Prime","C/J Prime-Daeodon","C/J Prime-Thylacoleo","Spoiled Meat","Mutton","Mutton-Compsognathus","Mutton-Daeodon","Mutton-Thylacoleo","Lamb Chop","Lamb Chop-Daeodon","Lamb Chop-Thylacoleo","Raw Fish","Cooked Fish","Prime Fish","Cooked Prime Fish","Kibble-Generic","Kibble-Bronto","Kibble-Gigantopithecus","Kibble-Griffin","Kibble-Mosasaurus","Kibble-Diplodocus","Kibble-Therizinosaurus","Kibble-Daeodon","Kibble-Megalania","Crop","Rare Mushroom","Plant Species X Seed","Giga Egg","Quetz Egg","Rex Egg","Spino Egg","Bronto Egg","Carno Egg","Dodo Egg","Human Feces","Large Feces","Medium Feces","Small Feces","Angler Gel","Broth of Enlightenment","Rare Flower","Honey-Direbear","komethods","Slingshot","damagetypes","damage","torpor","usesmeleedam","usesweapondam","time","Bow","Crossbow","Longneck","Fists","Club","Electric Prod","Scorpion","Beelzebufo (Main)","Beelzebufo (Secondary)","Pachy (Normal)","Pachy (Charge)","narcoticsmethods","Narcotics","rate","Narcoberries","creatures","Allosaurus","foodrate","basetorpor","basetorporrate","torporperlevel","baseaffinity","affinityperlevel","ineffectbyaff","basefood","kibble","tamingmethods","damagemultipliers","DmgType_Melee_HighTorpidity_StoneWeapon","DmgType_Melee_Human","DmgType_Melee_Dino_Herbivore","hitboxes","Anglerfish","Ankylosaurus","Araneo","nonviolentfoodratemultiplier","nonviolentfoodaffinitymultiplier","Argentavis","DmgType_Projectile","Arthropluera","Beelzebufo","Brontosaurus","Carbonemys","Shell","Tail","Carnotaurus","Castoroides","Compsognathus","Daeodon","Dilophosaurus","Dimetrodon","Dimorphodon","Diplodocus","Direbear","Direwolf","Dodo","Doedicurus","Dung Beetle","Dunkleosteus","DamageType","Gallimimus","Giganotosaurus","Gigantopithecus","Griffin","Ichthyosaurus","Iguanodon","Kairuku","Kentrosaurus","Lystrosaurus","Mammoth","Manta","Megalania","Megaloceros","Megalodon","Mesopithicus","Mosasaurus","Onyc","Oviraptor","Pachycephalosaurus","Paraceratherium","Parasaurolophus","Pelagornis","Phiomia","Plesiosaurus","Procoptodon","Pteranodon","Pulmonoscorpius","Quetzalcoatlus","Raptor","Rex","Sabertooth","Sarcosuchus","Spinosaurus","Stegosaurus","Tapejara","Terror Bird","Therizinosaurus","Thylacoleo","Triceratops","Vulture","Woolly Rhino","pagetitle","tablevisibility","undefined","version","Creature","Food","Tame","Starve","Knockout","showextratamedetails","showanimations","showoldselects","texponent","tcoefficient","basetamingmultiplier","searchname","level","usertamingmultiplier","tamingmultiplier","foodratemultiplier","totalfood","suppliedaffinity","buffertime","max","min","buffernarcotics","narcoticsbuffertime","narcoticsmethod","narcoticstiming","start","Date","topupnarcotics","currenttorpor","intervalid","alarm","alarmthreshold","narcoticstimes","starvetiming","maxfood","currentfood","starvetime","koweapondam","komeleedam","searchkomethod","kotimes","kotorpor","kodamage","showhidetable","table","now","putObject","expires","getFullYear","getMonth","getDate","path","showhideextratamedetails","showhideoldselects","showhideanimations","alert","filterFoods","foodamounts","searchdino","selectdino","knockoutcalc","indexOf","fillfood","resetfoods","narcoticstimer","selectlevel","isNaN","requiredaffinity","torporrate","Math","pow","maxfoodcalc","alltimescalc","foodcalc","starvetimingcalc","settamingmethod","setFillFood","maxfoodamounts","ceil","times","totaltimecalc","effectivenesscalc","totaltime","narcoticscalc","narcoticstimingcalc","suppliedtime","suppliedtorpor","method","supplynarcotic","supplynarcoticamount","narcoticsapplied","audio","Audio","volume","play","cancel","timedfoodamount","scope","tametime","starvetimer","effectiveness","fedfood","extralevels","floor","hitbox","dinos","Achatina","Ammonite","Archaeopteryx","Attack Drone","Baryonyx","Basilisk","Basilosaurus","Broodmother Lysrix","Bulbdog","Chalicotherium","Cnidaria","Coelacanth","Deathworm","Defense Unit","Desert Titan","Diplocaulus","Dragon","Dragonfly","Electrophorus","Enforcer","Equus","Eurypterid","Featherlight","Forest Titan","Gacha","Gasbags","Giant Bee","Glowbug","Glowtail","Hesperornis","Hyaenodon","Ice Titan","Ichthyornis","Jerboa","Jugbug","Kaprosuchus","Karkinos","Lamprey","Leech","Leedsichthys","Liopleurodon","Lymantria","Managarmr","Manticore","Mantis","Mega Mek","Megalosaurus","Meganeura","Megapithecus","Megatherium","Mek","Microraptor","Morellatops","Moschops","Nameless","Otter","Overseer","Ovis","Pachyrhinosaurus","Pegomastax","Phoenix","Piranha","Purlovia","Ravager","Reaper","Rock Drake","Rock Elemental","Roll Rat","Sabertooth Salmon","Scout","Seeker","shinehorn","snow Owl","Thorny Dragon","Titanoboa","Titanomyrma","Titanosaur","Trilobite","Troodon","Tusoteuthis","Velonasaur","Wyvern","Yeti","Yutyrannus","formatTimeToStr","pattern","Format","toLocaleString","toHHMMSS","sec_num","hours","minutes","seconds","fmt","M+","d+","h+","getHours","m+","getMinutes","s+","getSeconds","q+","S","getMilliseconds","k","test","replace","RegExp","$1","substr","dododexnames","dododexName","Arkvue_type_script_lang_js_","knockout","props","created","arkdata","computed","_this","option","toLowerCase","methods","oldLevel","oldUserMul","console","log","arkSelectLevel","text","e","arkFoodCalc","arkNarcoticsCalc","arkFinalCalc","document","getElementById","startTameDate","refillTimes","prev","date","getTime","vue_runtime_esm","set","assign","getElementsByTagName","textContent","arkKoCalc","arkMaxFoodCalc","arkAllTimeCalc","kos","$ko","_this2","foods2","forEach","f","_this3","index","foods2Element","narcoticsmethodname","$narcotics","arkCalcMazui","mazui","reverse","difference","requireTorpor","leftTime","beforeLeftTime","components_Arkvue_type_script_lang_js_","component","componentNormalizer","Ark","Appvue_type_script_lang_js_","components","src_Appvue_type_script_lang_js_","App_component","App","Vue","use","Autocomplete","VueAutosuggest","config","productionTip","render","h","pageTitle","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Ark_vue_vue_type_style_index_0_id_3cd50664_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Ark_vue_vue_type_style_index_0_id_3cd50664_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.51f39ab3.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","let $scope , $rootScope , $interval , $cookies , $animate;\n$scope =  $rootScope = $interval = $cookies = $animate = {};\n\n//window.$scope = $scope;\nlet creature;\nlet creaturedata;\n\n\n$cookies = {\n    getObject : function(){\n        return 'undefined';\n    }\n}\n\n$animate = {\n    enabled : function(){\n        return false;\n    }\n}\n\n$scope.foods = {\n\n    'Mejoberry': {\n        name_chi : '紫果子',\n        food: 30,\n        affinity: 30\n    },\n    'Mejoberry-Kentro': {\n        name_chi : 'Mejoberry-Kentro',\n        food: 30,\n        affinity: 10\n    },\n    'Other Berry': {\n        name_chi : '其他果子',\n        food: 20,\n        affinity: 20\n    },\n    'Other Berry-Kentro': {\n        name_chi : 'Other Berry-Kentro',\n        food: 20,\n        affinity: 7\n    },\n    'Raw Meat': {\n        name_chi : '生肉',\n        food: 50,\n        affinity: 50\n    },\n    'Raw Meat-Arthropluera': {\n        name_chi : 'Raw Meat-Arthropluera',\n        food: 15,\n        affinity: 15\n    },\n    'Raw Meat-Daeodon': {\n        name_chi : 'Raw Meat-Daeodon',\n        food: 10,\n        affinity: 10\n    },\n    'Raw Meat-Thylacoleo': {\n        name_chi :'Raw Meat-Thylacoleo',\n        food: 50,\n        affinity: 10\n    },\n    'Cooked Meat': {\n        name_chi : '熟肉',\n        food: 25,\n        affinity: 25\n    },\n    'Cooked Meat-Daeodon': {\n        name_chi : 'Cooked Meat-Daeodon',\n        food: 25,\n        affinity: 5\n    },\n    'Cooked Meat-Thylacoleo': {\n        name_chi : 'Cooked Meat-Thylacoleo',\n        food: 25,\n        affinity: 20\n    },\n    'Meat Jerky': {\n        name_chi : '肉干',\n        food: 25,\n        affinity: 25\n    },\n    'Prime Meat': {\n        name_chi : '大腿肉',\n        food: 50,\n        affinity: 150\n    },\n    'Prime Meat-Compsognathus': {\n        name_chi : 'Prime Meat-Compsognathus',\n        food: 20,\n        affinity: 600\n    },\n    'Prime Meat-Daeodon': {\n        food: 50,\n        affinity: 30\n    },\n    'Prime Meat-Thylacoleo': {\n        food: 50,\n        affinity: 20\n    },\n    'C/J Prime': {\n        name_chi : '煮熟/风干 大腿肉',\n        food: 50,\n        affinity: 75\n    },\n    'C/J Prime-Daeodon': {\n        food: 49.945,\n        affinity: 15\n    },\n    'C/J Prime-Thylacoleo': {\n        food: 49.945,\n        affinity: 35\n    },\n    'Spoiled Meat': {\n        name_chi : '腐肉',\n        food: 50,\n        affinity: 100\n    },\n    'Mutton': {\n        name_chi : '羊肉',\n        food: 50,\n        affinity: 187.5\n    },\n    'Mutton-Compsognathus': {\n        food: 20,\n        affinity: 750\n    },\n    'Mutton-Daeodon': {\n        food: 50,\n        affinity: 37.5\n    },\n    'Mutton-Thylacoleo': {\n        food: 50,\n        affinity: 25\n    },\n    'Lamb Chop': {\n        name_chi : '熟羊肉',\n        food: 49.945,\n        affinity: 101.25\n    },\n    'Lamb Chop-Daeodon': {\n        food: 49.945,\n        affinity: 20.25\n    },\n    'Lamb Chop-Thylacoleo': {\n        food: 49.945,\n        affinity: 47.25\n    },\n    'Raw Fish': {\n        name_chi : '生鱼肉',\n        food: 25,\n        affinity: 20\n    },\n    'Cooked Fish': {\n        name_chi : '熟鱼肉',\n        food: 25,\n        affinity: 10\n    },\n    'Prime Fish': {\n        name_chi : '精英鱼肉',\n        food: 25,\n        affinity: 60\n    },\n    'Cooked Prime Fish': {\n        name_chi : '熟精英鱼肉',\n        food: 25,\n        affinity: 30\n    },\n    'Kibble-Generic': {\n        name_chi : '普通饲料',\n        food: 79.98,\n        affinity: 400\n    },\n    'Kibble-Bronto': {\n        food: 53.28,\n        affinity: 400\n    },\n    'Kibble-Gigantopithecus': {\n        food: 79.98,\n        affinity: 300\n    },\n    \"Kibble-Griffin\": {\n        food: 80,\n        affinity: 550\n    },\n    'Kibble-Mosasaurus': {\n        food: 79.98,\n        affinity: 550\n    },\n    'Kibble-Diplodocus': {\n        food: 53.28,\n        affinity: 275\n    },\n    'Kibble-Therizinosaurus': {\n        food: 119.97,\n        affinity: 400\n    },\n    'Kibble-Daeodon': {\n        food: 119.97,\n        affinity: 400\n    },\n    'Kibble-Megalania': {\n        food: 119.97,\n        affinity: 400\n    },\n    'Crop': {\n        name_chi : '农作物',\n        food: 40,\n        affinity: 40\n    },\n    'Rare Mushroom': {\n        name_chi : '稀有蘑菇',\n        food: 75,\n        affinity: 90\n    },\n    'Plant Species X Seed': {\n        name_chi : 'X异种种子',\n        food: 50,\n        affinity: 45\n    },\n    'Giga Egg': {\n        food: 300,\n        affinity: 1200\n    },\n    'Quetz Egg': {\n        food: 200,\n        affinity: 550\n    },\n    'Rex Egg': {\n        food: 200,\n        affinity: 100\n    },\n    'Spino Egg': {\n        food: 137.5,\n        affinity: 80\n    },\n    'Bronto Egg': {\n        food: 250,\n        affinity: 60\n    },\n    'Carno Egg': {\n        food: 137.5,\n        affinity: 30\n    },\n    'Dodo Egg': {\n        food: 20,\n        affinity: 9\n    },\n    'Human Feces': {\n        name_chi : '人类粪便',\n        food: 10,\n        affinity: 60\n    },\n    'Large Feces': {\n        name_chi : '大型动物粪便',\n        food: 37.5,\n        affinity: 225\n    },\n    'Medium Feces': {\n        name_chi : '中型动物粪便',\n        food: 25,\n        affinity: 150\n    },\n    'Small Feces': {\n        name_chi : '小型动物粪便',\n        food: 12.5,\n        affinity: 75\n    },\n    'Angler Gel': {\n        food: 24,\n        affinity: 50.0\n    },\n    'Broth of Enlightenment': {\n        food: 80,\n        affinity: 1500.0\n    },\n    'Rare Flower': {\n        name_chi : '稀有花朵',\n        food: 34.9995,\n        affinity: 200\n    },\n    'Honey-Direbear': {\n        name_chi : '恐熊蜂蜜',\n        food: 80,\n        affinity: 400\n    }\n\n}\n\n$scope.komethods = {\n\n    /*'Bow': 20*2+20*2.5,\n        'Crossbow': 35*2+35*2.5,\n        'Longneck': 26*6+26*2.5*/\n\n    'Slingshot': {\n        name_chi : '弹弓',\n        damagetypes: [\n            \"DmgType_ProjectileWithImpactFX_DoubleTorp\",\n            \"DmgType_ProjectileWithImpactFX\",\n            \"DmgType_Projectile\"\n        ],\n        damage: 14,\n        torpor: 14 * 1.75,\n        usesmeleedam: false,\n        usesweapondam: true,\n        time: 0\n    },\n    'Bow': {\n        name_chi : '弓',\n        damagetypes: [\n            \"DmgType_ProjectileWithImpactFX_Tranq\",\n            \"DmgType_ProjectileWithImpactFX\",\n            \"DmgType_Projectile\"\n        ],\n        damage: 20,\n        torpor: 20 * 2 + 20 * 2.5,\n        usesmeleedam: false,\n        usesweapondam: true,\n        time: 5\n    },\n\n    'Crossbow': {\n        name_chi : '十字弩',\n        damagetypes: [\n            \"DmgType_ProjectileWithImpactFX_Tranq\",\n            \"DmgType_ProjectileWithImpactFX\",\n            \"DmgType_Projectile\"\n        ],\n        damage: 35,\n        torpor: 35 * 2 + 35 * 2.5,\n        usesmeleedam: false,\n        usesweapondam: true,\n        time: 5\n    },\n\n    'Longneck': {\n        name_chi :'长管步枪',\n        damagetypes: [\n            \"DmgType_ProjectileWithImpactFX_TranqMore\",\n            \"DmgType_ProjectileWithImpactFX\",\n            \"DmgType_Projectile\"\n        ],\n        damage: 26,\n        torpor: 26 * 6 + 26 * 2.5,\n        usesmeleedam: false,\n        usesweapondam: true,\n        time: 5\n    },\n    'Fists': {\n        name_chi :'拳头',\n        damagetypes: [\n            \"DmgType_Melee_Torpidity_SelfHurt\",\n            \"DmgType_Melee_Torpidity_StoneWeapon\",\n            \"DmgType_Melee_Torpidity\",\n            \"DmgType_Melee_Human\",\n            \"DmgType_Melee\"\n        ],\n        damage: 8,\n        torpor: 8 * 1.75,\n        usesmeleedam: true,\n        usesweapondam: false,\n        time: 0\n    },\n    'Club': {\n        name_chi :'棒子',\n        damagetypes: [\n            \"DmgType_Melee_HighTorpidity_StoneWeapon_Club\",\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\",\n            \"DmgType_Melee_Torpidity_StoneWeapon\",\n            \"DmgType_Melee_Torpidity\",\n            \"DmgType_Melee_Human\",\n            \"DmgType_Melee\"\n        ],\n        damage: 5,\n        torpor: 5 * 3.75,\n        usesmeleedam: true,\n        usesweapondam: true,\n        time: 0\n    },\n    'Electric Prod': {\n        name_chi :'电击棒',\n        damagetypes: [\n            \"DmgType_Melee_Human_ElectricStun\",\n            \"DmgType_Melee_Human\",\n            \"DmgType_Melee\"\n        ],\n        damage: 1,\n        torpor: 1 * 500,\n        usesmeleedam: false,\n        usesweapondam: true,\n        time: 0\n    },\n    'Scorpion': {\n        name_chi : '巨蝎',\n        damagetypes: [\n            \"DmgType_Melee_TorpPoison\",\n            \"DmgType_Melee_Dino_Carnivore_Small\",\n            \"DmgType_Melee_Dino_Carnivore\",\n            \"DmgType_Melee_Dino\",\n            \"DmgType_Melee\"\n        ],\n        damage: 15,\n        torpor: 15 * 3,\n        usesmeleedam: true,\n        usesweapondam: false,\n        time: 10\n    },\n    'Beelzebufo (Main)': {\n        name_chi : '魔鬼蛙(主攻击)',\n        damagetypes: [\n            \"DmgType_Melee_TorpPoison_ChitinPaste\",\n            \"DmgType_Melee_TorpPoison\",\n            \"DmgType_Melee_Dino_Carnivore_Small\",\n            \"DmgType_Melee_Dino_Carnivore\",\n            \"DmgType_Melee_Dino\",\n            \"DmgType_Melee\"\n        ],\n        damage: 12,\n        torpor: 12 * 3,\n        usesmeleedam: true,\n        usesweapondam: false,\n        time: 10\n    },\n    'Beelzebufo (Secondary)': {\n        name_chi : '魔鬼蛙(副攻击)',\n        damagetypes: [\n            \"DmgType_Melee_TorpPoison_ChitinPaste\",\n            \"DmgType_Melee_TorpPoison\",\n            \"DmgType_Melee_Dino_Carnivore_Small\",\n            \"DmgType_Melee_Dino_Carnivore\",\n            \"DmgType_Melee_Dino\",\n            \"DmgType_Melee\"\n        ],\n        damage: 20,\n        torpor: 20 * 3,\n        usesmeleedam: true,\n        usesweapondam: false,\n        time: 10\n    },\n    'Pachy (Normal)': {\n        name_chi : '肿头龙(普通攻击)',\n        damagetypes: [\n            \"DmgType_Melee_Dino_Herbivore_Small_LargeTorp\",\n            \"DmgType_Melee_Dino_Herbivore_Small\",\n            \"DmgType_Melee_Dino_Herbivore\",\n            \"DmgType_Melee_Dino\",\n            \"DmgType_Melee\"\n        ],\n        damage: 10,\n        torpor: 10 * 1,\n        usesmeleedam: true,\n        usesweapondam: false,\n        time: 0\n    },\n    'Pachy (Charge)': {\n        name_chi : '肿头龙(蓄力攻击)',\n        damagetypes: [\n            \"DmgType_Melee_Dino_Herbivore_Small_HugeTorp\",\n            \"DmgType_Melee_Dino_Herbivore_Small\",\n            \"DmgType_Melee_Dino_Herbivore\",\n            \"DmgType_Melee_Dino\",\n            \"DmgType_Melee\"\n        ],\n        damage: 17,\n        torpor: 17 * 3.5,\n        usesmeleedam: true,\n        usesweapondam: false,\n        time: 0\n    }\n\n};\n\n$scope.narcoticsmethods = {\n    \"Narcotics\": {\n        name_chi : '麻醉药',\n        torpor: 40,\n        time: 8,\n        rate: 5\n    },\n    \"Narcoberries\": {\n        name_chi : '黑果子',\n        torpor: 7.5,\n        time: 3,\n        rate: 2.5\n    }\n}\n\n$scope.creatures = {\n\n    Allosaurus: {\n        foodrate: -0.001852 * 180.063385,\n        basetorpor: 1000.0,\n        basetorporrate: -0.1 * 8.0,\n        torporperlevel: 0.06,\n        baseaffinity: 2400.0,\n        affinityperlevel: 100,\n        ineffectbyaff: 1.875,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Diplo',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Anglerfish: {\n        foodrate: -0.001852 * 149.988007,\n        basetorpor: 900,\n        basetorporrate: -7.0 * 0.4,\n        torporperlevel: 0.06,\n        baseaffinity: 1800.0,\n        affinityperlevel: 90,\n        ineffectbyaff: 2.5,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Kairuku',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Ankylosaurus: {\n        foodrate: -0.003156 * 176.03154,\n        basetorpor: 420,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 3000,\n        affinityperlevel: 150,\n        ineffectbyaff: 0.2,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Dilo',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Araneo: {\n        foodrate: -0.001736 * 864.055298,\n        baseaffinity: 4000,\n        affinityperlevel: 120,\n        ineffectbyaff: 4.166667,\n        basefood: 'Spoiled Meat',\n        foods: ['Spoiled Meat'],\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 2.0,\n        nonviolentfoodaffinitymultiplier: 1.0\n    },\n\n    Argentavis: {\n        foodrate: -0.001852 * 199.983994,\n        basetorpor: 600,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 2000,\n        affinityperlevel: 100,\n        ineffectbyaff: 1.875,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Stego',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Projectile\": 1.5,\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Arthropluera: {\n        foodrate: -0.001543 * 648.088135,\n        baseaffinity: 3000.0,\n        affinityperlevel: 75.0,\n        ineffectbyaff: 2.5,\n        basefood: 'Spoiled Meat',\n        foods: ['Raw Meat-Arthropluera', 'Spoiled Meat', 'Broth of Enlightenment'],\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 2.0,\n        nonviolentfoodaffinitymultiplier: 1.6\n    },\n\n    Beelzebufo: {\n        foodrate: -0.001929 * 648.00415,\n        basetorpor: 200,\n        basetorporrate: -0.1 * 6.666,\n        torporperlevel: 0.06,\n        baseaffinity: 1800.000,\n        affinityperlevel: 75,\n        ineffectbyaff: 0.4,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Scorp',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Brontosaurus: {\n        foodrate: -0.007716 * 180.001144,\n        basetorpor: 1900,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 10000,\n        affinityperlevel: 500,\n        ineffectbyaff: 0.06,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Bronto'],\n        kibble: 'Turtle',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Carbonemys: {\n        foodrate: -0.003156 * 352.06308,\n        basetorpor: 275,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 3000,\n        affinityperlevel: 150,\n        ineffectbyaff: 0.2,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Ptera',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Shell\": 0.2,\n            \"Tail\": 0.5\n        }\n    },\n\n    Carnotaurus: {\n        foodrate: -0.001852 * 199.983944,\n        basetorpor: 350,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 2000,\n        affinityperlevel: 100,\n        ineffectbyaff: 1.875,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Ankylo',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Castoroides: {\n        foodrate: -0.002314 * 160.056335,\n        basetorpor: 350,\n        basetorporrate: -0.1 * 15.0,\n        torporperlevel: 0.06,\n        baseaffinity: 2000,\n        affinityperlevel: 100,\n        ineffectbyaff: 0.3,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Galli',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Compsognathus: {\n        foodrate: -0.000868 * 1728.110596,\n        basetorpor: 25,\n        basetorporrate: -0.1 * 13.0,\n        torporperlevel: 0.06,\n        baseaffinity: 500.0,\n        affinityperlevel: 65.0,\n        ineffectbyaff: 8.333333,\n        basefood: 'Prime Meat-Compsognathus',\n        foods: ['Prime Meat-Compsognathus', 'Mutton-Compsognathus'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Daeodon: {\n        foodrate: -0.01 * 288.039185,\n        basetorpor: 800.0,\n        basetorporrate: -0.6 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 4500,\n        affinityperlevel: 245.0,\n        ineffectbyaff: 0.0625,\n        basefood: 'Raw Meat-Daeodon',\n        foods: ['Raw Meat-Daeodon', 'Prime Meat-Daeodon', 'C/J Prime-Daeodon', 'Mutton-Daeodon', 'Lamb Chop-Daeodon', 'Kibble-Daeodon'],\n        kibble: 'Iguanodon',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Dilophosaurus: {\n        foodrate: -0.000868 * 1728.110596,\n        basetorpor: 75,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 450,\n        affinityperlevel: 22.5,\n        ineffectbyaff: 8.333333,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Dimetrodon: {\n        foodrate: -0.001736 * 160.010239,\n        basetorpor: 750.0,\n        basetorporrate: -10.0 * 2.5,\n        torporperlevel: 0.06,\n        baseaffinity: 1500.0,\n        affinityperlevel: 90.0,\n        ineffectbyaff: 2.5,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Quetzal',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Dimorphodon: {\n        foodrate: -0.001302 * 1152.07373,\n        basetorpor: 100,\n        basetorporrate: -0.1 * 8.333,\n        torporperlevel: 0.06,\n        baseaffinity: 900,\n        affinityperlevel: 45,\n        ineffectbyaff: 4.166666,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Diplodocus: {\n        foodrate: -0.007716 * 180.001144,\n        basetorpor: 3000.0,\n        basetorporrate: -1 * 0.75,\n        torporperlevel: 0.06,\n        baseaffinity: 7500.0,\n        affinityperlevel: 375.0,\n        ineffectbyaff: 0.08,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Diplodocus'],\n        kibble: 'Lystrosaurus',\n        tamingmethods: ['Standard', 'Non-Violent'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        },\n        nonviolentfoodratemultiplier: 0.5, //2 in devkit\n        nonviolentfoodaffinitymultiplier: 3.0\n    },\n\n    \"Direbear\": {\n        foodrate: -0.003156 * 150.0,\n        basetorpor: 1000,\n        basetorporrate: -0.1 * 9.0,\n        torporperlevel: 0.06,\n        baseaffinity: 4000,\n        affinityperlevel: 125,\n        ineffectbyaff: 1.25,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Honey-Direbear', 'Mejoberry', 'Other Berry', 'Kibble-Generic'],\n        kibble: 'Carno',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    \"Direwolf\": {\n        foodrate: -0.001543 * 288.039185,\n        basetorpor: 450,\n        basetorporrate: -0.1 * 5.0,\n        torporperlevel: 0.06,\n        baseaffinity: 1200,\n        affinityperlevel: 60,\n        ineffectbyaff: 3.125,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Carno',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 2.5\n        }\n    },\n\n    Dodo: {\n        foodrate: -0.000868 * 2880.184326,\n        basetorpor: 30,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 450,\n        affinityperlevel: 22.5,\n        ineffectbyaff: 1.333333,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Doedicurus: {\n        foodrate: -0.003156 * 176.03154,\n        basetorpor: 800,\n        basetorporrate: -0.1 * 7.5,\n        torporperlevel: 0.06,\n        baseaffinity: 4000,\n        affinityperlevel: 150,\n        ineffectbyaff: 0.2,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Dilo',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    \"Dung Beetle\": {\n        foodrate: -0.001488 * 336.021515,\n        baseaffinity: 900.0,\n        affinityperlevel: 50.0,\n        ineffectbyaff: 4.166667,\n        basefood: 'Raw Meat',\n        foods: ['Human Feces', 'Small Feces', 'Medium Feces', 'Large Feces'],\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 2,\n        nonviolentfoodaffinitymultiplier: 1.0\n    },\n\n    Dunkleosteus: {\n        foodrate: -0.001852 * 199.983994,\n        basetorpor: 1150.0,\n        basetorporrate: -2.0 * 0.5,\n        torporperlevel: 0.06,\n        baseaffinity: 1300.0,\n        affinityperlevel: 60.0,\n        ineffectbyaff: 3.275,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Titanoboa',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DamageType\": 0.275,\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Gallimimus: {\n        foodrate: -0.001929 * 432.002777,\n        basetorpor: 420.0,\n        basetorporrate: -1.67 * 2.5,\n        torporperlevel: 0.06,\n        baseaffinity: 2200.0,\n        affinityperlevel: 95.0,\n        ineffectbyaff: 0.4,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Dimetro',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 2\n        }\n    },\n\n    Giganotosaurus: {\n        foodrate: -0.002314 * 160.056335,\n        basetorpor: 10000,\n        basetorporrate: -25.0 * 4.8,\n        torporperlevel: 0.06,\n        baseaffinity: 5000,\n        affinityperlevel: 160,\n        ineffectbyaff: 1.25,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Quetzal',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Gigantopithecus: {\n        foodrate: -0.004156 * 176.03154,\n        baseaffinity: 4600.0,\n        affinityperlevel: 75,\n        ineffectbyaff: 2.5,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Kibble-Gigantopithecus'],\n        kibble: 'Titanoboa',\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 0.5, //2 in devkit\n        nonviolentfoodaffinitymultiplier: 1.65\n    },\n\n    Griffin: {\n        foodrate: -0.311111111,\n        basetorpor: 1500.0,\n        basetorporrate: -2.222222,\n        torporperlevel: 0.06,\n        baseaffinity: 3000.0,\n        affinityperlevel: 136,\n        ineffectbyaff: 3.125,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Griffin'],\n        kibble: 'Allosaurus',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Ichthyosaurus: {\n        foodrate: -0.001929 * 420.0,\n        baseaffinity: 1500,\n        affinityperlevel: 75,\n        ineffectbyaff: 2.5,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Dodo',\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 2.5,\n        nonviolentfoodaffinitymultiplier: 1.6\n    },\n\n    Iguanodon: {\n        foodrate: -0.001929 * 864.005554,\n        basetorpor: 210.0,\n        basetorporrate: -0.1 * 3.0,\n        torporperlevel: 0.06,\n        baseaffinity: 2800.0,\n        affinityperlevel: 140.0,\n        ineffectbyaff: 0.4,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Kibble-Generic'],\n        kibble: 'Microraptor',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 2\n        }\n    },\n\n    Kairuku: {\n        foodrate: -0.001389 * 1079.913574,\n        basetorpor: 300,\n        basetorporrate: -0.1 * 10.0,\n        torporperlevel: 0.06,\n        baseaffinity: 900,\n        affinityperlevel: 45,\n        ineffectbyaff: 4.166667,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Kentrosaurus: {\n        foodrate: -0.005341 * 208.034286,\n        basetorpor: 500.0,\n        basetorporrate: -0.1 * 3.0,\n        torporperlevel: 0.06,\n        baseaffinity: 5500.0,\n        affinityperlevel: 285.0,\n        ineffectbyaff: 0.1,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry-Kentro', 'Other Berry-Kentro', 'Crop', 'Kibble-Generic'],\n        kibble: 'Compy',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Lystrosaurus: {\n        foodrate: -0.000868 * 2880.184326,\n        baseaffinity: 2000.0,\n        affinityperlevel: 22.5,\n        ineffectbyaff: 1.333333,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Rare Flower'],\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 2.0,\n        nonviolentfoodaffinitymultiplier: 1.6\n    },\n\n    Mammoth: {\n        foodrate: -0.004133 * 192.027771,\n        basetorpor: 550,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 5000,\n        affinityperlevel: 250,\n        ineffectbyaff: 0.12,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Raptor',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Manta: {\n        foodrate: -0.001929 * 420.0,\n        baseaffinity: 1500.0,\n        affinityperlevel: 75.0,\n        ineffectbyaff: 2.5,\n        basefood: 'Angler Gel',\n        foods: ['Angler Gel'],\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 2.5,\n        nonviolentfoodaffinitymultiplier: 1.6\n    },\n\n    Megalania: {\n        foodrate: -0.001736 * 160.010239,\n        basetorpor: 700.0,\n        basetorporrate: -10.0 * 1.8,\n        torporperlevel: 0.06,\n        baseaffinity: 4000.0,\n        affinityperlevel: 85.0,\n        ineffectbyaff: 3.5,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Megalania'],\n        kibble: 'Baryonyx',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Megaloceros: {\n        foodrate: -0.001543 * 432.058746,\n        basetorpor: 175,\n        basetorporrate: -0.1 * 2.915,\n        torporperlevel: 0.06,\n        baseaffinity: 1200,\n        affinityperlevel: 60,\n        ineffectbyaff: 0.5,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Dimorph',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1.0000,\n            \"Head\": 2.5\n        }\n    },\n\n    Megalodon: {\n        foodrate: -0.001852 * 199.983994,\n        basetorpor: 800,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 2000,\n        affinityperlevel: 100,\n        ineffectbyaff: 1.875,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Spino',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Mesopithicus: {\n        foodrate: -0.000868 * 2880.184326,\n        baseaffinity: 2200,\n        affinityperlevel: 65,\n        ineffectbyaff: 2.5,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Kibble-Generic'],\n        kibble: 'Dodo',\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 2,\n        nonviolentfoodaffinitymultiplier: 1.65\n    },\n\n    Mosasaurus: {\n        foodrate: -0.005 * 180.001144,\n        basetorpor: 3000,\n        basetorporrate: -0.4 * 32.0,\n        torporperlevel: 0.06,\n        baseaffinity: 11000,\n        affinityperlevel: 600,\n        ineffectbyaff: 0.06,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Mosasaurus'],\n        kibble: 'Quetzal',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Onyc: {\n        foodrate: -0.002893 * 192.034409,\n        baseaffinity: 3000,\n        affinityperlevel: 90,\n        ineffectbyaff: 2.5,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop'],\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 2.0,\n        nonviolentfoodaffinitymultiplier: 1.0\n    },\n\n    Oviraptor: {\n        foodrate: -0.001302 * 768.049133,\n        basetorpor: 125.0,\n        basetorporrate: -0.1 * 2.08,\n        torporperlevel: 0.06,\n        baseaffinity: 960.0,\n        affinityperlevel: 42.0,\n        ineffectbyaff: 16.666668,\n        basefood: 'Dodo Egg',\n        foods: ['Dodo Egg', 'Giga Egg', 'Quetz Egg', 'Rex Egg', 'Spino Egg', 'Bronto Egg', 'Carno Egg'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Pachycephalosaurus: {\n        foodrate: -0.001543 * 648.088135,\n        basetorpor: 160.0,\n        basetorporrate: -0.1 * 2.666,\n        torporperlevel: 0.06,\n        baseaffinity: 1200.0,\n        affinityperlevel: 60.0,\n        ineffectbyaff: 0.5,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Dilo',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 0.125\n        }\n    },\n\n    Paraceratherium: {\n        foodrate: -0.0035 * 327.6474,\n        basetorpor: 1300.0,\n        basetorporrate: -0.1 * 9.025,\n        torporperlevel: 0.06,\n        baseaffinity: 6500.0,\n        affinityperlevel: 325.0,\n        ineffectbyaff: 0.0923,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Pachy',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Parasaurolophus: {\n        foodrate: -0.001929 * 864.005554,\n        basetorpor: 150,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 1500,\n        affinityperlevel: 75,\n        ineffectbyaff: 0.4,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 2\n        }\n    },\n\n    Pelagornis: {\n        foodrate: -0.001543 * 216.029373,\n        basetorpor: 120.0,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 1200.0,\n        affinityperlevel: 60.0,\n        ineffectbyaff: 3.125,\n        basefood: 'Raw Fish',\n        foods: ['Raw Fish', 'Prime Fish', 'Kibble-Generic'],\n        kibble: 'Compy',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Phiomia: {\n        foodrate: -0.003156 * 1584.283936,\n        basetorpor: 240,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 3000,\n        affinityperlevel: 150,\n        ineffectbyaff: 0.2,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Plesiosaurus: {\n        foodrate: -0.003858 * 180.001144,\n        basetorpor: 1600,\n        basetorporrate: -0.1 * 21.333332,\n        torporperlevel: 0.06,\n        baseaffinity: 5000,\n        affinityperlevel: 250,\n        ineffectbyaff: 0.75,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Rex',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Procoptodon: {\n        foodrate: -0.001929 * 648.00415,\n        basetorpor: 350.0,\n        basetorporrate: -0.1 * 6.666,\n        torporperlevel: 0.034285714,\n        baseaffinity: 3000.0,\n        affinityperlevel: 150.0,\n        ineffectbyaff: 0.2,\n        basefood: 'Rare Mushroom',\n        foods: ['Rare Mushroom', 'Plant Species X Seed'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Pteranodon: {\n        foodrate: -0.001543 * 216.029373,\n        basetorpor: 120,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 1200,\n        affinityperlevel: 60,\n        ineffectbyaff: 3.125,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Dodo',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Projectile\": 1.5,\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Pulmonoscorpius: {\n        foodrate: -0.001929 * 432.002777,\n        basetorpor: 150,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 1500,\n        affinityperlevel: 75,\n        ineffectbyaff: 6.15, //2.5 in devkit\n        basefood: 'Spoiled Meat',\n        foods: ['Spoiled Meat'],\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Quetzalcoatlus: {\n        foodrate: -0.0035 * 140.0,\n        basetorpor: 1850.0,\n        basetorporrate: -0.2 * 17,\n        torporperlevel: 0.06,\n        baseaffinity: 6850,\n        affinityperlevel: 300,\n        ineffectbyaff: 0.9375,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Rex',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Projectile\": 1.2,\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Raptor: {\n        foodrate: -0.001543 * 648.088135,\n        basetorpor: 180,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 1200,\n        affinityperlevel: 60,\n        ineffectbyaff: 3.125,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Parasaur',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Rex: {\n        foodrate: -0.002314 * 180.063385,\n        basetorpor: 1550,\n        basetorporrate: -0.1 * 7.25,\n        torporperlevel: 0.06,\n        baseaffinity: 3450,\n        affinityperlevel: 150,\n        ineffectbyaff: 1.25,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Scorp',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Sabertooth: {\n        foodrate: -0.001543 * 288.039185,\n        basetorpor: 500,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 1200,\n        affinityperlevel: 60,\n        ineffectbyaff: 3.125,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Bronto',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Sarcosuchus: {\n        foodrate: -0.001578 * 211.237854,\n        basetorpor: 400,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 2000,\n        affinityperlevel: 75,\n        ineffectbyaff: 2.5,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Trike',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Spinosaurus: {\n        foodrate: -0.002066 * 150.0,\n        basetorpor: 850,\n        basetorporrate: -0.1 * 21.333332,\n        torporperlevel: 0.06,\n        baseaffinity: 3200,\n        affinityperlevel: 150,\n        ineffectbyaff: 1.5,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Argent',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Stegosaurus: {\n        foodrate: -0.005341 * 208.034286,\n        basetorpor: 500,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 6000,\n        affinityperlevel: 300,\n        ineffectbyaff: 0.1,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Sarco',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 1.67\n        }\n    },\n\n    Tapejara: {\n        foodrate: -0.001543 * 216.029373,\n        basetorpor: 450.0,\n        basetorporrate: -0.1 * 3.0,\n        torporperlevel: 0.06,\n        baseaffinity: 2200.0,\n        affinityperlevel: 100.0,\n        ineffectbyaff: 3.125,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Allosaurus',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    \"Terror Bird\": {\n        foodrate: -0.001578 * 352.06308,\n        basetorpor: 300,\n        basetorporrate: -1.5 * 1.5,\n        torporperlevel: 0.06,\n        baseaffinity: 1600.0,\n        affinityperlevel: 85.0,\n        ineffectbyaff: 2.5,\n        basefood: 'Raw Meat',\n        foods: ['Raw Meat', 'Prime Meat', 'C/J Prime', 'Mutton', 'Lamb Chop', 'Kibble-Generic'],\n        kibble: 'Gallimimus',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Therizinosaurus: {\n        foodrate: -0.002314 * 180.063385,\n        basetorpor: 925.0,\n        basetorporrate: -0.1 * 28.333332,\n        torporperlevel: 0.06,\n        baseaffinity: 6800.0,\n        affinityperlevel: 160.0,\n        ineffectbyaff: 0.06,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Therizinosaurus'],\n        kibble: 'Megalosaurus',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 3\n        }\n    },\n\n    Thylacoleo: {\n        foodrate: -0.001543 * 288.039185,\n        basetorpor: 700.0,\n        basetorporrate: -0.1 * 18.5,\n        torporperlevel: 0.06,\n        baseaffinity: 2250.0,\n        affinityperlevel: 60.0,\n        ineffectbyaff: 3.125,\n        basefood: 'Raw Meat',\n        foods: ['Cooked Meat-Thylacoleo', 'Prime Meat-Thylacoleo', 'C/J Prime-Thylacoleo', 'Mutton-Thylacoleo', 'Lamb Chop-Thylacoleo', 'Kibble-Generic'],\n        kibble: 'Titanoboa',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8,\n            \"DmgType_Melee_Dino_Herbivore\": 0.6\n        },\n        hitboxes: {\n            \"Body\": 1,\n            \"Head\": 1.5\n        }\n    },\n\n    Triceratops: {\n        foodrate: -0.003156 * 352.06308,\n        basetorpor: 250,\n        basetorporrate: -0.1 * 3,\n        torporperlevel: 0.06,\n        baseaffinity: 3000,\n        affinityperlevel: 150,\n        ineffectbyaff: 0.2,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Generic'],\n        kibble: 'Carno',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    },\n\n    Vulture: {\n        foodrate: -0.001302 * 1152.07373,\n        baseaffinity: 655.0,\n        affinityperlevel: 45.0,\n        ineffectbyaff: 4.166666,\n        basefood: 'Spoiled Meat',\n        foods: ['Spoiled Meat'],\n        tamingmethods: ['Non-Violent'],\n        nonviolentfoodratemultiplier: 2, //devkit is 0.5\n        nonviolentfoodaffinitymultiplier: 1.6\n    },\n\n    \"Woolly Rhino\": {\n        foodrate: -0.003156 * 150.0,\n        basetorpor: 600.0,\n        basetorporrate: -0.1 * 9.0,\n        torporperlevel: 0.06,\n        baseaffinity: 3450.0,\n        affinityperlevel: 125.0,\n        ineffectbyaff: 1.25,\n        basefood: 'Mejoberry',\n        foods: ['Mejoberry', 'Other Berry', 'Crop', 'Kibble-Bronto'],\n        kibble: 'Terror Bird',\n        tamingmethods: ['Standard'],\n        damagemultipliers: {\n            \"DmgType_Melee_HighTorpidity_StoneWeapon\": 0.66,\n            \"DmgType_Melee_Human\": 0.8\n        },\n        hitboxes: {\n            \"Body\": 1\n        }\n    }\n}\n\n$rootScope.pagetitle = \"ARK Taming Calculator\";\n\n$scope.tablevisibility = $cookies.getObject('tablevisibility');\nif ($scope.tablevisibility == undefined || $scope.tablevisibility.version != \"20160131\") {\n    $scope.tablevisibility = {\n        \"version\": \"20160131\",\n        \"Creature\": true,\n        \"Food\": true,\n        \"Tame\": true,\n        \"Narcotics\": false,\n        \"Starve\": false,\n        \"Knockout\": false\n    }\n}\n\n$scope.showextratamedetails = $cookies.getObject(\"showextratamedetails\");\nif ($scope.showextratamedetails == undefined) {\n    $scope.showextratamedetails = 0;\n}\n\n$scope.showanimations = $cookies.getObject(\"showanimations\");\nif ($scope.showanimations == undefined) {\n    $scope.showanimations = 1;\n}\n$animate.enabled($scope.showanimations);\n\n$scope.showoldselects = $cookies.getObject(\"showoldselects\");\nif ($scope.showoldselects == undefined) {\n    $scope.showoldselects = 0;\n}\n\n$scope.texponent = 0.800403041; //0.829050872; //0.76593984; //0.827745067192723; //0.8107032;\n$scope.tcoefficient = 22.39671632; //25.7837826; //18.62553525; //24.7933173692763; //21.93040668;\n$scope.basetamingmultiplier = 2; //Hidden tame rate multiplier on official servers\n\n//Value relating to the creature being tamed\n$scope.creature = $cookies.getObject('creature');\nif ($scope.creature == undefined || !($scope.creature.name in $scope.creatures) || $scope.creature.version != \"20171022\") {\n    $scope.creature = {\n        version: \"20171022\",\n        searchname: \"Ankylosaurus\",\n        name: \"Ankylosaurus\",\n        level: 20,\n        tamingmethod: \"Standard\",\n        usertamingmultiplier: 1,\n        tamingmultiplier: 1,\n        foodratemultiplier: 1,\n        totalfood: 0,\n        suppliedaffinity: 0\n    };\n}\n\n//Narcotics related constants for this creature/level\n$scope.narcotics = {\n    buffertime: 0,\n    max: 0,\n    min: 0,\n    buffernarcotics: 0,\n    narcoticsbuffertime: 0,\n    narcoticsmethod: \"Narcotics\"\n};\n\n//Narcotics related variables depending on creature's actual state\n$scope.narcoticstiming = {\n    start: new Date(),\n    topupnarcotics: 0,\n    currenttorpor: 0,\n    time: false,\n    intervalid: null,\n    buffertime: 0,\n    alarm: false,\n    alarmthreshold: 10,\n    narcoticsbuffertime: 0,\n    narcoticstimes: {\n        \"Narcotics\": 0,\n        \"Narcoberries\": 0\n    }\n};\n\n//Starve Timing Variables\n$scope.starvetiming = {\n    start: new Date(),\n    maxfood: 0,\n    currentfood: 0,\n    time: false,\n    intervalid: null,\n    starvetime: 0,\n    alarm: false,\n    alarmthreshold: 10\n}\n\n//Knocking out related variables\n$scope.ko = $cookies.getObject(\"ko\");\nif ($scope.ko == undefined || $scope.ko.version != \"20160131\") {\n    $scope.ko = {\n        version: \"20160131\",\n        koweapondam: 100,\n        komeleedam: 100,\n        searchkomethod: \"Bow\",\n        komethod: \"Bow\",\n        koquantities: {},\n        kotimes: {},\n        kotorpor: {},\n        kodamage: {}\n    }\n}\n\n$scope.showhidetable = function (table) {\n    $scope.tablevisibility[table] = !$scope.tablevisibility[table];\n    var now = new Date();\n    $cookies.putObject('tablevisibility', $scope.tablevisibility, {\n        expires: new Date(now.getFullYear(), now.getMonth() + 6, now.getDate()),\n        path: '/taming'\n    });\n}\n\n$scope.showhideextratamedetails = function () {\n    var now = new Date();\n    $cookies.putObject('showextratamedetails', $scope.showextratamedetails, {\n        expires: new Date(now.getFullYear(), now.getMonth() + 6, now.getDate()),\n        path: '/taming'\n    });\n}\n\n$scope.showhideoldselects = function () {\n    var now = new Date();\n    $cookies.putObject('showoldselects', $scope.showoldselects, {\n        expires: new Date(now.getFullYear(), now.getMonth() + 6, now.getDate()),\n        path: '/taming'\n    });\n}\n\n$scope.showhideanimations = function () {\n    var now = new Date();\n    $animate.enabled($scope.showanimations);\n    $cookies.putObject('showanimations', $scope.showanimations, {\n        expires: new Date(now.getFullYear(), now.getMonth() + 6, now.getDate()),\n        path: '/taming'\n    });\n    if ($scope.showanimations == 0) {\n        alert(\"Refresh the page\");\n    }\n}\n\n$scope.filterFoods = function (item) {\n    return ($scope.foodamounts[item] > 0);\n}\n\n$scope.searchdino = function () {\n    //alert(\"searchdino\");\n    var creature = $scope.creature;\n    var creatures = $scope.creatures;\n\n    if (creature.searchname in creatures) {\n        creature.name = creature.searchname;\n        $scope.selectdino();\n    }\n}\n\n$scope.searchkomethod = function () {\n    var ko = $scope.ko;\n    var komethods = $scope.komethods;\n    if (ko.searchkomethod in komethods) {\n        ko.komethod = ko.searchkomethod;\n        $scope.knockoutcalc();\n    }\n}\n\n$scope.selectdino = function () {\n    creature = $scope.creature;\n    creaturedata = $scope.creatures[creature.name];\n\n    creature.searchname = creature.name; //Ensure the searchname is kept up to date\n\n    creature.suppliedaffinity = 0;\n    if (creaturedata.foods.indexOf(creature.fillfood) == -1) {\n        creature.fillfood = creaturedata.foods[0];\n    }\n    if (creaturedata.tamingmethods.indexOf(creature.tamingmethod) == -1) {\n        creature.tamingmethod = creaturedata.tamingmethods[0];\n    }\n\n    $scope.resetfoods();\n    $scope.narcoticstiming.time = false;\n    $scope.narcoticstimer();\n    $scope.selectlevel();\n}\n\n$scope.selectlevel = function () {\n    creature = $scope.creature;\n    $rootScope.pagetitle = creature.level + \" \" + creature.name + \" - Ark Taming Calculator\";\n    if (creature.level > 2000) {\n        creature.level = 2000;\n    }\n    if (isNaN(creature.level) || creature.level < 1) {\n        return;\n    }\n\n    creaturedata = $scope.creatures[creature.name];\n    creature.requiredaffinity = creaturedata.baseaffinity + creaturedata.affinityperlevel * creature.level;\n    creature.torpor = creaturedata.basetorpor + creaturedata.basetorpor * creaturedata.torporperlevel * (creature.level - 1);\n    creature.torporrate = creaturedata.basetorporrate + Math.pow(creature.level - 1, $scope.texponent) / ($scope.tcoefficient / creaturedata.basetorporrate);\n    var now = new Date();\n    $cookies.putObject('creature', $scope.creature, {\n        expires: new Date(now.getFullYear(), now.getMonth() + 6, now.getDate()),\n        path: '/taming'\n    });\n    $scope.maxfoodcalc();\n    $scope.alltimescalc();\n    $scope.foodcalc();\n    $scope.knockoutcalc();\n    $scope.starvetimingcalc();\n}\n\n$scope.settamingmethod = function () { //General purpose function-caller function for a few fields\n    if ($scope.creature.usertamingmultiplier > 0 && $scope.creature.foodratemultiplier > 0) { //Necessary to prevent endless loop\n\n        $scope.creature.tamingmultiplier = $scope.creature.usertamingmultiplier * $scope.basetamingmultiplier;\n\n        var now = new Date();\n        $cookies.putObject('creature', $scope.creature, {\n            expires: new Date(now.getFullYear(), now.getMonth() + 6, now.getDate()),\n            path: '/taming'\n        });\n\n        $scope.maxfoodcalc();\n        $scope.foodcalc();\n        $scope.alltimescalc();\n    }\n}\n\n$scope.setFillFood = function (food) {\n    $scope.foodamounts[$scope.creature.fillfood] = 0;\n    $scope.creature.fillfood = food;\n    $scope.foodcalc();\n}\n\n$scope.resetfoods = function () {\n    $scope.foodamounts = {};\n    for (var food in $scope.foods) {\n        $scope.foodamounts[food] = 0;\n    }\n}\n\n$scope.maxfoodcalc = function () {\n    $scope.maxfoodamounts = {};\n\n    if (creature.tamingmethod == \"Standard\") {\n\n        for (var food in $scope.foods) {\n            $scope.maxfoodamounts[food] = Math.ceil(creature.requiredaffinity / $scope.foods[food].affinity / creature.tamingmultiplier);\n        }\n\n    }\n\n    if (creature.tamingmethod == \"Non-Violent\") {\n\n        for (var food in $scope.foods) {\n            $scope.maxfoodamounts[food] = Math.ceil(creature.requiredaffinity / $scope.foods[food].affinity / creature.tamingmultiplier / creaturedata.nonviolentfoodaffinitymultiplier);\n        }\n\n    }\n}\n\n$scope.alltimescalc = function () {\n    $scope.times = {};\n\n    if ($scope.creature.tamingmethod == \"Standard\") {\n        $scope.creature.foodrate = $scope.creatures[$scope.creature.name].foodrate * $scope.creature.foodratemultiplier;\n    }\n    if (creature.tamingmethod == \"Non-Violent\") {\n        $scope.creature.foodrate = $scope.creatures[$scope.creature.name].foodrate * $scope.creature.foodratemultiplier * $scope.creatures[$scope.creature.name].nonviolentfoodratemultiplier;\n    }\n\n    for (var food in $scope.maxfoodamounts) {\n        $scope.times[food] = $scope.maxfoodamounts[food] * -$scope.foods[food].food / $scope.creature.foodrate;\n    }\n\n}\n\n$scope.foodcalc = function () {\n    creature = $scope.creature;\n    creaturedata = $scope.creatures[creature.name];\n    foods = $scope.foods;\n    foodamounts = $scope.foodamounts;\n    affinity = 0;\n    food = 0;\n    foodamounts[creature.fillfood] = 0;\n\n    if (creature.tamingmethod == \"Standard\") {\n\n        for (var i = 0; i < creaturedata.foods.length; i++) {\n\n            affinity += foods[creaturedata.foods[i]].affinity * creature.tamingmultiplier * foodamounts[creaturedata.foods[i]];\n            food -= foods[creaturedata.foods[i]].food * foodamounts[creaturedata.foods[i]];\n        }\n        foodamounts[creature.fillfood] = Math.max(Math.ceil((creature.requiredaffinity - affinity) / foods[creature.fillfood].affinity / creature.tamingmultiplier), 0);\n        affinity += foods[creature.fillfood].affinity * creature.tamingmultiplier * foodamounts[creature.fillfood];\n        food -= foods[creature.fillfood].food * foodamounts[creature.fillfood];\n        creature.totalfood = -food;\n        creature.suppliedaffinity = affinity;\n\n    }\n\n    if (creature.tamingmethod == \"Non-Violent\") {\n\n        for (var i = 0; i < creaturedata.foods.length; i++) {\n\n            affinity += foods[creaturedata.foods[i]].affinity * creature.tamingmultiplier * creaturedata.nonviolentfoodaffinitymultiplier * foodamounts[creaturedata.foods[i]];\n            food -= foods[creaturedata.foods[i]].food * foodamounts[creaturedata.foods[i]];\n        }\n        foodamounts[creature.fillfood] = Math.max(Math.ceil((creature.requiredaffinity - affinity) / foods[creature.fillfood].affinity / creature.tamingmultiplier / creaturedata.nonviolentfoodaffinitymultiplier), 0);\n        affinity += foods[creature.fillfood].affinity * creature.tamingmultiplier * creaturedata.nonviolentfoodaffinitymultiplier * foodamounts[creature.fillfood];\n        food -= foods[creature.fillfood].food * foodamounts[creature.fillfood];\n        creature.totalfood = -food;\n        creature.suppliedaffinity = affinity;\n\n    }\n\n    $scope.totaltimecalc();\n    $scope.effectivenesscalc();\n    $scope.starvetimingcalc();\n\n}\n\n$scope.totaltimecalc = function () {\n    creature = $scope.creature;\n    creaturedata = $scope.creatures[creature.name];\n    if (creature.tamingmethod == \"Standard\") {\n        $scope.totaltime = food / creaturedata.foodrate / creature.foodratemultiplier;\n        $scope.narcoticscalc();\n    }\n\n    if (creature.tamingmethod == \"Non-Violent\") {\n        $scope.totaltime = food / creaturedata.foodrate / creature.foodratemultiplier / creaturedata.nonviolentfoodratemultiplier;\n    }\n}\n\n$scope.narcoticscalc = function () {\n    var narcoticsmethod = $scope.narcoticsmethods[$scope.narcotics.narcoticsmethod];\n    $scope.narcotics.buffertime = $scope.creature.torpor / -$scope.creature.torporrate;\n    $scope.narcotics.max = Math.ceil($scope.totaltime * -$scope.creature.torporrate / (narcoticsmethod.torpor - $scope.creature.torporrate * narcoticsmethod.time));\n    $scope.narcotics.min = Math.max(Math.ceil(($scope.totaltime * -$scope.creature.torporrate - $scope.creature.torpor) / (narcoticsmethod.torpor - $scope.creature.torporrate * narcoticsmethod.time)), 0);\n    $scope.narcotics.buffernarcotics = Math.ceil($scope.creature.torpor / narcoticsmethod.torpor);\n    $scope.narcotics.narcoticsbuffertime = narcoticsmethod.time * $scope.narcotics.buffernarcotics;\n    if ($scope.narcoticstiming.time == false) {\n        $scope.narcoticstiming.currenttorpor = $scope.creature.torpor;\n    }\n    $scope.narcoticstimingcalc();\n}\n\n$scope.narcoticstimingcalc = function () {\n    var narcoticsmethod = $scope.narcoticsmethods[$scope.narcotics.narcoticsmethod];\n    var narcoticstimes = $scope.narcoticstiming.narcoticstimes;\n    $scope.narcoticstiming.currenttorpor = Math.min($scope.narcoticstiming.currenttorpor, $scope.creature.torpor);\n    var suppliedtime = 0;\n    var suppliedtorpor = 0;\n    for (method in narcoticstimes) {\n        if (!narcoticstimes.hasOwnProperty(method)) {\n            continue;\n        }\n        if ($scope.narcoticstiming.currenttorpor + suppliedtorpor + (narcoticstimes[method] * narcoticsmethod.rate) > $scope.creature.torpor) {\n            //Here we check if the current method brings us over the max possible torpor, and cut off the time if it does\n            suppliedtime += ($scope.creature.torpor - $scope.narcoticstiming.currenttorpor + suppliedtorpor) / narcoticsmethod.rate;\n            suppliedtorpor = $scope.creature.torpor - $scope.narcoticstiming.currenttorpor;\n            break;\n        } else {\n            suppliedtime += narcoticstimes[method];\n            suppliedtorpor += narcoticstimes[method] * narcoticsmethod.rate;\n        }\n    }\n    $scope.narcoticstiming.topupnarcotics = Math.ceil(($scope.creature.torpor - $scope.narcoticstiming.currenttorpor - suppliedtorpor) / narcoticsmethod.torpor);\n    $scope.narcoticstiming.buffertime = ($scope.narcoticstiming.currenttorpor + suppliedtorpor) / -$scope.creature.torporrate;\n    $scope.narcoticstiming.narcoticsbuffertime = suppliedtime;\n}\n\n$scope.supplynarcotic = function () {\n    var narcoticsmethod = $scope.narcoticsmethods[$scope.narcotics.narcoticsmethod];\n    var narcoticstimes = $scope.narcoticstiming.narcoticstimes;\n    narcoticstimes[$scope.narcotics.narcoticsmethod] += $scope.narcoticstiming.supplynarcoticamount * narcoticsmethod.time;\n}\n\n$scope.narcoticstimer = function () {\n    var narcoticstimes = $scope.narcoticstiming.narcoticstimes;\n    if ($scope.narcoticstiming.time == true) {\n        $scope.narcoticstiming.intervalid = $interval(function () {\n            var narcoticsapplied = false;\n            for (method in narcoticstimes) {\n                if (!narcoticstimes.hasOwnProperty(method)) {\n                    continue;\n                }\n                if (narcoticstimes[method] > 0) {\n                    narcoticstimes[method] = Math.max(0, narcoticstimes[method] - 1);\n                    $scope.narcoticstiming.currenttorpor += $scope.narcoticsmethods[method].rate;\n                    if ($scope.narcoticstiming.currenttorpor > $scope.creature.torpor) {\n                        $scope.narcoticstiming.currenttorpor = $scope.creature.torpor;\n                        for (method in narcoticstimes) {\n                            narcoticstimes[method] = 0;\n                        }\n                    }\n                    narcoticsapplied = true;\n                    break;\n                }\n            }\n            if (!narcoticsapplied) {\n                $scope.narcoticstiming.currenttorpor += $scope.creature.torporrate;\n            }\n            $scope.narcoticstimingcalc();\n            if ($scope.narcoticstiming.currenttorpor <= 0) {\n                $scope.narcoticstiming.currenttorpor = 0;\n                $scope.narcoticstimingcalc();\n                $scope.narcoticstiming.time = false;\n                $scope.narcoticstimer();\n            }\n            if ($scope.narcoticstiming.alarm == 1 && $scope.narcoticstiming.buffertime / 60 < $scope.narcoticstiming.alarmthreshold) {\n                $scope.narcoticstiming.alarm = 0;\n                var audio = new Audio('alarm.mp3');\n                audio.volume = 0.3;\n                audio.play();\n            }\n        }, 1000);\n    } else {\n        $interval.cancel($scope.narcoticstiming.intervalid);\n        $scope.narcoticstiming.intervalid = null;\n    }\n}\n\n$scope.starvetimingcalc = function () {\n    var timedfoodamount = Math.min($scope.creature.totalfood, $scope.starvetiming.maxfood); //We time either the total food required for tame or the max food the dino has, whichever is lower\n    if ($scope.starvetiming.currentfood > $scope.starvetiming.maxfood) {\n        scope.starvetiming.currentfood = $scope.starvetiming.maxfood;\n    }\n    $scope.starvetiming.starvetime = (timedfoodamount - ($scope.starvetiming.maxfood - $scope.starvetiming.currentfood)) / -$scope.creatures[$scope.creature.name].foodrate / $scope.creature.foodratemultiplier;\n    $scope.starvetiming.starvetime = Math.max($scope.starvetiming.starvetime, 0); //We get a negative time if the target food has already been passed, replace with 0 instead\n    $scope.starvetiming.tametime = ($scope.creature.totalfood - ($scope.starvetiming.maxfood - $scope.starvetiming.currentfood)) / -$scope.creatures[$scope.creature.name].foodrate / $scope.creature.foodratemultiplier;\n    $scope.starvetiming.tametime = Math.max($scope.starvetiming.tametime, 0); //We get a negative time if the target food has already been passed, replace with 0 instead\n}\n\n$scope.starvetimer = function () {\n    if ($scope.starvetiming.time == true) {\n        $scope.starvetiming.intervalid = $interval(function () {\n            $scope.starvetiming.currentfood += $scope.creatures[$scope.creature.name].foodrate * $scope.creature.foodratemultiplier;\n            $scope.starvetimingcalc();\n            /*if ($scope.starvetiming.currentfood<=0) {\n                    $scope.starvetiming.currentfood=0;\n                    $scope.starvetimingcalc();\n                    $scope.starvetiming.time=false;\n                    $scope.starvetimer();\n                }*/\n            if ($scope.starvetiming.alarm == 1 && $scope.starvetiming.starvetime / 60 < $scope.starvetiming.alarmthreshold) {\n                $scope.starvetiming.alarm = 0;\n                var audio = new Audio('alarm.mp3');\n                audio.volume = 0.3;\n                audio.play();\n            }\n        }, 1000);\n    } else {\n        $interval.cancel($scope.starvetiming.intervalid);\n        $scope.starvetiming.intervalid = null;\n    }\n}\n\n$scope.effectivenesscalc = function () {\n    var foods = $scope.foods;\n    var foodamounts = $scope.foodamounts;\n    var creature = $scope.creature;\n    var creaturedata = $scope.creatures[creature.name];\n    var effectiveness = 100;\n    var fedfood = {};\n    for (var food in $scope.foods) {\n        fedfood[food] = 0;\n    }\n\n    if (creature.tamingmethod == \"Standard\") {\n\n        for (var i = 0; i < creaturedata.foods.length; i++) {\n            var food = creaturedata.foods[i];\n            while (fedfood[food] < foodamounts[food]) {\n                fedfood[food]++;\n                effectiveness -= Math.pow(effectiveness, 2) * creaturedata.ineffectbyaff / foods[food].affinity / creature.tamingmultiplier / 100;\n            }\n        }\n\n    }\n\n    if (creature.tamingmethod == \"Non-Violent\") {\n\n        for (var i = 0; i < creaturedata.foods.length; i++) {\n            var food = creaturedata.foods[i];\n            while (fedfood[food] < foodamounts[food]) {\n                fedfood[food]++;\n                effectiveness -= Math.pow(effectiveness, 2) * creaturedata.ineffectbyaff / foods[food].affinity / creature.tamingmultiplier / creaturedata.nonviolentfoodaffinitymultiplier / 100;\n            }\n        }\n\n    }\n    creature.effectiveness = effectiveness;\n    creature.extralevels = Math.floor(creature.level * 0.5 * creature.effectiveness / 100);\n}\n\n$scope.knockoutcalc = function () {\n    var komethod = $scope.komethods[$scope.ko.komethod];\n    $scope.ko.koquantities = {};\n\n    $scope.ko.searchkomethod = $scope.ko.komethod; //Ensure the searchname is kept up to date\n\n    for (hitbox in $scope.creatures[$scope.creature.name].hitboxes) {\n        var torpor = komethod.torpor * $scope.creatures[$scope.creature.name].hitboxes[hitbox];\n        var damage = komethod.damage * $scope.creatures[$scope.creature.name].hitboxes[hitbox];\n        if (komethod.usesmeleedam) {\n            torpor *= $scope.ko.komeleedam / 100;\n            damage *= $scope.ko.komeleedam / 100;\n        }\n        if (komethod.usesweapondam) {\n            torpor *= $scope.ko.koweapondam / 100;\n            damage *= $scope.ko.koweapondam / 100;\n        }\n        for (i = 0; i < komethod.damagetypes.length; i++) {\n            if (komethod.damagetypes[i] in $scope.creatures[$scope.creature.name].damagemultipliers) {\n                torpor *= $scope.creatures[$scope.creature.name].damagemultipliers[komethod.damagetypes[i]];\n                damage *= $scope.creatures[$scope.creature.name].damagemultipliers[komethod.damagetypes[i]];\n            }\n        }\n        $scope.ko.kotorpor[hitbox] = torpor;\n        $scope.ko.kodamage[hitbox] = damage;\n        $scope.ko.koquantities[hitbox] = Math.ceil($scope.creature.torpor / torpor);\n        $scope.ko.kotimes[hitbox] = $scope.ko.koquantities[hitbox] * komethod.time;\n    }\n\n    var now = new Date();\n    $cookies.putObject('ko', $scope.ko, {\n        expires: new Date(now.getFullYear(), now.getMonth() + 6, now.getDate()),\n        path: '/taming'\n    });\n\n    /*for (hitbox in $scope.creatures[$scope.creature.name].hitboxes) {\n            $scope.ko.koquantities[hitbox]=Math.ceil($scope.creature.torpor/$scope.komethodtorpor[$scope.ko.komethod]/$scope.creatures[$scope.creature.name].projectiledamage/$scope.ko.kodamagemultiplier/$scope.creatures[$scope.creature.name].hitboxes[hitbox]);\n            $scope.ko.kotimes[hitbox]=$scope.ko.koquantities[hitbox]*5;\n        }*/\n    /*if ($scope.creatures[$scope.creature.name].projectiledamage>1 && \"Head\" in $scope.creatures[$scope.creature.name].hitboxes) {\n            var headshots=$scope.ko.koquantities[\"Head\"]-1;\n            var bodyshots=$scope.ko.koquantities[\"Body\"]-(headshots*$scope.creatures[$scope.creature.name].hitboxes[\"Head\"]);\n            $scope.ko.koquantities[\"Head+Body\"]=headshots+\"+\"+bodyshots;\n            $scope.ko.kotimes[\"Head+Body\"]=(headshots+bodyshots)*5;\n        }*/\n}\n\nexport default  $scope\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('Ark')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"main\"}},[_vm._m(0),_c('div',[_vm._m(1),_c('div',{staticClass:\"list\"},[_c('div',{staticClass:\"row\"},[_c('label',[_vm._v(\"倍率：\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.creature.usertamingmultiplier),expression:\"creature.usertamingmultiplier\"}],on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.creature, \"usertamingmultiplier\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])},_vm.onChangeUserTamingMul]}},[_c('option',{attrs:{\"value\":\"3\"}},[_vm._v(\"官服毁灭服(3倍)\")]),_c('option',{attrs:{\"value\":\"1\"}},[_vm._v(\"官服(1倍)\")])])]),_c('div',{staticClass:\"row\",staticStyle:{\"position\":\"relative\"}},[_c('label',[_vm._v(\"生物：\")]),_c('div',{staticClass:\"input autosuggest-container\"},[_c('vue-autosuggest',{attrs:{\"suggestions\":_vm.filteredOptions,\"input-props\":{id:'autosuggest__input', placeholder:'恐龙'},\"get-suggestion-value\":_vm.getSuggestionValue},on:{\"focus\":_vm.focusMe,\"click\":_vm.clickHandler,\"input\":_vm.onInputChange,\"selected\":_vm.onSelected},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar suggestion = ref.suggestion;\nreturn [_c('span',{staticClass:\"my-suggestion-item\"},[_vm._v(_vm._s(suggestion.item.name_chi)+\"(\"+_vm._s(suggestion.item.name)+\")\")])]}}]),model:{value:(_vm.creatureName),callback:function ($$v) {_vm.creatureName=$$v},expression:\"creatureName\"}})],1),(_vm.creature.name)?_c('span',{staticStyle:{\"font-size\":\"10px\",\"position\":\"absolute\",\"right\":\"80px\",\"top\":\"6px\"}},[_c('a',{attrs:{\"href\":_vm.dododexUrl,\"target\":\"_blank\",\"id\":\"dododexUrl\"}},[_vm._v(\"dododex\")])]):_vm._e()]),_c('div',{staticClass:\"row\"},[_c('label',[_vm._v(\"等级：\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.creature.level),expression:\"creature.level\"}],domProps:{\"value\":(_vm.creature.level)},on:{\"change\":_vm.onChangeLevel,\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.creature, \"level\", $event.target.value)}}})])])]),(_vm.creature.tamingmethod == 'Standard')?_c('div',[_vm._m(2),_c('div',{staticClass:\"list-table\"},_vm._l((_vm.creature.kos),function(ko){return _c('div',{key:ko.komethod,staticClass:\"row\"},[_c('label',[_vm._v(_vm._s(ko.komethod_chi))]),(ko.koquantities.Head)?_c('span',[_vm._v(\"\\n                    头 : \"+_vm._s(ko.koquantities.Head)+\"\\n                \")]):_vm._e(),(ko.koquantities.Body)?_c('span',[_vm._v(\"\\n                    身体 : \"+_vm._s(ko.koquantities.Body)+\"\\n                \")]):_vm._e()])}),0)]):_vm._e(),(_vm.creature && _vm.creature.foods && _vm.creature.foods.length > 0)?_c('div',[_c('div',{staticClass:\"title\"},[_c('h3',[_vm._v(\"\\n                食物详情\\n                \"),(this.creature.tamingmethod == 'Non-Violent')?_c('span',[_vm._v(\"\\n                    (非暴力驯服)\\n                \")]):_vm._e()])]),_c('div',{staticClass:\"list-table\"},_vm._l((_vm.creature.foods2),function(food){return _c('div',{key:food.name,staticClass:\"row\"},[_c('label',[_c('a',{attrs:{\"href\":\"javascript:void(0)\"},on:{\"click\":function($event){return _vm.onClickFood(food)}}},[_vm._v(_vm._s(food.name_chi))])]),_c('span',[_vm._v(\"\\n                    \"+_vm._s(food.maxfoodamount)+\"\\n                \")]),_c('span',[_vm._v(\"\\n                    \"+_vm._s(food.timeStr)+\"\\n                \")])])}),0)]):_vm._e(),(_vm.creature.tamingmethod == 'Standard')?_c('div',[_vm._m(3),_c('div',{staticClass:\"list-table\"},[_c('div',{staticClass:\"row\"},[_c('label',[_vm._v(\"选择的食物：\")]),_vm._v(_vm._s(_vm.creature.food)+\"\\n            \")]),_c('div',{staticClass:\"row\"},[_c('label',[_vm._v(\"总时间：\")]),_vm._v(\" \"+_vm._s(_vm.creature.totaltimeStr)+\"\\n            \")]),_c('div',{staticClass:\"row\"},[_c('label',[_vm._v(\"苏醒时间：\")]),_vm._v(_vm._s(_vm.creature.narcoticss && _vm.creature.narcoticss[0].buffertimeStr)+\"\\n            \")])])]):_vm._e(),(_vm.creature.tamingmethod == 'Standard')?_c('div',[_vm._m(4),_c('div',{staticClass:\"list-table\"},[_c('div',{staticClass:\"row\"},[_c('span',[_vm._v(\"清醒与麻醉时间差：\")]),_c('span',[_vm._v(\"\\n                    \"+_vm._s(_vm.creature.differenceStr)+\"\\n                \")])]),_vm._l((_vm.creature.refillTimes),function(refillTime){return _c('div',{staticClass:\"row primary\",staticStyle:{\"font-size\":\"14px\"}},[_c('span',[_vm._v(\"喂麻药时间:\"+_vm._s(refillTime.refillTimeStr))]),(refillTime.dateStr)?_c('span',[_c('span',{staticStyle:{\"color\":\"#ff0064\"}},[_vm._v(_vm._s(refillTime.dateStr))])]):_vm._e(),_vm._l((refillTime.narcotics),function(narcotics){return _c('span',{staticStyle:{\"margin-left\":\"2px\"}},[_c('span',[_vm._v(\"(\"+_vm._s(narcotics.name_chi)),_c('span',{staticStyle:{\"color\":\"darkred\"}},[_vm._v(\" \"+_vm._s(narcotics.amount)+\" \")]),_vm._v(\"个)\")])])})],2)})],2)]):_vm._e(),(_vm.creature.tamingmethod == 'Standard')?_c('div',{staticClass:\"start\"},[_c('button',{on:{\"click\":_vm.startTame}},[_vm._v(\"开始驯服\")])]):_vm._e()])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('h4',[_vm._v(\"yilnz's 方舟驯服计算器\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"title\"},[_c('h3',[_vm._v(\"\\n                生物详情\\n            \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"title\"},[_c('h3',[_vm._v(\"\\n                击晕\\n            \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"title\"},[_c('h3',[_vm._v(\"\\n                驯服详情\\n            \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"title\"},[_c('h3',[_vm._v(\"\\n                总结\\n            \")])])}]\n\nexport { render, staticRenderFns }"," export default {\"Achatina\":\"M- 玛瑙螺\",\"Allosaurus\":\"Y- 异特龙\",\"Ammonite\":\"J- 菊石\",\"Anglerfish\":\"A- 安康鱼\",\"Ankylosaurus\":\"J- 甲龙\",\"Araneo\":\"Z- 蜘蛛\",\"Archaeopteryx\":\"S- 始祖鸟\",\"Argentavis\":\"A- 阿根廷巨鹰\",\"Arthropluera\":\"G- 古马陆\",\"Attack Drone\":\"W- 无人机\",\"Baryonyx\":\"Z- 重爪龙\",\"Basilisk\":\"D- 毒蜥\",\"Basilosaurus\":\"L- 龙王鲸\",\"Beelzebufo\":\"M- 魔鬼蛙\",\"Brontosaurus\":\"L- 雷龙\",\"Broodmother Lysrix\":\"Y- 育母蜘蛛\",\"Bulbdog\":\"D- 灯泡犬\",\"Carbonemys\":\"D- 淡水碳龟\",\"Carnotaurus\":\"N- 牛龙\",\"Castoroides\":\"J- 巨河狸\",\"Chalicotherium\":\"S- 砂犷[guǎng]兽\",\"Cnidaria\":\"S- 水母\",\"Coelacanth\":\"Q- 腔棘鱼\",\"Compsognathus\":\"M- 美颌龙\",\"Daeodon\":\"X- 凶齿豨[xī]\",\"Deathworm\":\"S- 死亡蠕虫\",\"Defense Unit\":\"J- 机器人\",\"Desert Titan\":\"S- 沙漠泰坦\",\"Dilophosaurus\":\"S- 双脊龙\",\"Dimetrodon\":\"Y- 异齿龙\",\"Dimorphodon\":\"S- 双型齿翼龙\",\"Diplocaulus\":\"D- 盗首螈\",\"Diplodocus\":\"L- 梁龙\",\"Direbear\":\"K- 恐熊\",\"Direwolf\":\"K- 恐狼\",\"Dodo\":\"D- 渡渡鸟\",\"Doedicurus\":\"X- 星尾兽\",\"Dragon\":\"P- 喷火龙\",\"Dragonfly\":\"J- 巨脉蜻蜓\",\"Dung Beetle\":\"Q- 蜣螂\",\"Dunkleosteus\":\"D- 邓氏鱼\",\"Electrophorus\":\"D- 电鳗\",\"Enforcer\":\"Z- 执行者\",\"Equus\":\"P- 庞马\",\"Eurypterid\":\"G- 广翅鲎[hòu]\",\"Featherlight\":\"Q- 轻羽鸟\",\"Forest Titan\":\"S- 森林泰坦\",\"Gacha\":\"G- 嘎查\",\"Gallimimus\":\"S- 似鸡龙\",\"Gasbags\":\"Q- 气囊虫\",\"Giant Bee\":\"J- 巨型蜜蜂\",\"Giganotosaurus\":\"N- 南方巨兽龙\",\"Gigantopithecus\":\"J- 巨猿\",\"Glowbug\":\"F- 发光虫\",\"Glowtail\":\"Y- 耀尾兽\",\"Griffin\":\"S- 狮鹫\",\"Hesperornis\":\"H- 黄昏鸟\",\"Hyaenodon\":\"L- 鬣[liè]齿兽\",\"Ice Titan\":\"B- 冰霜泰坦\",\"Ichthyornis\":\"Y- 鱼鸟\",\"Ichthyosaurus\":\"Y- 鱼龙\",\"Iguanodon\":\"Q- 禽龙\",\"Jerboa\":\"T- 跳鼠\",\"Jugbug\":\"H- 壶虫\",\"Kairuku\":\"Y- 远古企鹅\",\"Kaprosuchus\":\"Z- 猪鳄\",\"Karkinos\":\"J- 巨蟹怪\",\"Kentrosaurus\":\"K- 肯氏龙\",\"Lamprey\":\"Q- 七鳃鳗\",\"Leech\":\"S- 水蛭\",\"Leedsichthys\":\"L- 利兹鱼\",\"Liopleurodon\":\"H- 滑齿龙\",\"Lymantria\":\"S- 沙蛾\",\"Lystrosaurus\":\"S- 水龙兽\",\"Mammoth\":\"M- 猛犸象\",\"Managarmr\":\"M- 玛纳加尔姆\",\"Manta\":\"F- 蝠鲼[fú fèn]\",\"Manticore\":\"S- 狮身蝎尾兽\",\"Mantis\":\"T- 螳螂\",\"Mega Mek\":\"J- 机甲\",\"Megalania\":\"G- 古巨蜥\",\"Megaloceros\":\"D- 大角鹿\",\"Megalodon\":\"J- 巨齿鲨\",\"Megalosaurus\":\"B- 斑龙\",\"Meganeura\":\"J- 巨脉蜻蜓\",\"Megapithecus\":\"D- 大金刚\",\"Megatherium\":\"D- 大地懒\",\"Mek\":\"J- 机甲\",\"Mesopithicus\":\"Z- 中猴\",\"Microraptor\":\"X- 小盗龙\",\"Morellatops\":\"T- 驼峰兽\",\"Mosasaurus\":\"C- 苍龙\",\"Moschops\":\"S- 麝[shè]足兽\",\"Nameless\":\"W- 无名怪\",\"Onyc\":\"Z- 爪蝠\",\"Otter\":\"S- 水獭[tǎ]\",\"Overseer\":\"J- 监察者\",\"Oviraptor\":\"Q- 窃蛋龙\",\"Ovis\":\"M- 绵羊\",\"Pachycephalosaurus\":\"Z- 肿头龙\",\"Pachyrhinosaurus\":\"H- 厚鼻龙\",\"Paraceratherium\":\"J- 巨犀\",\"Parasaurolophus\":\"F- 副栉[zhì]龙\",\"Pegomastax\":\"S- 双坚颌龙\",\"Pelagornis\":\"W- 伪齿鸟\",\"Phiomia\":\"J- 渐新象\",\"Phoenix\":\"F- 凤凰\",\"Piranha\":\"S- 食人鱼\",\"Plesiosaurus\":\"S- 蛇颈龙\",\"Procoptodon\":\"J- 巨型袋鼠\",\"Pteranodon\":\"W- 无齿翼龙\",\"Pulmonoscorpius\":\"J- 巨蝎\",\"Purlovia\":\"S- 兽头兽\",\"Quetzalcoatlus\":\"F- 风神翼龙\",\"Raptor\":\"X- 迅猛龙\",\"Ravager\":\"J- 劫掠者\",\"Reaper\":\"S- 死神\",\"Rex\":\"B- 霸王龙\",\"Rock Drake\":\"Y- 岩龙\",\"Rock Elemental\":\"Y- 岩石巨人\",\"Roll Rat\":\"F- 翻滚鼠\",\"Sabertooth\":\"S- 剑齿虎\",\"Sabertooth Salmon\":\"J- 剑齿鲑鱼\",\"Sarcosuchus\":\"D- 帝鳄\",\"Scout\":\"Z- 侦察机\",\"Seeker\":\"Z- 追寻者\",\"shinehorn\":\"S- 闪角兽\",\"snow Owl\":\"X- 雪鸮\",\"Spinosaurus\":\"J- 棘背龙\",\"Stegosaurus\":\"J- 剑龙\",\"Tapejara\":\"G- 古神翼龙\",\"Terror Bird\":\"H- 骇鸟\",\"Therizinosaurus\":\"L- 镰刀龙\",\"Thorny Dragon\":\"J- 棘蜥\",\"Thylacoleo\":\"D- 袋狮\",\"Titanoboa\":\"T- 泰坦巨蟒\",\"Titanomyrma\":\"J- 巨型兵蚁\",\"Titanosaur\":\"T- 泰坦龙\",\"Triceratops\":\"S- 三角龙\",\"Trilobite\":\"S- 三叶虫\",\"Troodon\":\"S- 伤齿龙\",\"Tusoteuthis\":\"T- 托斯特巨鱿\",\"Velonasaur\":\"C- 刺面龙\",\"Vulture\":\"T- 秃鹫\",\"Woolly Rhino\":\"P- 披毛犀\",\"Wyvern\":\"F- 飞龙\",\"Yeti\":\"X- 雪人\",\"Yutyrannus\":\"Y- 羽暴龙\"}","Date.prototype.Format = function (fmt) {\n    var o = {\n        \"M+\": this.getMonth() + 1,                 //月份\n        \"d+\": this.getDate(),                    //日\n        \"h+\": this.getHours(),                   //小时\n        \"m+\": this.getMinutes(),                 //分\n        \"s+\": this.getSeconds(),                 //秒\n        \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\n        \"S\": this.getMilliseconds()             //毫秒\n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n    for (var k in o)\n        if (new RegExp(\"(\" + k + \")\").test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n    return fmt;\n}\n\nexport function formatTimeToStr(times, pattern) {\n    var d = new Date(times).Format(\"yyyy-MM-dd hh:mm:ss\");\n    if (pattern) {\n        d = new Date(times).Format(pattern);\n    }\n    return d.toLocaleString();\n}\n\nexport function toHHMMSS(sec_num) {\n    //var sec_num = parseInt(this, 10); // don't forget the second param\n    var hours   = Math.floor(sec_num / 3600);\n    var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n    var seconds = Math.ceil(sec_num - (hours * 3600) - (minutes * 60));\n\n    if (hours   < 10) {hours   = \"0\"+hours;}\n    if (minutes < 10) {minutes = \"0\"+minutes;}\n    if (seconds < 10) {seconds = \"0\"+seconds;}\n    return hours+':'+minutes+':'+seconds;\n}","export default {\n    'Anglerfish' : {\n        dododexName: 'angler'\n    }\n}","<template>\n    <div id=\"main\">\n        <div style=\"text-align: center\">\n            <h4>yilnz's 方舟驯服计算器</h4>\n        </div>\n        <div>\n            <div class=\"title\">\n                <h3>\n                    生物详情\n                </h3>\n            </div>\n            <div class=\"list\">\n                <div class=\"row\">\n                    <label>倍率：</label>\n                    <select v-model=\"creature.usertamingmultiplier\" @change=\"onChangeUserTamingMul\">\n                        <option value=\"3\">官服毁灭服(3倍)</option>\n                        <option value=\"1\">官服(1倍)</option>\n                    </select>\n                </div>\n                <div class=\"row\" style=\"position: relative\">\n                    <label>生物：</label>\n                    <div class=\"input autosuggest-container\">\n                        <vue-autosuggest\n                                v-model=\"creatureName\"\n                                :suggestions=\"filteredOptions\"\n                                :input-props=\"{id:'autosuggest__input', placeholder:'恐龙'}\"\n                                @focus=\"focusMe\"\n                                @click=\"clickHandler\"\n                                @input=\"onInputChange\"\n                                @selected=\"onSelected\"\n                                :get-suggestion-value=\"getSuggestionValue\"\n                        >\n                            <template slot-scope=\"{suggestion}\">\n                                <span class=\"my-suggestion-item\">{{suggestion.item.name_chi}}({{suggestion.item.name}})</span>\n                            </template>\n                        </vue-autosuggest>\n                    </div>\n                    <span style=\"font-size: 10px;position: absolute; right:80px;top:6px\" v-if=\"creature.name\">\n                        <a :href=\"dododexUrl\" target=\"_blank\" id=\"dododexUrl\">dododex</a>\n                    </span>\n                </div>\n                <div class=\"row\">\n                    <label>等级：</label><input v-model=\"creature.level\" @change=\"onChangeLevel\"/>\n                </div>\n            </div>\n        </div>\n        <div v-if=\"creature.tamingmethod == 'Standard'\">\n            <div class=\"title\">\n                <h3>\n                    击晕\n                </h3>\n            </div>\n            <div class=\"list-table\">\n                <div class=\"row\" v-for=\"ko in creature.kos\" v-bind:key=\"ko.komethod\">\n                    <label>{{ko.komethod_chi}}</label>\n                    <span v-if=\"ko.koquantities.Head\">\n                        头 : {{ko.koquantities.Head}}\n                    </span>\n                    <span v-if=\"ko.koquantities.Body\">\n                        身体 : {{ko.koquantities.Body}}\n                    </span>\n                </div>\n            </div>\n        </div>\n        <div v-if=\"creature && creature.foods && creature.foods.length > 0\">\n            <div class=\"title\">\n                <h3>\n                    食物详情\n                    <span v-if=\"this.creature.tamingmethod == 'Non-Violent'\">\n                        (非暴力驯服)\n                    </span>\n                </h3>\n            </div>\n            <div class=\"list-table\">\n                <div class=\"row\" v-for=\"food in creature.foods2\" v-bind:key=\"food.name\">\n                    <label><a href=\"javascript:void(0)\" @click=\"onClickFood(food)\">{{food.name_chi}}</a></label>\n                    <span>\n                        {{food.maxfoodamount}}\n                    </span>\n                    <span>\n                        {{food.timeStr}}\n                    </span>\n                </div>\n            </div>\n        </div>\n        <div v-if=\"creature.tamingmethod == 'Standard'\">\n            <div class=\"title\">\n                <h3>\n                    驯服详情\n                </h3>\n            </div>\n            <div class=\"list-table\">\n                <div class=\"row\">\n                    <label>选择的食物：</label>{{creature.food}}\n                </div>\n                <div class=\"row\">\n                    <label>总时间：</label> {{creature.totaltimeStr}}\n                </div>\n                <div class=\"row\">\n                    <label>苏醒时间：</label>{{creature.narcoticss && creature.narcoticss[0].buffertimeStr}}\n                </div>\n            </div>\n        </div>\n        <div v-if=\"creature.tamingmethod == 'Standard'\">\n            <div class=\"title\">\n                <h3>\n                    总结\n                </h3>\n            </div>\n            <div class=\"list-table\">\n                <div class=\"row\">\n                    <span>清醒与麻醉时间差：</span>\n                    <span>\n                        {{creature.differenceStr}}\n                    </span>\n                </div>\n                <div class=\"row primary\" style=\"font-size: 14px;\" v-for=\"refillTime in creature.refillTimes\">\n                    <span>喂麻药时间:{{refillTime.refillTimeStr}}</span>\n                    <span v-if=\"refillTime.dateStr\"><span style=\"color:#ff0064\">{{refillTime.dateStr}}</span></span>\n                    <span v-for=\"narcotics in refillTime.narcotics\" style=\"margin-left: 2px\">\n                            <span>({{narcotics.name_chi}}<span\n                                    style=\"color: darkred\"> {{narcotics.amount}} </span>个)</span>\n                              </span>\n                </div>\n            </div>\n        </div>\n        <div class=\"start\" v-if=\"creature.tamingmethod == 'Standard'\">\n            <button @click=\"startTame\">开始驯服</button>\n        </div>\n    </div>\n</template>\n\n<script>\n    import Vue from 'vue'\n    import $scope from '@/js/arkdata.js';\n    import '@/js/ark.js';\n    import dinos from '@/js/dinos.js'\n    import {formatTimeToStr, toHHMMSS} from '@/js/date.js';\n    import dododexNames from '@/js/dododexnames.js';\n\n    //import Autocomplete from 'vue2-autocomplete-js';\n    //require('vue2-autocomplete-js/dist/style/vue2-autocomplete.css')\n\n    export default {\n        name: \"ark\",\n        data() {\n            return {\n                creatureName: null,\n                creature: {\n                    name: null,\n                    level: 20,\n                    foods: [],\n                    knockout: null,\n                    name_chi: null,\n                    food: 'Raw Meat',\n                    usertamingmultiplier: 3\n\n                },\n                creatures: []\n            }\n        },\n        props: {},\n        created: function () {\n            window._self = this;\n            for (let c in $scope.creatures) {\n                $scope.creatures[c].name = c;\n                $scope.creatures[c].name_chi = dinos[c];\n                this.creatures.push($scope.creatures[c])\n            }\n            window.$scope = $scope\n            /*$scope.resetfoods();\n            $scope.selectdino();\n            $scope.maxfoodcalc();\n            $scope.alltimescalc();\n            $scope.foodcalc();\n            $rootScope.pagetitle = \"ARK Taming Calculator\";*/\n        },\n        computed: {\n            dododexUrl() {\n                return 'https://www.dododex.com/taming/' + this.creature.dododexName + '/' + this.creature.level;\n            },\n            filteredOptions() {\n                return [\n                    {\n                        data: this.creatures.filter(option => {\n                            if (!option.name_chi || !this.creatureName) {\n                                return false;\n                            }\n                            if (this.creature != null)\n                                return option.name_chi.toLowerCase().indexOf(this.creatureName.toLowerCase()) > -1;\n                        })\n                    }\n                ];\n            }\n        },\n        methods: {\n            clickHandler(item) {\n                // event fired when clicking on the input\n            },\n            onSelected(item) {\n                let oldLevel = this.creature.level;\n                let oldUserMul = this.creature.usertamingmultiplier\n                this.creature = item.item\n                this.creature.level = oldLevel;\n                this.creature.usertamingmultiplier = oldUserMul;\n                console.log($scope)\n                this.arkSelectLevel()\n                console.log(this.creature)\n            },\n            onInputChange(text) {\n                // event fired when the input changes\n                //console.log(text)\n            },\n            /**\n             * This is what the <input/> value is set to when you are selecting a suggestion.\n             */\n            getSuggestionValue(suggestion) {\n                return suggestion.item.name_chi;\n            },\n            focusMe(e) {\n                //console.log(e) // FocusEvent\n            },\n            onClickFood(food) {\n                this.creature.food = food.name;\n                this.arkFoodCalc();\n                this.arkNarcoticsCalc();\n                this.arkFinalCalc();\n            },\n            onChangeLevel(e) {\n                console.log(this.creature.level)\n                this.arkSelectLevel()\n                this.$set(this.creature, 'level', this.creature.level)\n                document.getElementById('dododexUrl').href = 'https://www.dododex.com/taming/' + this.creature.dododexName + '/' + this.creature.level;\n            },\n            onChangeUserTamingMul() {\n                this.arkSelectLevel()\n            },\n            startTame() {\n                /* this.creature = this.creature;\n                 this.creature.refillTimes = [];\n                 this.$set(this.creature, 'refillTimes', [{\n                     refillTime : 111,\n                     refillTimeStr : toHHMMSS(111),\n                     narcotics : null,\n                     date : new Date()\n                 }]);;*/\n                this.creature.startTameDate = new Date()\n                let self = this;\n                if (this.creature.refillTimes.length > 0) {\n                    let prev = this.creature.startTameDate;\n                    for (var i in  this.creature.refillTimes) {\n                        let t = this.creature.refillTimes[i];\n                        t.date = new Date(prev.getTime() + t.refillTime * 1000);\n                        t.dateStr = formatTimeToStr(t.date);\n                        Vue.set(this.creature.refillTimes, i, t);\n                        prev = t.date;\n                    }\n\n                    this.creature = Object.assign({}, this.creature);\n                    /*\n                                        this.$set(this.creature, 'refillTimes', [{\n                                            refillTime : 111,\n                                            refillTimeStr : toHHMMSS(111),\n                                            narcotics : null,\n                                            date : new Date()\n                                        }]);*/\n                    //let reserve = Object.assign([], this.creature.refillTimes);\n                    //this.creature.refillTimes.splice(0)\n                    //this.$set(this.creature, 'refillTimes', this.creature.refillTimes)\n                    /*reserve.forEach(e=>{\n                        this.creature.refillTimes.push(e);\n                    })*/\n\n                }\n                console.log(this.creature)\n            },\n            arkSelectLevel() {\n                console.log('select level')\n                let creature = this.creature;\n                document.getElementsByTagName('title')[0].textContent = creature.name_chi + \" \" + creature.level + ' - yilnz\\'s 方舟驯服计算器'\n                if (creature.name == null) {\n                    return null;\n                }\n                if (creature.level > 2000) {\n                    creature.level = 2000;\n                }\n                if (isNaN(creature.level) || creature.level < 1) {\n                    return;\n                }\n\n                let creaturedata = $scope.creatures[creature.name];\n                creature.requiredaffinity = creaturedata.baseaffinity + creaturedata.affinityperlevel * creature.level;\n                creature.torpor = creaturedata.basetorpor + creaturedata.basetorpor * creaturedata.torporperlevel * (creature.level - 1);\n                creature.torporrate = creaturedata.basetorporrate + Math.pow(creature.level - 1, $scope.texponent) / ($scope.tcoefficient / creaturedata.basetorporrate);\n\n                //creature.usertamingmultiplier = 1;\n                creature.tamingmultiplier = 1;\n                creature.foodratemultiplier = 1;\n\n                creature.tamingmultiplier = creature.usertamingmultiplier * $scope.basetamingmultiplier;\n\n                creature.tamingmethod = creature.tamingmethods[0];\n\n                creature.food = creature.basefood\n\n                let dododexName = dododexNames[creature.name];\n                if (dododexName) {\n                    creature.dododexName = dododexName.dododexName;\n                } else {\n                    creature.dododexName = creature.name.replace(' ', '').toLowerCase()\n                }\n                this.arkKoCalc();\n                this.arkMaxFoodCalc();\n                this.arkAllTimeCalc();\n                this.arkFoodCalc();\n                this.arkNarcoticsCalc();\n                this.arkFinalCalc();\n            },\n            arkKoCalc() {\n                let kos = [];\n                for (let method in $scope.komethods) {\n                    let komethod = $scope.komethods[method];\n                    let $ko = Object.assign({}, $scope.ko);\n                    $ko.komethod = method;\n                    $ko.komethod_chi = komethod.name_chi;\n                    //var komethod = $scope.komethods[$scope.ko.komethod];\n                    $ko.koquantities = {};\n\n                    $ko.searchkomethod = $ko.komethod; //Ensure the searchname is kept up to date\n\n                    for (let hitbox in $scope.creatures[this.creature.name].hitboxes) {\n                        var torpor = komethod.torpor * $scope.creatures[this.creature.name].hitboxes[hitbox];\n                        var damage = komethod.damage * $scope.creatures[this.creature.name].hitboxes[hitbox];\n                        if (komethod.usesmeleedam) {\n                            torpor *= $ko.komeleedam / 100;\n                            damage *= $ko.komeleedam / 100;\n                        }\n                        if (komethod.usesweapondam) {\n                            torpor *= $ko.koweapondam / 100;\n                            damage *= $ko.koweapondam / 100;\n                        }\n                        for (let i = 0; i < komethod.damagetypes.length; i++) {\n                            if (komethod.damagetypes[i] in $scope.creatures[this.creature.name].damagemultipliers) {\n                                torpor *= $scope.creatures[this.creature.name].damagemultipliers[komethod.damagetypes[i]];\n                                damage *= $scope.creatures[this.creature.name].damagemultipliers[komethod.damagetypes[i]];\n                            }\n                        }\n                        $ko.kotorpor[hitbox] = torpor;\n                        $ko.kodamage[hitbox] = damage;\n                        $ko.koquantities[hitbox] = Math.ceil(this.creature.torpor / torpor);\n                        $ko.kotimes[hitbox] = $ko.koquantities[hitbox] * komethod.time;\n                    }\n                    kos.push($ko);\n                }\n\n                this.creature.kos = kos;\n            },\n            arkMaxFoodCalc: function () {\n                let creature = this.creature;\n                this.creature.maxfoodamounts = {};\n                if (this.creature.tamingmethod == \"Standard\") {\n\n                    for (var food in $scope.foods) {\n                        this.creature.maxfoodamounts[food] = Math.ceil(creature.requiredaffinity / $scope.foods[food].affinity / creature.tamingmultiplier);\n                    }\n\n                }\n\n                if (this.creature.tamingmethod == \"Non-Violent\") {\n\n                    for (var food in $scope.foods) {\n                        this.creature.maxfoodamounts[food] = Math.ceil(creature.requiredaffinity / $scope.foods[food].affinity / creature.tamingmultiplier / creature.nonviolentfoodaffinitymultiplier);\n                    }\n\n                }\n\n                this.creature.foods2 = [];\n                this.creature.foods.forEach(f => {\n                    this.creature.foods2.push({\n                        name: f,\n                        maxfoodamount: this.creature.maxfoodamounts[f],\n                        name_chi: $scope.foods[f].name_chi ? $scope.foods[f].name_chi : f\n                    })\n                })\n            },\n            arkAllTimeCalc: function () {\n                let creature = this.creature;\n                creature.times = {};\n\n                if (creature.tamingmethod == \"Standard\") {\n                    creature.foodrate = $scope.creatures[creature.name].foodrate * creature.foodratemultiplier;\n                }\n                if (creature.tamingmethod == \"Non-Violent\") {\n                    creature.foodrate = $scope.creatures[creature.name].foodrate * creature.foodratemultiplier * $scope.creatures[creature.name].nonviolentfoodratemultiplier;\n                }\n\n                for (var food in creature.maxfoodamounts) {\n                    creature.times[food] = creature.maxfoodamounts[food] * -$scope.foods[food].food / creature.foodrate;\n                }\n\n                this.creature.foods.forEach((f, index) => {\n                    let foods2Element = this.creature.foods2[index];\n                    foods2Element.time = creature.times[f];\n                    foods2Element.timeStr = toHHMMSS(foods2Element.time);\n                })\n            },\n            arkFoodCalc: function () {\n                this.creature.totaltime = this.creature.times[this.creature.food]\n                this.$set(this.creature, 'totaltimeStr', toHHMMSS(this.creature.totaltime))\n                console.log(this.creature.totaltimeStr)\n            },\n            arkNarcoticsCalc: function () {\n                let narcoticss = [];\n                for (let narcoticsmethodname in $scope.narcoticsmethods) {\n                    let $narcotics = Object.assign({}, $scope.narcotics)\n                    var narcoticsmethod = $scope.narcoticsmethods[narcoticsmethodname];\n                    $narcotics.buffertime = this.creature.torpor / -this.creature.torporrate;\n                    $narcotics.max = Math.ceil($scope.totaltime * -this.creature.torporrate / (narcoticsmethod.torpor - this.creature.torporrate * narcoticsmethod.time));\n                    $narcotics.min = Math.max(Math.ceil(($scope.totaltime * -this.creature.torporrate - this.creature.torpor) / (narcoticsmethod.torpor - this.creature.torporrate * narcoticsmethod.time)), 0);\n                    $narcotics.buffernarcotics = Math.ceil(this.creature.torpor / narcoticsmethod.torpor);\n                    $narcotics.narcoticsbuffertime = narcoticsmethod.time * $narcotics.buffernarcotics;\n                    $narcotics.narcoticsmethod = narcoticsmethodname;\n                    $narcotics.buffertimeStr = toHHMMSS($narcotics.buffertime)\n                    //$scope.narcoticstimingcalc();\n                    narcoticss.push($narcotics)\n                }\n                //this.creature.narcoticss = narcoticss;\n                this.$set(this.creature, 'narcoticss', narcoticss)\n                this.creature.buffertime = narcoticss[0].buffertime;\n            },\n            arkCalcMazui: function (torpor) {\n                let mazui = []\n                for (let narcoticsmethodname in $scope.narcoticsmethods) {\n                    let narcoticsmethod = $scope.narcoticsmethods[narcoticsmethodname];\n                    mazui.push({\n                        amount: Math.ceil(torpor / narcoticsmethod.torpor),\n                        name: narcoticsmethodname,\n                        name_chi: $scope.narcoticsmethods[narcoticsmethodname].name_chi\n                    });\n                }\n                mazui = mazui.reverse();\n                return mazui;\n            },\n            arkFinalCalc: function () {\n                let creature = this.creature;\n                let difference = creature.totaltime - creature.buffertime;\n                creature.difference = difference;\n                if (isNaN(difference)) {\n                    return\n                }\n                if (creature.difference < 0) {\n                    creature.differenceStr = '无需喂麻药';\n                    creature.refillTimes = [];\n                    return;\n                }\n                creature.differenceStr = toHHMMSS(difference);\n\n                let requireTorpor = creature.difference * -creature.torporrate;\n                let refillTimes = [];\n                let mazui = this.arkCalcMazui(requireTorpor);\n                // if(creature.difference < creature.buffertime){\n                let refillTime = (creature.torpor - requireTorpor) / -creature.torporrate\n                if (creature.buffertime < creature.difference) {\n                    let leftTime = creature.difference;\n                    while (leftTime > 0) {\n                        let beforeLeftTime = leftTime;\n                        leftTime = leftTime - (creature.buffertime - 5 * 60)\n                        if (leftTime < 0) {\n                            refillTimes.push({\n                                refillTime: beforeLeftTime,\n                                refillTimeStr: toHHMMSS(beforeLeftTime),\n                                narcotics: this.arkCalcMazui(beforeLeftTime * -creature.torporrate)\n                            })\n                            break;\n                        }\n                        refillTimes.push({\n                            refillTime: (creature.buffertime - 5 * 60),\n                            refillTimeStr: toHHMMSS((creature.buffertime - 5 * 60)),\n                            narcotics: this.arkCalcMazui((creature.buffertime - 5 * 60) * -creature.torporrate)\n                        })\n                    }\n\n                } else {\n                    refillTimes.push({\n                        refillTime: refillTime,\n                        refillTimeStr: toHHMMSS(refillTime),\n                        narcotics: mazui\n                    })\n                }\n                // }else{\n                /*let leftTorpor = creature.torpor;\n                while(true){\n                        let calcTorpor = (leftTorpor - requireTorpor - -creature.torporrate * 5 * 60)\n                    if(calcTorpor <= 0){\n                        break;\n                    }\n                    let rfTime = calcTorpor / -creature.torporrate;\n                    refillTimes.push({\n                        refillTime : rfTime,\n                        refillTimeStr : toHHMMSS(rfTime),\n                        narcotics : this.arkCalcMazui(calcTorpor)\n                    })\n                    leftTorpor = requireTorpor - calcTorpor;\n                }\n                if(leftTorpor > 0){\n                    let refillTime = leftTorpor / -creature.torporrate;\n                    refillTimes.push({\n                        refillTime : refillTime,\n                        refillTimeStr : toHHMMSS(refillTime),\n                        narcotics : this.arkCalcMazui(leftTorpor)\n                    })\n                }*/\n                // }\n                creature.refillTimes = refillTimes;\n            }\n        }\n\n    }\n\n\n</script>\n\n<style scoped>\n    #main {\n        background: linear-gradient(rgba(40, 100, 100, 0.6), rgba(40, 100, 100, 0.3));\n        width: 650px;\n        /*display: table;*/\n        /*text-align: center;*/\n        /*border-width: 2px;\n        border-style: solid;*/\n        border-radius: 10px;\n        /*border-color:  rgba(50, 200, 200, 0.6);*/\n        /*background-color: rgba(40, 100, 100, 0.5);*/\n        background: linear-gradient(rgba(40, 100, 100, 0.6), rgba(40, 100, 100, 0.3));\n        padding: 10px;\n        margin: 0 auto;\n    }\n\n    .primary {\n        color: darkgreen;\n    }\n\n    .title {\n        text-align: center;\n    }\n\n    .list-table .row {\n        display: table-row;\n    }\n\n    .list .row {\n        padding: 0 20px;\n        width: 550px;\n        margin: 2px 0;\n        text-align: center;\n    }\n\n    .list-table .row > * {\n        display: table-cell;\n        padding: 5px;\n    }\n\n    .list-table {\n        display: table;\n        margin: 0 auto;\n    }\n\n\n    .list {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n\n    .lit .row label {\n        display: inline-block;\n        width: 100px;\n    }\n\n    ul {\n        padding: 0px;\n        margin: 0px;\n    }\n\n    li {\n        padding: 0px;\n        margin: 0px;\n    }\n\n    .start {\n        margin-top: 20px;\n        text-align: center;\n    }\n\n    .input {\n        display: inline-block;\n    }\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ark.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ark.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Ark.vue?vue&type=template&id=3cd50664&scoped=true&\"\nimport script from \"./Ark.vue?vue&type=script&lang=js&\"\nexport * from \"./Ark.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Ark.vue?vue&type=style&index=0&id=3cd50664&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3cd50664\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <!--<img alt=\"Vue logo\" src=\"./assets/logo.png\">-->\n    <!--<HelloWorld msg=\"Welcome to Your Vue.js App\"/>-->\n    <Ark />\n  </div>\n</template>\n\n<script>\nimport Ark from './components/Ark.vue'\n\nexport default {\n  name: 'app',\n  components: {\n      Ark\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  /*text-align: center;*/\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\ninput {\n  width: 260px;\n  padding: 0.2rem;\n  border-radius: 5px;\n  box-shadow: #999999 1px 1px 1px;\n}\n\nul {\n  width: 100%;\n  color: rgba(30, 39, 46,1.0);\n  list-style: none;\n  margin: 0;\n  padding: 0.5rem 0 .5rem 0;\n}\nli {\n  margin: 0 0 0 0;\n  border-radius: 5px;\n  padding: 0.75rem 0 0.75rem 0.75rem;\n  display: flex;\n  align-items: center;\n}\nli:hover {\n  cursor: pointer;\n}\n\n.autosuggest-container {\n  display: flex;\n  justify-content: center;\n  width: 280px;\n}\n\n.autosuggest__results-container{\n  position: absolute;\n  background: wheat;\n  width: 270px;\n}\n\n#autosuggest { width: 100%; display: block;}\n.autosuggest__results-item--highlighted {\n  background-color: rgba(51, 217, 178,0.2);\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=6f9ffdc7&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\nimport Autocomplete from 'v-autocomplete'\n\n// You need a specific loader for CSS files like https://github.com/webpack/css-loader\nimport 'v-autocomplete/dist/v-autocomplete.css'\n\nVue.use(Autocomplete)\n\nimport VueAutosuggest from \"vue-autosuggest\";\nVue.use(VueAutosuggest);\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n    data : {\n      pageTitle : 'yilnz\\'s 方舟驯服计算器'\n    }\n}).$mount('#app')\n\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ark.vue?vue&type=style&index=0&id=3cd50664&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Ark.vue?vue&type=style&index=0&id=3cd50664&scoped=true&lang=css&\""],"sourceRoot":""}